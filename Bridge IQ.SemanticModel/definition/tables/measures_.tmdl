table measures_
	lineageTag: 4f6dad67-79ad-4db3-9aa7-ea35ff6c1845

	measure 'Sum of freight_charges' =
			
			CALCULATE(
			    SUM(orders[freight_charge]),
			    USERELATIONSHIP(orders[shipper_sched_early_date],'Calendar'[Date])
			)
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Revenue Measures
		lineageTag: 89d17990-2077-45c7-af5c-49710ca0fdc8

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Sum of other_charges' =
			
			CALCULATE(
			    SUM(orders[other_charges_total]),
			    USERELATIONSHIP(orders[shipper_sched_early_date],'Calendar'[Date])
			)
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Revenue Measures
		lineageTag: 5f9abf81-2be6-48b2-9799-922feb050f30

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Total Revenue' = [Sum of freight_charges]+[Sum of other_charges]
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Revenue Measures
		lineageTag: 39ae93b5-50d6-453e-80c8-dbbb58f43df7

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Sum of override_pay_amt' =
			
			CALCULATE(
			    SUM(movements[override_pay_amt]),
			    USERELATIONSHIP(orders[shipper_sched_early_date],'Calendar'[Date])
			)
		displayFolder: Pay Measures
		lineageTag: 4afe6d8c-348c-4f5f-9fa1-593d24fa27a4

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Sum of driver_extra_pay' =
			
			CALCULATE(
			    SUM(driver_extra_pay[amount]),
			    USERELATIONSHIP(orders[shipper_sched_early_date],'Calendar'[Date])
			)
		displayFolder: Pay Measures
		lineageTag: 6be686a6-e220-4dff-91a4-141b0da5ca73

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Total Carrier Pay' = [Sum of driver_extra_pay]+[Sum of override_pay_amt]
		displayFolder: Pay Measures
		lineageTag: c7c5f213-a346-4367-8717-3924d6ef52da

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure Margin = CALCULATE([Total Revenue]-[Total Carrier Pay],movements[status]<>"A")
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		lineageTag: 3491f4d3-9764-45b7-a60b-c17891311500

	/// Counts the Rows of the Employee Table whose termination date are >= min(date), termination date <= max(date), and termination date are not blank
	measure 'Staff Turnover' =
			
			CALCULATE(
			    COUNTROWS(employees),
			    FILTER(VALUES(employees[Termination Date]),employees[Termination Date]>=MIN('calendar'[Date])),
			    FILTER(employees,employees[Termination Date]<=MAX('calendar'[Date])),
			    employees[Termination Date]<>BLANK()
			)
		formatString: 0
		displayFolder: HR
		lineageTag: 3f85f56a-a39f-40ee-82a3-6960eea53eb9

	measure 'Avg Monthy Head Count' =
			
			AVERAGEX(
			    SUMMARIZE(
			        'Calendar',
			        'Calendar'[Month / Year],
			        "avg head count",[Current Staff]
			    ),
			    [avg head count]
			)
		displayFolder: HR
		lineageTag: 24b21e8e-4c91-4e76-9c0a-d36e34fee514

	measure 'Current Staff' =
			
			CALCULATE(
			    COUNTROWS(employees),
			    FILTER(VALUES(employees[Hire Date]),employees[Hire Date] <= MAX('calendar'[Date])),
			    FILTER(VALUES(employees[Termination Date]), OR(employees[Termination Date] >= MIN('calendar'[Date]), ISBLANK(employees[Termination Date]))))
		formatString: 0
		displayFolder: HR
		lineageTag: 7f4fea41-84eb-4da1-a4e5-10b82bc756e7

	measure 'Turnover Rate' = DIVIDE([Staff Turnover],[Avg Monthy Head Count])
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: 44b3bc15-cc1c-4413-9ff3-e30f06a285e8

	measure 'Turnover Rate 12 Months Prior' = CALCULATE([Turnover Rate],DATEADD('Calendar'[Date],-12,MONTH))
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: 84493348-e95a-4075-aece-f38c8f0aead7

	measure 'Turnover YOY Variance' = [Turnover Rate]-[Turnover Rate 12 Months Prior]
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: a3afd5ea-9c53-4cd1-9707-cef0c1a8d083

	measure 'Avg Monthly Staff Turnover' =
			
			AVERAGEX(
			    SUMMARIZE(
			        'Calendar',
			        'Calendar'[Month / Year],
			        "avg staff turnover",[Staff Turnover]
			    ),
			    [avg staff turnover]
			)
		displayFolder: HR
		lineageTag: 4d740f20-09f9-4b84-9bb0-7cc7705ad68e

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Avg Monthly Turnover Rate' = DIVIDE([Avg Monthly Staff Turnover],[Avg Monthy Head Count])
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: 02a7ca5f-d396-4f11-884c-fe49f1305636

	measure 'Average Monthly Turnover Rate 12 Months Prior' = CALCULATE([Avg Monthly Turnover Rate],DATEADD('Calendar'[Date],-12,MONTH))
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: 13ea2ec0-3823-4fb7-aa81-01ad79e4b0f4

	measure 'Average Monthly YOY Variance' = [Avg monthly turnover Rate]-[Average Monthly Turnover Rate 12 Months Prior]
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: fb19c866-be07-47d3-b40e-8dbc4753e4d7

	measure 'Total Turnover Last 30 days' = DIVIDE([Staff Turnover Last 30 Days],[Current Staff Last 30 Days])
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: cf1e053e-55f5-48f8-a774-fa2363abc66e

	measure 'Staff Turnover Last 30 Days' =
			
			CALCULATE( COUNTROWS(employees),
			    FILTER( VALUES(employees[Termination Date]), employees[Termination Date]>= (TODAY()-30)),
			        employees[Termination Date]<>BLANK(),
			    FILTER(employees,employees[Termination Date]<=TODAY()))
		formatString: 0
		displayFolder: HR
		lineageTag: 64796ec6-6b55-45a7-8df6-97b6ee60b46c

	measure 'Current Staff Last 30 Days' =
			
			CALCULATE( COUNTROWS(employees),
			    FILTER(VALUES(employees[Hire Date]),employees[Hire Date] <= TODAY()),
			    FILTER( VALUES( employees[Termination Date]), OR( employees[Termination Date]>=(TODAY()-30),ISBLANK(employees[Termination Date]))))
		formatString: 0%;-0%;0%
		displayFolder: HR
		lineageTag: 6461da47-61c5-4590-9b18-723ef98fe1f5

	measure 'Turnover 60-30 Days Ago' = ```
			
			Var Twoma = 
			CALCULATE( COUNTROWS(employees),
			    FILTER( VALUES( employees[Termination Date]), employees[Termination Date]>= (TODAY()-60)),
			        employees[Termination Date]<>BLANK(),
			    FILTER(employees,employees[Termination Date]<=TODAY()-30))
			
			Var HeadCount2ma =  
			CALCULATE( COUNTROWS(employees),
			    FILTER(VALUES(employees[Hire Date]),employees[Hire Date] <= TODAY()-30),
			    FILTER( VALUES( employees[Termination Date]), OR( employees[Termination Date]>=(TODAY()-60),ISBLANK(employees[Termination Date]))))
			Var Turnover60to30daysAgo = DIVIDE(Twoma,HeadCount2ma)
			
			RETURN
			Turnover60to30daysAgo
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: edee7803-0364-4c4b-935c-72af59f7347f

	measure 'Turnover Rate variance 60-30 and 30-today' = [Total Turnover Last 30 days]-[Turnover 60-30 Days Ago]
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: HR
		lineageTag: 6157deea-5af5-43f7-ab18-cd548bcb7fa7

	measure 'Employees Hires' =
			
			CALCULATE( COUNTROWS(employees),
			    FILTER(VALUES(employees[Hire Date]),employees[Hire Date] <= MAX('Calendar'[Date])),
			    FILTER( VALUES( employees[Hire Date]), employees[Hire Date]>=MIN('Calendar'[Date])))
		formatString: 0
		displayFolder: HR
		lineageTag: 4910a8b9-24b3-42d7-9ca6-8314b8f73dba

	measure 'Hires 1MA' = CALCULATE([Employees Hires],DATEADD('Calendar'[Date],-1,MONTH))
		formatString: 0
		displayFolder: HR
		lineageTag: 8b95fa9b-1965-4c32-bc57-090b9f66bbb5

	measure 'Hires Vs Hires 1MA Variance' = [Employees Hires]-[Hires 1MA]
		formatString: 0
		displayFolder: HR
		lineageTag: ccb2c481-c962-4d98-8fff-547fa2ee9c46

	measure 'Hires 2MA' = CALCULATE([Employees Hires],DATEADD('Calendar'[Date],-2,MONTH))
		formatString: 0
		displayFolder: HR
		lineageTag: 3bd4bd75-c274-4c0c-876b-1e68d17cc48a

	measure 'Hires 2MA Vs Hires 1MA Variance' = [Hires 1MA]-[Hires 2MA]
		formatString: 0
		displayFolder: HR
		lineageTag: 0d3df909-9f69-47f7-8154-31b1c42a38e2

	measure '45 Day Review' = MIN(employees[Hire Date])+45
		formatString: Short Date
		displayFolder: HR\Check Ins
		lineageTag: 172b1ef2-2cac-43f6-9c29-dc0e18a4a509

	measure '1 Month Into SDR' =
			
			Var IfBefore15th = MIN(employees[Hire Date])+122
			Var IfAfter15th = MIN(employees[Hire Date])+136
			Var start_date_day_of_month = DAY(MIN(employees[Hire Date]))
			Var IFS = IF(start_date_day_of_month<15,IfBefore15th,IfAfter15th)
			
			RETURN
			IFS
		formatString: Short Date
		displayFolder: HR\Check Ins
		lineageTag: 2b048199-89b7-40a6-a333-8329aaa3a48a

	measure '1 Month Into D Team' =
			
			Var IfUnder15 = MIN(employees[Hire Date])+213
			Var IfAfter15 =MIN(employees[Hire Date])+227
			Var start_date_day_of_month = DAY(MIN(employees[Hire Date]))
			Var IFS = IF(start_date_day_of_month<15,IfUnder15,IfAfter15)
			
			Return
			IFS
		formatString: Short Date
		displayFolder: HR\Check Ins
		lineageTag: 76938b93-0cab-4366-b94b-9b6aa87f34e3

	measure 'D-Team Move Date' = ```
			
			Var job_history_d_team_date = 
			    CALCULATE(
			        MIN(job_history[Job Start Date]),
			        FILTER(job_history,job_history[Division]="Development Team Sales"))
			Var sdr_date_plus_90 =[SDR Move Date]+100
			Var estemate_of_d_team_move_date= CEILING(EOMONTH(sdr_date_plus_90,-1)-1,7)+2
			
			Var ifs = 
			    IF(job_history_d_team_date=BLANK(),
			    estemate_of_d_team_move_date,
			    job_history_d_team_date
			    )
			
			RETURN
			FORMAT(ifs,"Short Date")
			```
		displayFolder: HR\Move Dates
		lineageTag: cb27c10a-85f5-46fc-b8c1-eb7f6b33eb82

	measure 'Henry Move Date' = ```
			
			Var job_history_henry_date = 
			    CALCULATE(
			        MIN(job_history[Job Start Date]),
			        FILTER(job_history,job_history[Division]="Logistics Advisor Sales (Formerly Henry)"))
			Var Dteam_date_plus_90 =[D-Team Move Date]+100
			Var estemate_of_henry_move_date= CEILING(EOMONTH(Dteam_date_plus_90,-1)-1,7)+2
			
			Var ifs = 
			    IF(job_history_henry_date=BLANK(),
			    EDATE(estemate_of_henry_move_date, 3),
			    job_history_henry_date - 1
			    )
			
			Var ifs_plus_6_months = EDATE(estemate_of_henry_move_date, 3)
			
			RETURN
			FORMAT(ifs,"Short Date")
			```
		displayFolder: HR\Move Dates
		lineageTag: 9e50448b-7070-4aea-8bf5-4238b9fb76d8

	measure 'LA Move Date color' =
			
			
			var LA = CONTAINSSTRING(min(employees[Devision]),"Logistics Advisor Sales")
			VAR IFS = IF(LA = TRUE,1,0)
			
			RETURN
			IFS
		formatString: 0
		displayFolder: HR\Move Dates
		lineageTag: 92c48fc4-72d9-4870-aa26-500a9ab2577c

	measure 'Ops Team Move Date' = SUM(employees[Hire Date])+14
		formatString: Short Date
		displayFolder: HR\Move Dates
		lineageTag: cfcd1c60-9853-4860-826b-d020ea0080b7

	measure 'SDR Move Date' = ```
			
			Var job_history_sdr_date = 
			    CALCULATE(
			        MIN(job_history[Job Start Date]),
			        FILTER(job_history,job_history[Division]="SDR Team"))
			Var hire_date_plus_90 = MIN(employees[Hire Date])+90
			Var first_monday_of_hire_plus_90 = CEILING(EOMONTH(hire_date_plus_90,-1)-1,7)+2
			Var first_monday_of_next_month = CEILING(EOMONTH(hire_date_plus_90,-0)-1,7)+2
			Var employee_start_day_of_month = DAY(MIN(employees[Hire Date]))
			Var estamate_of_sdr_move_date = 
			    IF(employee_start_day_of_month>15,
			    first_monday_of_next_month,
			    first_monday_of_hire_plus_90
			    )
			Var ifs = 
			    IF(job_history_sdr_date=BLANK(),
			    estamate_of_sdr_move_date,
			    job_history_sdr_date
			    )
			
			RETURN
			FORMAT(ifs,"Short Date")
			```
		displayFolder: HR\Move Dates
		lineageTag: eb84ecc1-09f5-45f5-8e43-77dfb52ae922

	measure 'Ops Move Date color' =
			
			
			VAR OPS = CONTAINSSTRING(min(employees[Devision]),"CRT")
			VAR IFS = IF(OPS = TRUE,1,0)
			
			RETURN
			IFS
		formatString: 0
		displayFolder: HR\Move Dates
		lineageTag: aefaa231-2640-4693-8651-522f6a239055

	measure 'SDR Move Date color' =
			
			
			VAR SDR =CONTAINSSTRING(min(employees[Devision]),"SDR")
			VAR IFS = IF(SDR = TRUE,1,0)
			
			RETURN
			IFS
		formatString: 0
		displayFolder: HR\Move Dates
		lineageTag: bb1dbbcd-506c-4916-9220-e69080250954

	measure 'D-Team Move Date color' =
			
			
			var dteam = CONTAINSSTRING(min(employees[Devision]),"Development Team")
			VAR IFS = IF(dteam = TRUE,1,0)
			
			RETURN
			IFS
		formatString: 0
		displayFolder: HR\Move Dates
		lineageTag: c3103726-c85a-4789-8119-103a5a4e8749

	measure 'Current Carrier Booking Team' =
			
			CALCULATE(
			    COUNTROWS(job_history),
			    FILTER(VALUES(job_history[Job Start Date]),job_history[Job Start Date] <= MAX('calendar'[Date])),
			    FILTER(VALUES(job_history[Job End Date]), OR(job_history[Job End Date] >= MIN('calendar'[Date]), ISBLANK(job_history[Job End Date]))),
			    FILTER(job_history,job_history[Division]="CRT-Booking"))
		formatString: 0
		lineageTag: 37af42d0-1cf4-4736-9874-ace293c6c112

	measure 'Count of Movements Booked' =
			
			CALCULATE(
			    DISTINCTCOUNT(movements[id]),
			    FILTER(movements,movements[status]<>"Available"),
			    FILTER(orders,orders[shipper_sched_early_date]>=MIN('Calendar'[Date])),
			    FILTER(orders,orders[shipper_sched_early_date]<=MAX('Calendar'[Date])
			))
		formatString: 0
		lineageTag: 9a92c758-8ba8-4423-a380-55402b47cdf1

	measure 'Count of Orders Covered' =
			
			CALCULATE(
			    DISTINCTCOUNT(orders[id]),
			        FILTER(orders,orders[shipper_sched_early_date]>=MIN('Calendar'[Date])),
			        FILTER(orders,orders[shipper_sched_early_date]<=MAX('Calendar'[Date])),
			        FILTER(movements,movements[status]<>"A")
			    )
		formatString: 0
		displayFolder: Operations Measures
		lineageTag: ebc9309e-c0e2-478d-8534-2f3bb96fc500

	measure NFM =
			
			IF(
			    OR(
			    CONTAINSSTRING(
			        MIN(orders[commodity]),
			        "ALUMINUM"),
			    OR(
			        CONTAINSSTRING(
			        MIN(orders[commodity]),
			        "ALUMINIUM"),
			       OR(
			         CONTAINSSTRING(
			            MIN(orders[commodity]),
			            "BRASS"),
			            CONTAINSSTRING(
			                MIN(orders[commodity]),
			                "copper")
			       )
			    )
			    )
			    =TRUE(),1,0)
		formatString: 0
		lineageTag: bfd2434a-f31c-4d5d-ac33-c298f525ce2f

	/// Count of Movements Booked that are greater then 50 miles and the order type is FTL, BW, or PARTIAL
	measure 'Count of Trackable Movements' = ```
			
			Var count_ftl = 
			    CALCULATE([Count of Movements Booked],
			        orders[order_type_id]="FTL",
			        orders[bill_distance]>50)
			Var count_bw = 
			    CALCULATE([Count of Movements Booked],
			        orders[order_type_id]="BW",
			        orders[bill_distance]>50)
			        
			Var count_partials =
			    CALCULATE([Count of Movements Booked],
			        orders[order_type_id]="PARTIAL",
			        orders[bill_distance]>50)
			Var count_of_trackable_movements = count_ftl+count_bw+count_partials
			RETURN
			count_of_trackable_movements
			```
		formatString: 0
		displayFolder: Movement Measures\Callins Measures
		lineageTag: c307429e-78d5-4ff6-9520-469c4a7cd9a8

	/// The distinct count of callin movements that were entered by loadmaster and has at least one tracking ping
	measure 'Count of movements with 3 or more pings' =
			
			CALCULATE(DISTINCTCOUNT(callins[movement_id]),
			FILTER(GROUPBY(callins,callins[movement_id]),[Count of tracking pings]>=3))
		displayFolder: Movement Measures\Callins Measures
		lineageTag: df5754d3-b223-4231-bb8a-39def543c971

	/// Count of callins that were entered by loadmaster
	measure 'Count of tracking pings' = CALCULATE([Count of Callins],callins[entered_by]="loadmaster")
		formatString: 0
		displayFolder: Movement Measures\Callins Measures
		lineageTag: d3d0a73b-eeb1-4a55-9c16-c4d20e38a90e

	measure 'Count of Callins' = COUNTROWS(callins)
		formatString: 0
		lineageTag: 745f6c52-bce7-4aed-a430-abd1d9155a54

	/// Divides count of movements with 3 or more ping by count of trackable movements
	measure 'Percentage Of movement with 3 or more pings' = DIVIDE([Count of movements with 3 or more pings],[Count of Trackable Movements])
		displayFolder: Movement Measures\Callins Measures
		lineageTag: 06663e34-2ac5-4c2d-b23e-2f4cdab296d3

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Count of Overdue Check Call' =
			
			CALCULATE(
			    COUNTROWS(overdue_check_calls),
			    FILTER(overdue_check_calls,overdue_check_calls[Check Call Date]>=MIN('Calendar'[Date])),
			    FILTER(overdue_check_calls,overdue_check_calls[Check Call Date]<=MAX('Calendar'[Date]))
			)
		formatString: 0
		lineageTag: 2df9d954-b218-472b-b5c9-66cf04dec2ff

	measure 'Date Diff order_entered_date vs shipper_sched_early_date' =
			
			//CALCULATE(
			    DATEDIFF(MIN(orders[order_entered_date]),MIN(orders[shipper_sched_early_date]),DAY)//,
			    //FILTER(orders,orders[order_entered_date]>=MIN('Calendar'[Date])),
			    //ILTER(orders,orders[order_entered_date]<=MAX('Calendar'[Date]))
			//)
		formatString: 0
		lineageTag: 1859b08e-036c-4f3d-9186-8e213722335d

	measure 'Date Diff Avail time vs shipper_sched_early_date' = DATEDIFF(MIN(crt_movement_data[Avail Time]),MIN(orders[shipper_sched_early_date]),DAY)
		formatString: 0
		lineageTag: a19ead59-399d-4cc4-81fd-897c3024e0b9

	measure 'Median Days Between enterd date and ship datea' = MEDIANX(orders,[Date Diff order_entered_date vs shipper_sched_early_date])
		lineageTag: bf444e09-38a4-4f81-8c72-1f59b76f2e49

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Movements Passed During Date Range' =
			
			CALCULATE(
			    DISTINCTCOUNT(crt_movement_data[Movement ID]),
			    FILTER(orders,orders[shipper_sched_early_date]>=MIN('Calendar'[Date])),
			    FILTER(orders,orders[shipper_sched_early_date]<=MAX('Calendar'[Date]))
			)
		formatString: 0
		lineageTag: ddd39222-cbdb-4e56-b194-734028683608

	measure 'Margin Goal' = ```
			CALCULATE(
			    SUM(margin_load_count_goals[Margin Goal]),
			    FILTER(orders,orders[shipper_sched_early_date]>=MIN('Calendar'[Date])),
			    FILTER(orders,orders[shipper_sched_early_date]<=MAX('Calendar'[Date]))
			)
			
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Sales Measures\Sales Goals\Margin
		lineageTag: 55363ec6-7790-4d0d-8a43-73c298dc5628

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Margin per day Goal' = ```
			
			Var workingdays = 
			    NETWORKDAYS(
			        STARTOFMONTH('Calendar'[Date]),
			        ENDOFMONTH('Calendar'[Date]),
			        1,
			        observed_holidays)
			Var months_margin_goal = CALCULATE([Margin Goal],REMOVEFILTERS('calendar'[Date]))
			Var override_mpdg = CALCULATE([Override margin goal],REMOVEFILTERS('calendar'[Date]))
			Var mpd = DIVIDE(months_margin_goal,workingdays)
			
			Var override_blank = IF(override_mpdg=0,mpd,override_mpdg)
			
			Var wolf_pack_switch = SWITCH(TRUE(),SELECTEDVALUE(wolf_pack[wolf_pack])=BLANK(),override_blank,mpd)
			
			Var mpdg = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Name])=BLANK(),wolf_pack_switch,mpd)
			
			Return
			mpdg
			```
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Sales Measures\Sales Goals\Margin
		lineageTag: 3c153d48-ca5a-4d48-985d-cdb795469f1a

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Override margin goal' = SUM(daily_number_override[Margin Number])
		formatString: 0
		displayFolder: Sales Measures\Sales Goals\Margin
		lineageTag: 58b95798-7025-4b5f-b506-d04cbc04c4ea

	measure 'Best Margin Month Ever' =
			
			CALCULATE(
			    MAXX(
			        GROUPBY('calendar','calendar'[Month / Year]),
			        [Margin]),
			        REMOVEFILTERS('calendar'[Year]),
			        REMOVEFILTERS('calendar'[Month Name])
			)
		lineageTag: daef51bf-c98d-4a88-b79f-8f3c7b345729

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Margin vs Margin Goal Gauge Max' = [Margin Vs Margin Goal Target]*1.2
		lineageTag: 745cec3f-21ab-43c5-b78f-9f250e7f422a

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Margin Vs Margin Goal Target' = ```
			
			Var workingdays = 
			    NETWORKDAYS(
			        STARTOFMONTH('Calendar'[Date]),
			        ENDOFMONTH('Calendar'[Date]),
			        1,
			        observed_holidays)
			Var months_margin_goal = CALCULATE([Margin Goal],REMOVEFILTERS('calendar'[Date]))
			Var override_mpdg = CALCULATE([Override margin goal],REMOVEFILTERS('calendar'[Date]))
			Var mpd = DIVIDE(months_margin_goal,workingdays)
			
			Var override_blank = IF(override_mpdg=0,mpd,override_mpdg)
			
			Var wolf_pack_switch = SWITCH(TRUE(),SELECTEDVALUE(wolf_pack[wolf_pack])=BLANK(),override_blank,mpd)
			
			Var mpdg = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Name])=BLANK(),wolf_pack_switch,mpd)
			Var margin_vs_margin_goal_taget = mpdg*workingdays
			
			Return
			margin_vs_margin_goal_taget
			```
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		lineageTag: 966f15fa-987f-4b97-9482-70a30dd385aa

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Load Count Goal' = ```
			
			Var margin_per_order_LM = CALCULATE([Margin Per Order],DATEADD('calendar'[Date],-  1,MONTH))
			Var load_count_goal = DIVIDE([Margin Goal],margin_per_order_LM)
			Var ifs= 
			    IF(margin_per_order_LM=0,5,load_count_goal)
			
			Return 
			ifs
			```
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Sales Measures\Sales Goals
		lineageTag: 2a86da4e-c9e9-4e86-9b72-e31c6127ff29

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Margin Per Order' = DIVIDE([Margin], [Count of Orders Covered])
		formatString: \$#,0.00;(\$#,0.00);\$#,0.00
		displayFolder: Sales Measures
		lineageTag: 1e92098d-807f-401d-8b48-026cdf35c733

	measure 'Load Count Vs Load Count Goal Target' = ```
			
			Var margin_per_order_LM = CALCULATE([Margin Per Order],DATEADD('calendar'[Date],-  1,MONTH))
			Var load_count_goal = DIVIDE([Margin Vs Margin Goal Target],margin_per_order_LM)
			Var ifs= 
			    IF(margin_per_order_LM=0,5,load_count_goal)
			
			Return 
			ifs
			```
		formatString: 0
		displayFolder: Sales Measures\Sales Goals
		lineageTag: 704d7233-1d7c-45f8-bfcf-191b95d7ba85

	measure 'Load Count Vs Load Count Goal Guage Max' = [Load Count Vs Load Count Goal Target]*1.2
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Sales Measures\Sales Goals
		lineageTag: 9db04751-8d6c-420e-94b4-920d257f54ae

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Margin Per Order Goal' = AVERAGE(margin_load_count_goals[Margin Per Order Goal])
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Sales Measures
		lineageTag: 63a8de8b-8087-47f7-a15c-70f504db55bb

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Margin Per Order Vs Margin Per Order Guage Max' = [Margin Per Order Goal]*1.2
		formatString: \$#,0.###############;(\$#,0.###############);\$#,0.###############
		displayFolder: Sales Measures
		lineageTag: 6aba0cbd-4108-449d-b002-60f0d64d4642

		annotation PBI_FormatHint = {"currencyCulture":"en-US"}

	measure 'Margin %' = DIVIDE([Margin],[Total Revenue])
		formatString: 0%;-0%;0%
		lineageTag: 60d83be5-356c-48e2-afb8-950ca6a8f0d6

	measure 'Avg Margin % Goal' = AVERAGE(margin_load_count_goals[Margin % Goal])
		displayFolder: Sales Measures\Sales Goals
		lineageTag: 25b26eda-8482-4b31-b474-39dd05f20b67

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Margin % vs Margin % Gaol Guage Max' = [Avg Margin % Goal]*1.2
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales Measures\Sales Goals
		lineageTag: 52135639-0ea4-4a21-b50b-d3cda46d34ab

	measure 'Count of Behaviors' =
			
			CALCULATE(
			    DISTINCTCOUNT(behaviors[id]),
			    USERELATIONSHIP(behaviors[Behavior Date],'Calendar'[Date])
			)
		formatString: 0
		displayFolder: Behavior Measures
		lineageTag: 508c3248-8bb5-49b4-aa0b-b1b8441be78a

	measure 'Behavior Goal' =
			
			CALCULATE(
			    SUM(behavior_goals[Goal]),
			    USERELATIONSHIP(behaviors[Behavior Date],'Calendar'[Date])
			)
		formatString: 0
		displayFolder: Behavior Measures
		lineageTag: d9fa1a26-27a0-4cdf-91c4-74dae6b80875

	measure 'Behavior Progress' = ```
			
			VAR behavior_progress = DIVIDE([Count of Behaviors],[Behavior Goal])
			VAR ifs = 
			    IF(behavior_progress=0,0,
			    IF(behavior_progress>=1,1,
			    behavior_progress)
			    )   
			
			RETURN
			ifs
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Behavior Measures
		lineageTag: 9425cfaf-692b-4c97-be0b-9419a7facb61

	measure 'Customer Margin Goal' =
			
			CALCULATE(
			    SUM(customer_margin_goal[Margin Goal]),
			    FILTER(customer_margin_goal,customer_margin_goal[Month]>=MIN('Calendar'[Date])),
			    FILTER(customer_margin_goal,customer_margin_goal[Month]<=MAX('Calendar'[Date]))
			)
		formatString: 0
		displayFolder: Sales Measures\Sales Goals\Margin
		lineageTag: 8a792569-588e-4c4e-bd17-d3cb5ef75342

	measure 'Customer Margin vs Customer Margin Goal Variance' = if([Customer Margin Goal]<=0,BLANK(),[Margin]-[Customer Margin Goal])
		displayFolder: Sales Measures\Sales Goals\Margin
		lineageTag: 438d88b1-8efa-4ed8-bfa5-327e8f10a2b2

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Last Ship Date' =
			
			CALCULATE(
			    MAX(orders[shipper_sched_early_date]),
			    FILTER(movements,movements[status]<>"A")
			)
		formatString: Short Date
		displayFolder: Operations Measures
		lineageTag: 4ddeeb99-9208-43d3-9de0-e78a3a002678

	measure 'Days Since Last Shipment' = DATEDIFF([Last Ship Date],TODAY(),DAY)
		formatString: 0
		displayFolder: Operations Measures
		lineageTag: cd2518a5-1971-4101-b5d5-a517690f5c58

	measure 'Days since Last Stage Update' = ```
			
			 DATEDIFF(
			    MAX(crm[Last Stage Change]),TODAY(),DAY)
			```
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: ecc086f7-a6d4-4e6c-b109-8712f700c70f

	measure 'Last Behavior Date' = MAX(behaviors[Behavior Date])
		formatString: Short Date
		displayFolder: CRM Measures
		lineageTag: 9de3f64a-8161-47da-8c52-3bc6064fa7f6

	measure 'Days since last Behaivor' = DATEDIFF([Last Behavior Date],TODAY(),DAY)
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: 939bbb4f-4255-422a-8b62-c12028881045

	measure 'Days Over Due' = ```
			
			Var next_behavior_deadline = MAX(crm[activity_date_deadline])
			Var days_over_due = DATEDIFF(next_behavior_deadline,TODAY(),DAY)
			
			Return 
			days_over_due
			```
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: b3661191-11ac-461a-a125-be02d2b1eafa

	measure 'Days since Last Shipment is over 120' = ```
			
			Var at_risk = IF([Days Since Last Shipment]>120,1,0)
			Var ifs = 
			    IF(MIN(crm[Stage])="Customer",at_risk,
			    IF(MIN(crm[Stage])="1-3 Loads",at_risk,0))
			
			
			return
			ifs
			```
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: 3793a2a6-a34b-4e02-85bd-cbb0c0bb76e4

	measure 'Days since last stage update is one of the reasons at risk reason' = ```
			
			Var prospect_at_risk = if([Days since Last Stage Update]>90,1,0)
			Var pipeline_at_risk = IF([Days since Last Stage Update]>60,1,0)
			Var ifs = 
			    IF(MIN(crm[Stage])="Customer",0,
			    IF(MIN(crm[Stage])="Working",prospect_at_risk,
			    IF(MIN(crm[Stage])="No For Now",prospect_at_risk,
			    IF(MIN(crm[Stage])="Qualified",pipeline_at_risk,
			    IF(MIN(crm[Stage])="Quoted",pipeline_at_risk,
			    IF(MIN(crm[Stage])="Credit App",pipeline_at_risk,
			    IF(MIN(crm[Stage])="1-3 Loads",pipeline_at_risk,0)))))))
			
			Return
			ifs
			```
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: 42d46d32-f0e6-41df-b84d-8c3cfdc8b2a9

	measure 'Days Since Last Behavior is one of the reason for at risk' = ```
			
			Var opportunity_at_risk = IF([Days since last Behaivor]>60,1,0)
			Var working_at_risk = IF([Days since last Behaivor]>60,1,0)
			Var no_for_now_at_risk = IF([Days since last Behaivor]>90,1,0)
			
			Var Ifs = 
			    IF(MIN(crm[Stage])="Qualified",opportunity_at_risk,
			    IF(MIN(crm[Stage])="Quoted",opportunity_at_risk,
			    IF(MIN(crm[Stage])="Credit App", opportunity_at_risk,
			    IF(MIN(crm[Stage])="1-3 Loads",opportunity_at_risk,
			    IF(MIN(crm[Stage])="Customer",opportunity_at_risk,
			    IF(MIN(crm[Stage])="Working",working_at_risk,
			    IF(MIN(crm[Stage])="No For Now",no_for_now_at_risk,0)))))))
			
			Return
			Ifs
			```
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: d2fccc3b-65d6-4647-81ff-6908557e9873

	measure 'Days since last Salesperson Update' = DATEDIFF(MAX(crm[date_open]),TODAY(),DAY)
		formatString: 0
		displayFolder: CRM Measures
		lineageTag: cfbd7a5c-e9af-4629-a9f9-e6c37a23dfdc

	measure 'Count at Risk (inactive relationship)' =
			
			VAR filter_inactive =
			CALCULATE(
			    COUNTA(crm[id]),
			    USERELATIONSHIP(crm[user_id],salesperson_key[Name]),
			    FILTER(crm,crm[At Risk]="TRUE"),
			    FILTER(crm,crm[user_id]<>BLANK())
			)
			
			
			RETURN
			filter_inactive
		formatString: 0
		displayFolder: CRM Measures\At Risk Measures
		lineageTag: 81759a22-7856-45de-82cd-a68019cf40d6

	measure 'Count CRM Ids (inactive relationship)' =
			
			VAR filter_inactive =
			CALCULATE(
			    COUNTA(crm[id]),
			    USERELATIONSHIP(crm[user_id],salesperson_key[Name]),
			    FILTER(crm,crm[user_id]<>BLANK())
			)
			
			
			RETURN
			filter_inactive
		formatString: 0
		displayFolder: CRM Measures
		lineageTag: 19e37e8b-c64b-48e0-b627-934b7174ffa5

	measure 'Healthy Pipeline Goal' = SUM(healthy_pipeline_goals[Healthy #])
		formatString: 0
		displayFolder: CRM Measures
		lineageTag: e0a10483-e230-4010-bcb6-233162a58619

	column Column
		isHidden
		formatString: 0
		lineageTag: 746e082c-433f-4c69-8ea2-18b07c8517b2
		summarizeBy: sum
		isNameInferred
		sourceColumn: [Column]

		annotation SummarizationSetBy = Automatic

	partition measures_ = calculated
		mode: import
		source = Row("Column", BLANK())

	annotation PBI_Id = cb8739f6b6f74399b74587f43495ffe2

	annotation 436ba87b-9c83-4389-a31b-ebd06a36be98 = {"Expression":""}

