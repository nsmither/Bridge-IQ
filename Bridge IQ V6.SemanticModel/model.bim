{
  "compatibilityLevel": 1601,
  "model": {
    "annotations": [
      {
        "name": "PBI_QueryOrder",
        "value": "[\"behavior_key\",\"behaviors_crm\",\"behavior_goals\",\"bws_behaviors\",\"callins\",\"carrier_key\",\"contacts_module\",\"contacts_parent\",\"crm\",\"crm_customer_key\",\"crm_parent_customer_key\",\"crm_stages\",\"customer_duns\",\"customer_key\",\"customer_margin_goal\",\"daily_numbers\",\"daily_number_override\",\"dispatcher_key\",\"dnc\",\"HealthyPipelineGoals\",\"images\",\"lanes\",\"lead_ops\",\"margin_load_count_goals\",\"movements\",\"observed_holidays\",\"Old Callins\",\"orders\",\"overdue_check_calls\",\"parade_orders\",\"parent_customer_key\",\"pcs_loads\",\"recruiter_key\",\"calendar\",\"recruitment\",\"Parameter2\",\"Transform Sample File (2)\",\"Sample File (2)\",\"Transform File (2)\",\"Parameter3\",\"Transform Sample File (3)\",\"Sample File (3)\",\"Transform File (3)\",\"recruitment_goals\",\"Parameter6\",\"Transform Sample File (6)\",\"Sample File (6)\",\"Transform File (6)\",\"rev_codes\",\"salesperson_change\",\"sdr_key\",\"sop_issues\",\"wolf_pack\",\"Parameter5\",\"Transform Sample File (5)\",\"Sample File (5)\",\"Transform File (5)\",\"Parameter1\",\"Transform Sample File\",\"Sample File\",\"Transform File\",\"shipper_zips\",\"shipper_three_digit_zips\",\"consignee_zip_codes\",\"consignee_three_digit_zip_codes\",\"payments_received\",\"avereage_days_to_pay\",\"carrier_dispatch_movement_data\",\"check_call_roller\",\"highway_onboarded\",\"pay_schedule\",\"job_history\",\"employees\",\"salesperson_key\"]"
      },
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.131.1203.0 (24.07)"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      }
    ],
    "culture": "en-US",
    "cultures": [
      {
        "name": "en-US",
        "linguisticMetadata": {
          "content": {
            "Entities": {
              "check_call_roller.scheduled_check_call_time": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "check_call_roller",
                    "ConceptualProperty": "Scheduled Check Call Time"
                  }
                },
                "State": "Generated"
              },
              "measures_.avg_margin__goal": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Avg Margin % Goal"
                  }
                },
                "State": "Generated"
              },
              "measures_.count_of_carrier_onboards_crt": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Carrier Onboards CRT"
                  }
                },
                "State": "Generated"
              },
              "measures_.count_of_movements_with_1_or_more_pings": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of movements with 1 or more pings"
                  }
                },
                "State": "Generated"
              },
              "measures_.count_of_movements_with_3_or_more_pings": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of movements with 3 or more pings"
                  }
                },
                "State": "Generated"
              },
              "measures_.count_of_orders_covered": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Orders Covered"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Orders Covered": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.count_of_orders_covered_1ma": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Orders Covered 1MA"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Orders Covered 1MA": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.count_of_orders_covered_1ya": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Orders Covered 1YA"
                  }
                },
                "State": "Generated"
              },
              "measures_.count_of_orders_covered_by_team": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of orders covered by team"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "orders covered by team": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Team": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Covered by team": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.count_of_orders_covered_crt": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of orders covered CRT"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "orders covered CRT": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "CRT": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Covered by CRT": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Covered CRT": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.count_of_orders_covered_mom_variance": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Orders Covered MOM Variance"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Orders Covered MOM Variance": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.count_of_orders_covered_mtd": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Orders Covered MTD"
                  }
                },
                "State": "Generated"
              },
              "measures_.count_of_orders_covered_parade": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of orders covered Parade"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Parade": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Covered by Parade": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Covered Parade": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.count_of_trackable_movements": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Count of Trackable Movements"
                  }
                },
                "State": "Generated"
              },
              "measures_.customer_margin_vs_customer_margin_goal_variance": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Customer Margin vs Customer Margin Goal Variance"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Variance": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.load_count_mtd_1ma": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Load Count MTD 1MA"
                  }
                },
                "State": "Generated"
              },
              "measures_.load_count_mtd_1ya": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Load Count MTD 1YA"
                  }
                },
                "State": "Generated"
              },
              "measures_.load_count_qoq_qtd": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Load Count QOQ QTD"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin__mtd_goal_variance": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin % MTD Goal Variance"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin_mtd_goal": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin MTD Goal"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin_mtd_sppy": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin MTD SPPY"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin_mtd_sppy_1ya": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin MTD SPPY 1YA"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin_mtd_vs_margin_mtd_goal_variance": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin MTD vs Margin MTD Goal variance"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin_per_order": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin Per Order"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Margin Per Order 1MA": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.margin_ytd_sppy": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin YTD SPPY"
                  }
                },
                "State": "Generated"
              },
              "measures_.margin_ytd_sppy_1ya": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Margin YTD SPPY 1YA"
                  }
                },
                "State": "Generated"
              },
              "measures_.of_eligible_loads_covered_crt__p_pass_back_1_or_more": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "% of eligible loads covered CRT + P (Pass Back 1 or more)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Eligible loads covered CRT + P (1 or more)": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.of_orders_covered_crt": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "% of orders covered CRT"
                  }
                },
                "State": "Generated"
              },
              "measures_.pass_rate_sales_to_crt": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Pass Rate (Sales to CRT)"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Pass Rate": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "measures_.percentage_of_movement_with_1_or_more_pings": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Percentage Of movement with 1 or more pings"
                  }
                },
                "State": "Generated"
              },
              "measures_.percentage_of_movement_with_3_or_more_pings": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Percentage Of movement with 3 or more pings"
                  }
                },
                "State": "Generated"
              },
              "measures_.revenue_covered": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Revenue Covered"
                  }
                },
                "State": "Generated"
              },
              "measures_.sumx_total_overdue": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "SumX Total Overdue"
                  }
                },
                "State": "Generated"
              },
              "measures_.total_load_count_1ya": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Total load Count 1YA"
                  }
                },
                "State": "Generated"
              },
              "measures_.total_success_rate": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "measures_",
                    "ConceptualProperty": "Total Success Rate"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Success Rate": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "overdue_check_calls.check_call_time": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "overdue_check_calls",
                    "ConceptualProperty": "Check Call time"
                  }
                },
                "State": "Generated"
              }
            },
            "Language": "en-US",
            "Version": "2.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "fastCombine": true,
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "expressions": [
      {
        "name": "Parameter2",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File (2)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File (2)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "2a2d6480-4326-4322-a8ed-bd75864846ae",
        "queryGroup": "Transform File from behaviors_api_files\\Helper Queries"
      },
      {
        "name": "Transform Sample File (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Parameter2, null, true),",
          "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true])",
          "in",
          "    #\"Promoted Headers\""
        ],
        "kind": "m",
        "lineageTag": "e188d3b6-9cb1-4417-8950-724e028a31a3",
        "queryGroup": "Transform File from behaviors_api_files"
      },
      {
        "name": "Sample File (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "    Source = Folder.Files(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\behaviors_api_files\"),",
          "    Navigation1 = Source{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "cf0b956c-8600-4a90-b2e4-3a8bb8ba22b2",
        "queryGroup": "Transform File from behaviors_api_files\\Helper Queries"
      },
      {
        "name": "Transform File (2)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Source = (Parameter2 as binary) => let",
          "        Source = Excel.Workbook(Parameter2, null, true),",
          "        Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "        #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true])",
          "    in",
          "        #\"Promoted Headers\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "75c4861b-a63d-4740-b539-8a859a4dd6bd",
        "queryGroup": "Transform File from behaviors_api_files\\Helper Queries"
      },
      {
        "name": "Parameter3",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File (3)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File (3)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "49e89b59-584c-4e32-909d-51ce2db1b928",
        "queryGroup": "Transform File from parade_orders_api_files\\Helper Queries"
      },
      {
        "name": "Transform Sample File (3)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Parameter3, null, true),",
          "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true])",
          "in",
          "    #\"Promoted Headers\""
        ],
        "kind": "m",
        "lineageTag": "b4473ae0-a2c9-4a3d-a7f9-9a8ecbbc8c86",
        "queryGroup": "Transform File from parade_orders_api_files"
      },
      {
        "name": "Sample File (3)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "    Source = Folder.Files(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\parade_orders_api_files\"),",
          "    Navigation1 = Source{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "a69789e0-ac15-4bdb-92c9-fedc63f3984c",
        "queryGroup": "Transform File from parade_orders_api_files\\Helper Queries"
      },
      {
        "name": "Transform File (3)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Source = (Parameter3 as binary) => let",
          "        Source = Excel.Workbook(Parameter3, null, true),",
          "        Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "        #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true])",
          "    in",
          "        #\"Promoted Headers\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "336fdc34-088f-47c7-a9be-92ca3c08af01",
        "queryGroup": "Transform File from parade_orders_api_files\\Helper Queries"
      },
      {
        "name": "Parameter6",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File (6)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File (6)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "c3dafccf-d036-4b92-8002-193863622695",
        "queryGroup": "Transform File from Query1\\Helper Queries"
      },
      {
        "name": "Transform Sample File (6)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Parameter6, null, true),",
          "    overdue_check_calls_Table = Source{[Item=\"overdue_check_calls\",Kind=\"Table\"]}[Data]",
          "in",
          "    overdue_check_calls_Table"
        ],
        "kind": "m",
        "lineageTag": "9ba321c4-0e3f-4c5c-8671-0d97be3abd56",
        "queryGroup": "Transform File from Query1"
      },
      {
        "name": "Sample File (6)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "    Source = SharePoint.Files(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam\", [ApiVersion = 15]),",
          "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Overdue Check Call/\")),",
          "    Navigation1 = #\"Filtered Rows\"{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "22c385c7-2f8d-4f21-8947-620ee1470bd4",
        "queryGroup": "Transform File from Query1\\Helper Queries"
      },
      {
        "name": "Transform File (6)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Source = (Parameter6 as binary) => let",
          "        Source = Excel.Workbook(Parameter6, null, true),",
          "        overdue_check_calls_Table = Source{[Item=\"overdue_check_calls\",Kind=\"Table\"]}[Data]",
          "    in",
          "        overdue_check_calls_Table",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "87de5f5d-0d5e-4648-831e-5ba554d8d433",
        "queryGroup": "Transform File from Query1\\Helper Queries"
      },
      {
        "name": "customer_duns",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Customer%20Duns.xlsx\"), null, true),",
          "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Changed Type2\" = Table.TransformColumnTypes(Sheet1_Sheet,{{\"Column1\", type text}, {\"Column2\", type text}}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Changed Type2\",{{\"Column1\", type text}, {\"Column2\", type text}}),",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Changed Type\", [PromoteAllScalars=true]),",
          "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Code\", type text}, {\"D & B number\", type text}})",
          "in",
          "    #\"Changed Type1\""
        ],
        "kind": "m",
        "lineageTag": "495e790e-954f-48c9-96fe-44cf692da953"
      },
      {
        "name": "parade_orders",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Folder.Files(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\parade_orders_api_files\"),",
          "    #\"Filtered Hidden Files1\" = Table.SelectRows(Source, each [Attributes]?[Hidden]? <> true),",
          "    #\"Invoke Custom Function1\" = Table.AddColumn(#\"Filtered Hidden Files1\", \"Transform File (3)\", each #\"Transform File (3)\"([Content])),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Invoke Custom Function1\", {\"Name\", \"Source.Name\"}),",
          "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Renamed Columns1\", {\"Source.Name\", \"Transform File (3)\"}),",
          "    #\"Expanded Table Column1\" = Table.ExpandTableColumn(#\"Removed Other Columns1\", \"Transform File (3)\", Table.ColumnNames(#\"Transform File (3)\"(#\"Sample File (3)\"))),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Table Column1\",{{\"Source.Name\", type text}, {\"id\", Int64.Type}, {\"reference_id\", type text}, {\"created_at\", type datetime}, {\"archived_at\", type datetime}, {\"src_city\", type text}, {\"src_state\", type text}, {\"src_date\", type date}, {\"src_postal_code\", type text}, {\"dst_city\", type text}, {\"dst_state\", type text}, {\"dst_date\", type date}, {\"dst_postal_code\", type text}, {\"num_stops\", Int64.Type}, {\"equipment\", type text}, {\"trailer_type\", type text}, {\"rate_customer\", type number}, {\"first_load\", type logical}, {\"customer_id\", type text}, {\"revenue_code\", Int64.Type}, {\"team_name\", type any}, {\"rep_email\", type text}, {\"rep_name\", type text}, {\"carrier_manager\", type any}, {\"category\", type text}, {\"conversion_category\", type text}, {\"partner\", type text}, {\"margin_amount\", type number}, {\"margin_pct\", type number}, {\"carrier_name\", type text}, {\"dot_number\", Int64.Type}, {\"mc_number\", Int64.Type}, {\"carrier_rate\", Int64.Type}}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Source.Name\"}),",
          "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"rate_customer\", Currency.Type}, {\"margin_amount\", Currency.Type}}),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Changed Type1\",{{\"reference_id\", Order.Ascending}}),",
          "    #\"Extracted Text After Delimiter\" = Table.TransformColumns(#\"Sorted Rows\", {{\"reference_id\", each Text.AfterDelimiter(_, \"-\"), type text}}),",
          "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Extracted Text After Delimiter\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Blank Rows\",{{\"reference_id\", \"movement_id\"}}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each ([category] <> \"outside_parade\") and ([conversion_category] <> \"Manually Assigned\")),",
          "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"movement_id\", Int64.Type}}),",
          "    #\"Removed Duplicates\" = Table.Distinct(#\"Changed Type2\", {\"id\"})",
          "in",
          "    #\"Removed Duplicates\""
        ],
        "kind": "m",
        "lineageTag": "f8299408-728e-4fe7-964e-af2b42871d9a"
      },
      {
        "name": "dnc",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\DNC\\DNC.xlsx\"), null, true),",
          "    dnc_Table = Source{[Item=\"dnc\",Kind=\"Table\"]}[Data],",
          "    #\"Changed Type\" = Table.TransformColumnTypes(dnc_Table,{{\"DNC\", Int64.Type}})",
          "in",
          "    #\"Changed Type\""
        ],
        "kind": "m",
        "lineageTag": "e7a43602-db79-42a3-b99d-164d77830354"
      },
      {
        "name": "Old Callins",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = SharePoint.Files(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam\", [ApiVersion = 15]),",
          "    #\"Reordered Columns\" = Table.ReorderColumns(Source,{\"Content\", \"Name\", \"Extension\", \"Date accessed\", \"Date modified\", \"Date created\", \"Folder Path\", \"Attributes\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Reordered Columns\", each ([Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2021 Callins/\" or [Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2022 Callins/\" or [Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2023 Callins/\" or [Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2024 Callins/\")),",
          "    #\"Filtered Hidden Files1\" = Table.SelectRows(#\"Filtered Rows\", each [Attributes]?[Hidden]? <> true),",
          "    #\"Invoke Custom Function1\" = Table.AddColumn(#\"Filtered Hidden Files1\", \"Transform File (5)\", each #\"Transform File (5)\"([Content])),",
          "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Invoke Custom Function1\", {\"Transform File (5)\"}),",
          "    #\"Expanded Table Column1\" = Table.ExpandTableColumn(#\"Removed Other Columns1\", \"Transform File (5)\", Table.ColumnNames(#\"Transform File (5)\"(#\"Sample File (5)\"))),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Table Column1\",{{\"Order\", Int64.Type}, {\"Carrier\", type text}, {\"Entered by\", type text}, {\"Entered date\", type datetime}, {\"Move status\", type text}, {\"Callin type\", type text}, {\"Movement\", Int64.Type}}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Order\", \"Move status\"}),",
          "    #\"Filtered Rows1\" = Table.SelectRows(#\"Removed Columns\", each [Entered date] < #datetime(2024, 2, 1, 0, 0, 0)),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Filtered Rows1\",\"Brokerage tracking\",\"T\",Replacer.ReplaceText,{\"Callin type\"}),",
          "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Comments\",\"O\",Replacer.ReplaceText,{\"Callin type\"}),",
          "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Broker initiated\",\"B\",Replacer.ReplaceText,{\"Callin type\"}),",
          "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"Carrier initiated\",\"C\",Replacer.ReplaceText,{\"Callin type\"}),",
          "    #\"Inserted Time\" = Table.AddColumn(#\"Replaced Value3\", \"Time\", each DateTime.Time([Entered date]), type time),",
          "    #\"Extracted Date\" = Table.TransformColumns(#\"Inserted Time\",{{\"Entered date\", DateTime.Date, type date}})",
          "in",
          "    #\"Extracted Date\""
        ],
        "kind": "m",
        "lineageTag": "6b7f48ca-773e-4859-978f-d08d8e6dca39"
      },
      {
        "name": "Parameter5",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File (5)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File (5)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "e1e1bfc5-6e8f-4d92-89a3-f3903434beb9",
        "queryGroup": "Transform File from Old Callins\\Helper Queries Old Callins"
      },
      {
        "name": "Transform Sample File (5)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Parameter5, null, true),",
          "    #\"Grid Data_Sheet\" = Source{[Item=\"Grid Data\",Kind=\"Sheet\"]}[Data],",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Grid Data_Sheet\", [PromoteAllScalars=true])",
          "in",
          "    #\"Promoted Headers\""
        ],
        "kind": "m",
        "lineageTag": "da3b7853-6eed-4aa3-a431-536447938c88",
        "queryGroup": "Transform File from Old Callins"
      },
      {
        "name": "Sample File (5)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "expression": [
          "let",
          "    Source = SharePoint.Files(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam\", [ApiVersion = 15]),",
          "    #\"Reordered Columns\" = Table.ReorderColumns(Source,{\"Content\", \"Name\", \"Extension\", \"Date accessed\", \"Date modified\", \"Date created\", \"Folder Path\", \"Attributes\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Reordered Columns\", each ([Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2021 Callins/\" or [Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2022 Callins/\" or [Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2023 Callins/\" or [Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Callin data/2024 Callins/\")),",
          "    Navigation1 = #\"Filtered Rows\"{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "eba83614-88b8-45a5-a707-c3ebb760201e",
        "queryGroup": "Transform File from Old Callins\\Helper Queries Old Callins"
      },
      {
        "name": "Transform File (5)",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Source = (Parameter5 as binary) => let",
          "        Source = Excel.Workbook(Parameter5, null, true),",
          "        #\"Grid Data_Sheet\" = Source{[Item=\"Grid Data\",Kind=\"Sheet\"]}[Data],",
          "        #\"Promoted Headers\" = Table.PromoteHeaders(#\"Grid Data_Sheet\", [PromoteAllScalars=true])",
          "    in",
          "        #\"Promoted Headers\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "49c1d90a-3936-4f11-a436-5644c4dcfaea",
        "queryGroup": "Transform File from Old Callins\\Helper Queries Old Callins"
      },
      {
        "name": "Parameter1",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "b97f6438-36e3-4987-92c0-cb0b0362f10d",
        "queryGroup": "Transform File from Callins\\Helper Queries"
      },
      {
        "name": "Transform Sample File",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Parameter1, null, true),",
          "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true])",
          "in",
          "    #\"Promoted Headers\""
        ],
        "kind": "m",
        "lineageTag": "da9e0ddd-b100-4f38-8749-c616e8f588fc",
        "queryGroup": "Transform File from Callins"
      },
      {
        "name": "Sample File",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "    Source = Folder.Files(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\Callins\"),",
          "    Navigation1 = Source{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "4e2b3593-4c1b-4f07-861d-e4d8d5dba9df",
        "queryGroup": "Transform File from Callins\\Helper Queries"
      },
      {
        "name": "Transform File",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Source = (Parameter1 as binary) => let",
          "        Source = Excel.Workbook(Parameter1, null, true),",
          "        Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
          "        #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true])",
          "    in",
          "        #\"Promoted Headers\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "b6204fd3-6ae7-4859-86e8-bdea4fe14209",
        "queryGroup": "Transform File from Callins\\Helper Queries"
      },
      {
        "name": "salesperson_change",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Salesperon%20Change/Salesperson%20Change.xlsx\"), null, true),",
          "    salesperson_change_Table = Source{[Item=\"salesperson_change\",Kind=\"Table\"]}[Data],",
          "    #\"Changed Type\" = Table.TransformColumnTypes(salesperson_change_Table,{{\"Customer ID\", type text}, {\"Change Date\", type date}}),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Changed Type\",{{\"Customer ID\", Order.Ascending}, {\"Change Date\", Order.Descending}}),",
          "    #\"Removed Duplicates\" = Table.Distinct(#\"Sorted Rows\", {\"Customer ID\"})",
          "in",
          "    #\"Removed Duplicates\""
        ],
        "kind": "m",
        "lineageTag": "ea294292-80c4-451f-92c4-af2c44ee4695"
      },
      {
        "name": "avereage_days_to_pay",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = AnalysisServices.Databases(\"bl-mcbiserver\", [TypedMeasureColumns=true, Implementation=\"2.0\"]),",
          "    McLeodIQ_2019_Powerbroker = Source{[Name=\"McLeodIQ_2019_Powerbroker\"]}[Data],",
          "    McLeodIQ_Powerbroker1 = McLeodIQ_2019_Powerbroker{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
          "    McLeodIQ_Powerbroker2 = McLeodIQ_Powerbroker1{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
          "    #\"Added Items\" = Cube.Transform(McLeodIQ_Powerbroker2,",
          "        {",
          "            {Cube.AddAndExpandDimensionColumn, \"[Customer]\", {\"[Customer].[Average Pay Days ].[Average Pay Days ]\", \"[Customer].[Customer ID].[Customer ID]\", \"[Customer].[Obsolete Date].[Obsolete Date]\"}, {\"Customer.Average Pay Days \", \"Customer.Customer ID\", \"Customer.Obsolete Date\"}}",
          "        }),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Items\", each (Cube.AttributeMemberId([Customer.Obsolete Date]) = \"[Customer].[Obsolete Date].&\" meta [DisplayName = \"(null)\"])),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"Customer.Obsolete Date\"})",
          "in",
          "    #\"Removed Columns\""
        ],
        "kind": "m",
        "lineageTag": "211212d3-e96f-400e-a3b3-c1cf3768b05a"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "3"
          }
        ],
        "folder": "Transform File from behaviors_api_files"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from behaviors_api_files\\Helper Queries"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "4"
          }
        ],
        "folder": "Transform File from parade_orders_api_files"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from parade_orders_api_files\\Helper Queries"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "5"
          }
        ],
        "folder": "Callendar Tables"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "8"
          }
        ],
        "folder": "Transform File from Query1"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from Query1\\Helper Queries"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from Old Callins"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from Old Callins\\Helper Queries Old Callins"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "11"
          }
        ],
        "folder": "Transform File from Callins"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from Callins\\Helper Queries"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "13"
          }
        ],
        "description": "Contains Shipper and Consignee Zip Code Tables",
        "folder": "Zip Codes"
      }
    ],
    "relationships": [
      {
        "name": "24ac51c5-cadb-4768-93ec-0e4b6868f1e7",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "res_id",
        "fromTable": "behaviors_crm",
        "toColumn": "id",
        "toTable": "crm"
      },
      {
        "name": "22529093-f9bd-406f-a999-686e0860562d",
        "fromColumn": "user_id",
        "fromTable": "recruitment",
        "toColumn": "user_id",
        "toTable": "recruiter_key"
      },
      {
        "name": "15bfc04e-a0e4-478d-b0b7-1009843d915b",
        "fromColumn": "Recruiter Name",
        "fromTable": "recruitment_goals",
        "toColumn": "user_id",
        "toTable": "recruiter_key"
      },
      {
        "name": "8d14e89c-e544-4385-98f8-508dfc22b753",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Order ID",
        "fromTable": "movements",
        "toColumn": "Order ID",
        "toTable": "orders"
      },
      {
        "name": "83b360a2-33f5-7785-f8a7-ef35de4ab6ea",
        "fromColumn": "Customer ID",
        "fromTable": "orders",
        "toColumn": "Customer ID",
        "toTable": "crm_customer_key"
      },
      {
        "name": "27014f7e-0f89-4b2b-8180-abb1dca93024",
        "fromColumn": "Movement ID",
        "fromTable": "overdue_check_calls",
        "toColumn": "Movement ID",
        "toTable": "movements"
      },
      {
        "name": "ec866025-c7f0-4a1e-a2b0-797dd8328673",
        "fromColumn": "Parent ID",
        "fromTable": "contacts_module",
        "toColumn": "id",
        "toTable": "contacts_parent"
      },
      {
        "name": "30050c35-cbbb-4842-b573-1848d35afd2c",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "partner_id",
        "fromTable": "crm",
        "toColumn": "id",
        "toTable": "contacts_parent"
      },
      {
        "name": "a71c78f7-f7d2-4e03-9bc8-e958e28c95a2",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "x_studio_mcleod_code",
        "fromTable": "crm",
        "toColumn": "Customer ID",
        "toTable": "crm_customer_key"
      },
      {
        "name": "d523c10b-ff71-4850-b55c-24bd060c999c",
        "fromColumn": "Entered By",
        "fromTable": "orders",
        "isActive": false,
        "toColumn": "id",
        "toTable": "dispatcher_key"
      },
      {
        "name": "b63012e2-853e-4473-80ab-e18d68644cee",
        "fromColumn": "Wolf Pack",
        "fromTable": "lead_ops",
        "toColumn": "Wolf Pack",
        "toTable": "wolf_pack"
      },
      {
        "name": "37527f02-540b-4d64-b003-983ea027827f",
        "fromColumn": "Month",
        "fromTable": "margin_load_count_goals",
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "afe339e3-6f90-4184-8e26-c9cc15a58538",
        "fromColumn": "mail_activity_type_id",
        "fromTable": "behaviors_crm",
        "toColumn": "Behavior ID",
        "toTable": "behavior_key"
      },
      {
        "name": "40fea7cf-a715-4e4c-8c8c-1876e2e177d4",
        "fromColumn": "BehaviorID",
        "fromTable": "behavior_goals",
        "toColumn": "Behavior ID",
        "toTable": "behavior_key"
      },
      {
        "name": "10ef237a-98d0-4aa0-89b0-72b907b6c883",
        "fromColumn": "Month",
        "fromTable": "behavior_goals",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "14d4acf9-0720-4e6a-8736-76038595902d",
        "fromColumn": "Stage",
        "fromTable": "crm",
        "toColumn": "Stage Name",
        "toTable": "crm_stages"
      },
      {
        "name": "c210d8eb-6f01-446e-af0d-39ef7c57b83f",
        "fromColumn": "mail_activity_type_id",
        "fromTable": "bws_behaviors",
        "toColumn": "Behavior ID",
        "toTable": "behavior_key"
      },
      {
        "name": "70281f62-3f9e-4261-b75f-c7367b778025",
        "fromColumn": "Behavior Date",
        "fromTable": "bws_behaviors",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "35ee405e-d2ea-49dc-872b-c79c6f48c510",
        "fromColumn": "Stage",
        "fromTable": "HealthyPipelineGoals",
        "toColumn": "Stage Name",
        "toTable": "crm_stages"
      },
      {
        "name": "147be2e7-70b7-4b36-a593-93470f98d668",
        "fromColumn": "Month",
        "fromTable": "customer_margin_goal",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "a6bff216-a6f5-4159-b052-a6e5f85c55cf",
        "fromColumn": "Customer Bridge ID",
        "fromTable": "customer_key",
        "toColumn": "Customer ID",
        "toTable": "parent_customer_key"
      },
      {
        "name": "4e10fe7c-960b-47ed-a215-d917d96a08ae",
        "fromColumn": "Customer Code",
        "fromTable": "customer_margin_goal",
        "toColumn": "Customer ID",
        "toTable": "customer_key"
      },
      {
        "name": "609776e0-5105-4bff-bba8-5b32a73d8c26",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Customer ID",
        "fromTable": "orders",
        "toColumn": "Customer ID",
        "toTable": "customer_key"
      },
      {
        "name": "287a95fd-ec44-4974-83d3-8f9aaf31f0da",
        "fromColumn": "Lane",
        "fromTable": "orders",
        "toColumn": "Lane",
        "toTable": "lanes"
      },
      {
        "name": "2ae30b7a-ac2f-400a-bc54-2c747fdc305b",
        "fromColumn": "Customer Bridge ID",
        "fromTable": "crm_customer_key",
        "toColumn": "Customer ID",
        "toTable": "crm_parent_customer_key"
      },
      {
        "name": "04793540-54a8-4973-a51b-d06c026283dc",
        "fromColumn": "Dispatcher Id",
        "fromTable": "movements",
        "toColumn": "Dispatch McLeod ID",
        "toTable": "dispatcher_key"
      },
      {
        "name": "7fa33220-d051-2c54-c510-46d40cd36a4e",
        "fromColumn": "Month",
        "fromTable": "daily_number_override",
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "f2d8a68b-d990-48bf-8a50-cd7ffd52dfee",
        "fromColumn": "Movement",
        "fromTable": "callins",
        "toColumn": "Movement ID",
        "toTable": "movements"
      },
      {
        "name": "b93b6a4b-b0bd-4805-b540-c3f480a14d7a",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Shipper Zip",
        "fromTable": "orders",
        "toColumn": "Shipper Zip",
        "toTable": "shipper_zips"
      },
      {
        "name": "9c4907eb-faa5-4451-8a2f-d405ae4f6605",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "3 Digit Zip",
        "fromTable": "shipper_zips",
        "toColumn": "3 Digit Zip",
        "toTable": "shipper_three_digit_zips"
      },
      {
        "name": "f90c91fc-05d9-4424-ae2f-e58a442b6dea",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Consignee Zip",
        "fromTable": "orders",
        "toColumn": "Consignee Zip",
        "toTable": "consignee_zip_codes"
      },
      {
        "name": "07aff5a6-83a3-4e72-89c0-14fcd647b165",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Consignee Three Digit Zip",
        "fromTable": "consignee_zip_codes",
        "toColumn": "Consignee Three Digit Zip",
        "toTable": "consignee_three_digit_zip_codes"
      },
      {
        "name": "425f4b74-db29-474e-8576-a4bfd06a617d",
        "fromColumn": "Movement ID",
        "fromTable": "sop_issues",
        "toColumn": "Movement ID",
        "toTable": "movements"
      },
      {
        "name": "319ab913-a323-4a0b-ae8f-afc6296e8b6f",
        "fromColumn": "Customer ID",
        "fromTable": "pcs_loads",
        "toColumn": "Customer ID",
        "toTable": "crm_customer_key"
      },
      {
        "name": "c26ad854-6dba-47cc-aa2d-d042840bd668",
        "fromColumn": "Lane",
        "fromTable": "pcs_loads",
        "toColumn": "Lane",
        "toTable": "lanes"
      },
      {
        "name": "5743b51f-e1bd-41b7-b2ff-3cd9b8776232",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "Order.Order ID",
        "fromTable": "payments_received",
        "toColumn": "Order ID",
        "toTable": "orders"
      },
      {
        "name": "8fd3eaf8-5a42-4a67-aca4-0c0bb87812e2",
        "fromColumn": "Carrier ID",
        "fromTable": "movements",
        "toColumn": "Carrier ID",
        "toTable": "carrier_key"
      },
      {
        "name": "285063c7-996c-4448-add0-9eed8750e469",
        "fromColumn": "x_studio_sdr",
        "fromTable": "crm",
        "toColumn": "name",
        "toTable": "sdr_key"
      },
      {
        "name": "6d6a9d68-a2ae-4c78-a645-bc476027dc73",
        "fromColumn": "author_id",
        "fromTable": "bws_behaviors",
        "toColumn": "name",
        "toTable": "sdr_key"
      },
      {
        "name": "80c2ec31-c8e0-4128-b4f2-c80858b07a33",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Movement ID",
        "fromTable": "movements",
        "toColumn": "Movement ID",
        "toTable": "carrier_dispatch_movement_data"
      },
      {
        "name": "c22a2c21-4175-4f70-887d-31c8c39f2e13",
        "fromColumn": "Movement ID",
        "fromTable": "check_call_roller",
        "toColumn": "Movement ID",
        "toTable": "movements"
      },
      {
        "name": "29bace6d-39af-469a-8c5e-606c5afa06e8",
        "fromColumn": "Dispatcher",
        "fromTable": "highway_onboarded",
        "toColumn": "Dispatcher Name",
        "toTable": "dispatcher_key"
      },
      {
        "name": "42ac3dff-2b7b-40a4-9262-b4377367d139",
        "fromColumn": "completed_at",
        "fromTable": "highway_onboarded",
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "9b645851-1fb9-40b1-a530-c7c2d4b26b1b",
        "fromColumn": "dispatcher_key.Team",
        "fromTable": "highway_onboarded",
        "toColumn": "Rev Code",
        "toTable": "rev_codes"
      },
      {
        "name": "5f56b347-2cf4-ffe6-ef1e-4d13c7f8ca86",
        "fromColumn": "Lead Ops",
        "fromTable": "rev_codes",
        "toColumn": "Lead Ops",
        "toTable": "lead_ops"
      },
      {
        "name": "0f414bc1-71cb-0138-e60b-8edb0f257c8d",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "calendar",
        "isActive": false,
        "toColumn": "Commission Month",
        "toTable": "pay_schedule"
      },
      {
        "name": "ca1cba22-b942-effb-1aa8-1c72935a2460",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "Date",
        "fromTable": "calendar",
        "isActive": false,
        "toColumn": "Pay Date",
        "toTable": "pay_schedule"
      },
      {
        "name": "443b6f0b-4c30-1741-fbbf-c939526c1c2b",
        "fromColumn": "Job End Date",
        "fromTable": "job_history",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "c09e680e-c7e9-5647-8852-f8c5e84cde9e",
        "fromColumn": "Job Start Date",
        "fromTable": "job_history",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "413c8424-a043-f076-f062-d4406c347088",
        "fromColumn": "ID",
        "fromTable": "job_history",
        "toColumn": "ID",
        "toTable": "employees"
      },
      {
        "name": "bb824532-5e41-9e1d-8150-5566ef7ed862",
        "fromColumn": "Termination Date",
        "fromTable": "employees",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "a33e4361-87f9-1077-1c12-9471a8a75df0",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "ID",
        "fromTable": "employees",
        "toColumn": "ID",
        "toTable": "salesperson_key"
      },
      {
        "name": "8c439601-0b8f-68d1-c411-42f0c19ef43f",
        "fromColumn": "Hire Date",
        "fromTable": "salesperson_key",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "a063cabe-f9cf-b04b-4a29-364d18199de7",
        "fromColumn": "Termination Date",
        "fromTable": "salesperson_key",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "77a8daee-43d1-4d8f-f88f-fbea6c59c10c",
        "fromColumn": "Saleperson Name",
        "fromTable": "HealthyPipelineGoals",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "4a2e5e68-e856-6032-7133-2fc88fd755db",
        "fromColumn": "user_id",
        "fromTable": "crm",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "d01a3e50-f2c3-6483-57a3-62df3e95a79f",
        "fromColumn": "Salesperson Name",
        "fromTable": "pcs_loads",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "1ca3bd8f-da1f-cbe2-e234-1fa0ec8ea173",
        "fromColumn": "Salesperson",
        "fromTable": "customer_margin_goal",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "fa0d0d7c-02e1-47b2-b057-104eba70c1ff",
        "fromColumn": "Salesperson Name",
        "fromTable": "margin_load_count_goals",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "a0a9718c-a7ee-28a7-3ef1-2fb113037ba7",
        "fromColumn": "author_id",
        "fromTable": "bws_behaviors",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "fef07ba3-dc60-e178-d1f7-10b2ef55acaf",
        "fromColumn": "Salesperson",
        "fromTable": "behavior_goals",
        "toColumn": "Name",
        "toTable": "salesperson_key"
      },
      {
        "name": "409d7bf1-170f-c70b-15e3-059d76b8d42e",
        "fromColumn": "Salesperson ID",
        "fromTable": "orders",
        "toColumn": "McLeod Salesperson Code",
        "toTable": "salesperson_key"
      },
      {
        "name": "773de986-f511-620e-c4a5-05421123c883",
        "fromColumn": "Delivery Scheduled Early Date",
        "fromTable": "orders",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "50a4c771-22b6-4a72-7d68-bf871cd98d07",
        "fromColumn": "Date Order Entered.Date",
        "fromTable": "orders",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "6562ece5-37d2-00ec-e66a-9763af513150",
        "fromColumn": "Delivery Scheduled Late Date",
        "fromTable": "orders",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "f9775e4c-e176-7042-95a7-a8cffe447cea",
        "fromColumn": "Ship Scheduled Early Date",
        "fromTable": "orders",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "d69178bf-f19c-f5ad-2457-c81284c3dfc9",
        "fromColumn": "Ship Scheduled Late Date",
        "fromTable": "orders",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      },
      {
        "name": "7c4ddc93-1d7a-6a9b-d1e6-fe55a32b92cd",
        "fromColumn": "Hire Date",
        "fromTable": "employees",
        "isActive": false,
        "toColumn": "Date",
        "toTable": "calendar"
      }
    ],
    "sourceQueryCulture": "en-US",
    "tables": [
      {
        "name": "calendar",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "isKey": true,
            "lineageTag": "3f507b7d-235c-4066-a087-d3bc2f84407d",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "651a7c89-640c-4906-8b4b-e67c87597462",
            "sourceColumn": "Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Month Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "cfbabec9-aae5-4792-af9a-80e471da8154",
            "sortByColumn": "MonthNmb",
            "sourceColumn": "Month Name",
            "summarizeBy": "none"
          },
          {
            "name": "MonthAbv",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "2cb6f642-75fb-4a6d-b4d7-600ec7adcfb9",
            "sortByColumn": "MonthNmb",
            "sourceColumn": "MonthAbv",
            "summarizeBy": "none"
          },
          {
            "name": "MonthNmb",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "714a7d82-cb49-46e7-b4d7-18fbb6f3533d",
            "sourceColumn": "MonthNmb",
            "summarizeBy": "sum"
          },
          {
            "name": "Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "39fb850e-3f75-443c-81b1-a40eee62f1e1",
            "sortByColumn": "QuarterNmb",
            "sourceColumn": "Quarter",
            "summarizeBy": "none"
          },
          {
            "name": "Week of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "51d8ea38-3fe1-49ad-bcd8-2e4c2a8c65b3",
            "sourceColumn": "Week of Month",
            "summarizeBy": "sum"
          },
          {
            "name": "Is Past",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "description": "Date is in the past",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "5e6fbd22-3068-4124-b885-600aa91b4918",
            "sourceColumn": "Is Past",
            "summarizeBy": "none"
          },
          {
            "name": "Day of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d1859176-4e69-4f06-9a25-669ed741f2e5",
            "sourceColumn": "Day of Month",
            "summarizeBy": "sum"
          },
          {
            "name": "Start of Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "d881b6a5-f0c7-4c77-b817-c45b4bed1680",
            "sourceColumn": "Start of Month",
            "summarizeBy": "none"
          },
          {
            "name": "QuarterNmb",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8cf8146f-97a6-4697-be3d-bd1f20abbb98",
            "sourceColumn": "QuarterNmb",
            "summarizeBy": "sum"
          },
          {
            "name": "Week of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "39f328a6-5424-41fb-a9af-c5ec77343a71",
            "sourceColumn": "Week of Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Day of Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b8792d7a-b021-4f5b-9438-4ac23439f5a8",
            "sourceColumn": "Day of Year",
            "summarizeBy": "sum"
          },
          {
            "name": "Day Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "7bc81a08-84e2-4a8c-a6ad-2998b40a400b",
            "sortByColumn": "Day of Week",
            "sourceColumn": "Day Name",
            "summarizeBy": "none"
          },
          {
            "name": "Day of Week",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8d6893eb-cc6e-47e7-b20e-8666e71ff2d9",
            "sourceColumn": "Day of Week",
            "summarizeBy": "sum"
          },
          {
            "name": "Month / Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "17e578cf-1f51-4ecd-b766-0cfd52409b8d",
            "sortByColumn": "Start of Month",
            "sourceColumn": "Month / Year",
            "summarizeBy": "none"
          },
          {
            "name": "Is Working Day",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "expression": [
              "",
              "Var is_working_day = IF([Working Days]=1,TRUE(),FALSE())",
              "",
              "Return",
              "is_working_day"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "isDataTypeInferred": true,
            "lineageTag": "c3cee918-b51b-4446-b055-0bb99e2213b3",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Day of Quarter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "51b3b2c8-9710-40bc-bf38-f621dcf2795e",
            "sourceColumn": "Day of Quarter",
            "summarizeBy": "none"
          },
          {
            "name": "Week / Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "d16d19a5-acab-4860-8869-c978a0bef28c",
            "sortByColumn": "Start of Week",
            "sourceColumn": "Week / Year",
            "summarizeBy": "none"
          },
          {
            "name": "Start of Week",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "9db66bf6-3f9c-4136-a390-d5bcaa341e60",
            "sourceColumn": "Start of Week",
            "summarizeBy": "none"
          }
        ],
        "dataCategory": "Time",
        "hierarchies": [
          {
            "name": "Year Hierarchy",
            "levels": [
              {
                "name": "Year",
                "column": "Year",
                "lineageTag": "73eb8ff3-53b4-4068-9b95-aecc65077636",
                "ordinal": 0
              },
              {
                "name": "Quarter",
                "column": "Quarter",
                "lineageTag": "ff610923-2ca4-43a0-8bb5-fc0c1d14eecc",
                "ordinal": 1
              },
              {
                "name": "Month Name",
                "column": "Month Name",
                "lineageTag": "9dc47c8d-742d-4276-aee5-95c3b105d26c",
                "ordinal": 2
              },
              {
                "name": "Week of Year",
                "column": "Week of Year",
                "lineageTag": "5d9b25d8-9357-4487-aa40-aa5d8fba623e",
                "ordinal": 3
              },
              {
                "name": "Week of Month",
                "column": "Week of Month",
                "lineageTag": "627f7431-ed11-4837-8ae2-45b381e0940a",
                "ordinal": 4
              },
              {
                "name": "Day Name",
                "column": "Day Name",
                "lineageTag": "3f76aa0b-88e5-4446-9820-9c0421a41b36",
                "ordinal": 5
              }
            ],
            "lineageTag": "ef7a8ed7-9ad4-4576-b05a-e4ae3b1d836d"
          }
        ],
        "lineageTag": "fce9a9ae-211f-4e89-b504-aa0ddde156ec",
        "measures": [
          {
            "name": "Working Days",
            "description": "This Measure calculates the number of working days between the minimum date in your filter context and the max date in your filter context.",
            "displayFolder": "Calendar Measures",
            "expression": [
              "",
              "    NETWORKDAYS(",
              "        MIN('calendar'[Date]),",
              "        MAX('calendar'[Date]),",
              "        1,",
              "        observed_holidays)"
            ],
            "formatString": "0",
            "lineageTag": "8c102c07-e4b9-42e2-9136-bec68cb20f95"
          },
          {
            "name": "Working days Elapsed",
            "description": [
              "This measure Calculates the number of working days from the minimum date in your filter context and the current date minus 1.",
              ""
            ],
            "displayFolder": "Calendar Measures",
            "expression": [
              "",
              "If(DAY(TODAY())=1,0,",
              "    NETWORKDAYS(",
              "        MIN('Calendar'[Date]),",
              "        TODAY()-1,",
              "        1,",
              "        observed_holidays))"
            ],
            "formatString": "0",
            "lineageTag": "1d241d9b-f183-49c9-97b9-c6fc0122166a"
          },
          {
            "name": "**",
            "displayFolder": "***Undocumented***",
            "expression": "\"*\"",
            "lineageTag": "008f7130-708a-4f40-9518-cd40f419fcb3"
          },
          {
            "name": "Week Number Equals this Week",
            "description": [
              "If the week of the month number is equal to the week of the month number of today this measure will output 1 if not 0",
              ""
            ],
            "displayFolder": "Calendar Measures",
            "expression": [
              "",
              "IF(",
              "    MIN('calendar'[Week of Year])=WEEKNUM(TODAY()),",
              "    1,",
              "    0",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "290137a1-174e-463e-b3f9-a989e04db338"
          },
          {
            "name": "Callendar Date SK",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Calendar Measures",
            "expression": "MIN('calendar'[Date])*1",
            "lineageTag": "9d2954ab-746c-459f-aeeb-870e5084856d"
          }
        ],
        "partitions": [
          {
            "name": "calendar",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    //Variables",
                "    StartDate = #date(2001,1,1),",
                "    EndDate = #date(2024,12,31),",
                "    Duration = Duration.Days(Duration.From(EndDate-StartDate))+1,",
                "    Today = DateTime.Date(DateTime.LocalNow()),",
                "",
                "    //Date Columns",
                "    Dates = List.Dates(StartDate,Duration,#duration(1,0,0,0)),",
                "    #\"Converted to Table\" = Table.FromList(Dates, Splitter.SplitByNothing(), null, null, ExtraValues.Error),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Converted to Table\",{{\"Column1\", \"Date\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Date\", type date}}),",
                "    #\"Inserted Start of Month\" = Table.AddColumn(#\"Changed Type\", \"Start of Month\", each Date.StartOfMonth([Date]), type date),",
                "    #\"Inserted Year\" = Table.AddColumn(#\"Inserted Start of Month\", \"Year\", each Date.Year([Date]), Int64.Type),",
                "    #\"Inserted Quarter\" = Table.AddColumn(#\"Inserted Year\", \"Quarter\", each \"Q\"&Text.From(Date.QuarterOfYear([Date]))),",
                "    #\"Inserted QuarterNmb\" = Table.AddColumn(#\"Inserted Quarter\", \"QuarterNmb\", each Date.QuarterOfYear([Date]), Int64.Type),",
                "    #\"Inserted Month Name\" = Table.AddColumn(#\"Inserted QuarterNmb\", \"Month Name\", each Date.MonthName([Date]), type text),",
                "    #\"Inserted MonthAbv\" = Table.AddColumn(#\"Inserted Month Name\", \"MonthAbv\", each Text.Start(Date.MonthName([Date]),3), type text),",
                "    #\"Inserted MonthNmb\" = Table.AddColumn(#\"Inserted MonthAbv\", \"MonthNmb\", each Date.Month([Date]), Int64.Type),",
                "    #\"Inserted Week of Year\" = Table.AddColumn(#\"Inserted MonthNmb\", \"Week of Year\", each Date.WeekOfYear([Date]), Int64.Type),",
                "    #\"Inserted Week of Month\" = Table.AddColumn(#\"Inserted Week of Year\", \"Week of Month\", each Date.WeekOfMonth([Date]), Int64.Type),",
                "    #\"Inserted Day of Year\" = Table.AddColumn(#\"Inserted Week of Month\", \"Day of Year\", each Date.DayOfYear([Date]), Int64.Type),",
                "    #\"Inserted Day of Month\" = Table.AddColumn(#\"Inserted Day of Year\", \"Day of Month\", each Date.Day([Date]), Int64.Type),",
                "    #\"Inserted Day of Week\" = Table.AddColumn(#\"Inserted Day of Month\", \"Day of Week\", each Date.DayOfWeek([Date]), Int64.Type),",
                "    #\"Inserted Day Name\" = Table.AddColumn(#\"Inserted Day of Week\", \"Day Name\", each Date.DayOfWeekName([Date]), type text),",
                "    #\"Inserted Is Past\" = Table.AddColumn(#\"Inserted Day Name\", \"Is Past\", each [Date]<Today),",
                "    #\"Changed Is Past to True False\" = Table.TransformColumnTypes(#\"Inserted Is Past\",{{\"Is Past\", type logical}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Changed Is Past to True False\", \"Month / Year\", each Date.ToText([Date], \"MMM/yyyy\")),",
                "    #\"Added Day of Quarter\" = Table.AddColumn(#\"Added Custom\", \"Day of Quarter\", each Date.DayOfYear(Date.From([Date])) - Date.DayOfYear(Date.From(Date.StartOfQuarter([Date]))) + 1),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Added Day of Quarter\", \"Week of Year\", \"Week of Year - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"Year\", \"Year - Copy\"),",
                "    #\"Merged Columns\" = Table.CombineColumns(Table.TransformColumnTypes(#\"Duplicated Column1\", {{\"Week of Year - Copy\", type text}, {\"Year - Copy\", type text}}, \"en-US\"),{\"Week of Year - Copy\", \"Year - Copy\"},Combiner.CombineTextByDelimiter(\"/\", QuoteStyle.None),\"Week / Year\"),",
                "    #\"Inserted Start of Week\" = Table.AddColumn(#\"Merged Columns\", \"Start of Week\", each Date.StartOfWeek([Date]), type date)",
                "in",
                "    #\"Inserted Start of Week\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "crm",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0392bdc5-ae96-4380-8590-4ee557fcc7d7",
            "sourceColumn": "id",
            "summarizeBy": "none"
          },
          {
            "name": "name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e3d59652-8d17-4e8f-99e7-cd11d6133ff6",
            "sourceColumn": "name",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_mcleod_code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "06b3114b-04b7-4ab1-abfc-b4d01c1b20e7",
            "sourceColumn": "x_studio_mcleod_code",
            "summarizeBy": "none"
          },
          {
            "name": "user_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cb657696-dca4-442b-a82c-e96069514a3d",
            "sourceColumn": "user_id",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_sdr",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d8d50d78-1855-4258-9e65-6afac0af5505",
            "sourceColumn": "x_studio_sdr",
            "summarizeBy": "none"
          },
          {
            "name": "activity_date_deadline",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "eb635af0-efc3-4adb-82d6-9079476b2ea9",
            "sourceColumn": "activity_date_deadline",
            "summarizeBy": "none"
          },
          {
            "name": "date_open",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "ff18e01b-ed93-4f15-b1d1-06191ace71db",
            "sourceColumn": "date_open",
            "summarizeBy": "none"
          },
          {
            "name": "partner_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "060012db-948f-49b0-9c6c-538b7f86ae7a",
            "sourceColumn": "partner_id",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_do_not_move",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2b904698-69c6-47cf-b79a-3738304012e6",
            "sourceColumn": "x_studio_do_not_move",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_lead_type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ba3b1ae8-5517-4872-99fa-a178a6cf5a6e",
            "sourceColumn": "x_studio_lead_type",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_originally_passed_to",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8257e263-b7b2-4b88-87be-5e00b8bfa533",
            "sourceColumn": "x_studio_originally_passed_to",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_lead_passed_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "72ee5a04-b3ab-4471-8b88-0977189c204a",
            "sourceColumn": "x_studio_lead_passed_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_enrichment_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "696e9156-b04f-44c2-a021-ee31b02512cf",
            "sourceColumn": "x_studio_enrichment_date",
            "summarizeBy": "none"
          },
          {
            "name": "city",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "61d2e49a-a37c-4e71-95b4-2fcd413bb40a",
            "sourceColumn": "city",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_revenue_range",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "24fa1024-338a-47b9-8a83-fff10b6ad02c",
            "sourceColumn": "x_studio_revenue_range",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_primary_industry",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ac9a9140-c05c-4be8-98e8-fce9e8ad9d90",
            "sourceColumn": "x_studio_primary_industry",
            "summarizeBy": "none"
          },
          {
            "name": "state_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "13f83aa8-fb7e-4cea-a974-0ed412cd596a",
            "sourceColumn": "state_id",
            "summarizeBy": "none"
          },
          {
            "name": "phone",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bcb22193-a954-429f-abc2-e46c2fd14cdb",
            "sourceColumn": "phone",
            "summarizeBy": "none"
          },
          {
            "name": "type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "23e267f2-0bbb-4e28-8c49-4ec4c930fc7e",
            "sourceColumn": "type",
            "summarizeBy": "none"
          },
          {
            "name": "Stage",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "18cdc1c5-a6e2-4d97-a99b-45727cc2c309",
            "sourceColumn": "Stage",
            "summarizeBy": "none"
          },
          {
            "name": "Last Stage Change",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "4b0aff3a-e167-46bb-ada1-23b093153882",
            "sourceColumn": "Last Stage Change",
            "summarizeBy": "none"
          },
          {
            "name": "At Risk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": [
              "",
              "Var Working = ",
              "    IF([Days since Last Salesperson Update]<7,\"False\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Since Last Stage Update]>90,\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since last Behaivor]>60,\"TRUE\",",
              "    \"FALSE\")))))",
              "",
              "Var NoForNow = ",
              "    IF([Days since Last Salesperson Update]<7,\"FALSE\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Since Last Stage Update]>90,\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since last Behaivor]>90,\"TRUE\",",
              "    \"FALSE\")))))",
              "",
              "Var Qualified = ",
              "    IF([Days since Last Salesperson Update]<7,\"FALSE\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Since Last Stage Update]>60,\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since last Behaivor]>60,\"TRUE\",",
              "    \"FALSE\")))))",
              "    ",
              "Var Quoted = ",
              "    IF([Days since Last Salesperson Update]<7,\"FALSE\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Since Last Stage Update]>60,\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since last Behaivor]>60,\"TRUE\",",
              "    \"FALSE\")))))",
              "",
              "Var CreditApp = ",
              "    IF([Days since Last Salesperson Update]<7,\"FALSE\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Since Last Stage Update]>60,\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since last Behaivor]>60,\"TRUE\",",
              "    \"FALSE\")))))",
              "",
              "Var OneToThree = ",
              "    IF([Days since Last Salesperson Update]<7,\"FALSE\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since Last Shipment]>120,\"TRUE\",",
              "    IF([Days since last Behaivor]>60,\"TRUE\",",
              "    \"FALSE\")))))",
              "",
              "Var Customer = ",
              "    IF([Days since Last Salesperson Update]<7,\"FALSE\",",
              "    IF(crm[activity_date_deadline]=BLANK(),\"TRUE\",",
              "    IF([Days Over Due]>14,\"TRUE\",",
              "    IF([Days since Last Shipment]>120,\"TRUE\",",
              "    IF([Days since last Behaivor]>60,\"TRUE\",",
              "    \"FALSE\")))))",
              "",
              "",
              "Var AtRisk =",
              "    IF(CRM[Stage]=\"Working\",Working,",
              "    IF(CRM[Stage]=\"No For Now\",NoForNow,",
              "    IF(CRM[Stage]=\"Qualified\",Qualified,",
              "    IF(CRM[Stage]=\"Quoted\",Quoted,",
              "    IF(CRM[Stage]=\"Credit App\",CreditApp,",
              "    IF(CRM[Stage]=\"1-3 Loads\",OneToThree,",
              "    IF(CRM[Stage]=\"Customer\",Customer,",
              "",
              "    \"FALSE\")))))))",
              "",
              "Return",
              "AtRisk"
            ],
            "isDataTypeInferred": true,
            "lineageTag": "507fd75a-9439-49af-bb78-eed961a86964",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "374853d7-fcbf-4947-a402-2244d828387e",
        "partitions": [
          {
            "name": "crm",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\CRM\\CRM_api.xlsx\"), null, true),",
                "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Extracted Text Between Delimiters\" = Table.TransformColumns(#\"Promoted Headers\", {{\"user_id\", each Text.BetweenDelimiters(Text.From(_, \"en-US\"), \"'\", \"'\"), type text}, {\"stage_id\", each Text.BetweenDelimiters(_, \"'\", \"'\"), type text}, {\"x_studio_primary_industry\", each Text.BetweenDelimiters(Text.From(_, \"en-US\"), \"'\", \"'\"), type text}, {\"state_id\", each Text.BetweenDelimiters(Text.From(_, \"en-US\"), \"'\", \"'\"), type text}, {\"x_stage_id\", each Text.BetweenDelimiters(Text.From(_, \"en-US\"), \"'\", \"'\"), type text}}),",
                "    #\"Extracted Text Between Delimiters1\" = Table.TransformColumns(#\"Extracted Text Between Delimiters\", {{\"partner_id\", each Text.BetweenDelimiters(_, \"[\", \",\"), type text}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Extracted Text Between Delimiters1\",false,null,Replacer.ReplaceValue,{\"x_studio_mcleod_code\", \"x_studio_sdr\", \"stage_id\", \"date_last_stage_update\", \"activity_date_deadline\", \"date_open\", \"x_studio_lead_type\", \"x_studio_originally_passed_to\", \"x_studio_lead_passed_date\", \"x_studio_enrichment_date\", \"city\", \"x_studio_revenue_range\"}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"Stage\", each if [type] = \"lead\" then [x_stage_id] else [stage_id]),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Conditional Column\",{\"stage_id\", \"x_stage_id\"}),",
                "    #\"Added Conditional Column1\" = Table.AddColumn(#\"Removed Columns\", \"Last Stage Change\", each if [type] = \"lead\" then [x_date_last_prospect_stage_change] else [date_last_stage_update]),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Conditional Column1\",{\"date_last_stage_update\", \"x_date_last_prospect_stage_change\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns1\",{{\"date_open\", type datetime}, {\"Last Stage Change\", type datetime}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Changed Type\",{{\"Last Stage Change\", type date}, {\"x_studio_enrichment_date\", type date}, {\"date_open\", type date}, {\"activity_date_deadline\", type date}}),",
                "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Changed Type1\", {\"partner_id\"}),",
                "    #\"Extracted Text Between Delimiters2\" = Table.TransformColumns(#\"Removed Errors\", {{\"x_studio_sdr\", each Text.BetweenDelimiters(_, \"'\", \"'\"), type text}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Extracted Text Between Delimiters2\",{{\"x_studio_lead_passed_date\", type date}})",
                "in",
                "    #\"Changed Type2\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "recruitment",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d13715d1-ca73-4caf-81db-b2ea3a16d95e",
            "sourceColumn": "id",
            "summarizeBy": "sum"
          },
          {
            "name": "name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5962a396-d068-4d6c-9c62-4ab5b6b8c27e",
            "sourceColumn": "name",
            "summarizeBy": "none"
          },
          {
            "name": "job_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "874fe3c8-eae4-4a3c-ba47-9f391b5947e1",
            "sourceColumn": "job_id",
            "summarizeBy": "none"
          },
          {
            "name": "stage_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b864e57f-bd9e-47d0-a8cc-0fa758ecb061",
            "sourceColumn": "stage_id",
            "summarizeBy": "none"
          },
          {
            "name": "user_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e4af4f77-68f8-46e0-bda3-f02c671c4ac1",
            "sourceColumn": "user_id",
            "summarizeBy": "none"
          },
          {
            "name": "create_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "f1292bb7-36fc-41b5-b5c4-bdaf3f17dc51",
            "sourceColumn": "create_date",
            "summarizeBy": "none"
          },
          {
            "name": "source_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9f610cf6-5d22-4c43-a551-ce62f9be4f2d",
            "sourceColumn": "source_id",
            "summarizeBy": "none"
          },
          {
            "name": "active",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "88466d37-c205-4ade-a6db-f6ed6927bdf1",
            "sourceColumn": "active",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "31b95457-7eca-4ae2-bbc8-b3bd7a80dd9b",
            "sourceColumn": "x_studio_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_team",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "346458c9-4767-4e1c-9d87-c375187f0751",
            "sourceColumn": "x_studio_team",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_sdr_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "48b3a7cd-f965-47da-8c5d-dda2da6775e1",
            "sourceColumn": "x_studio_sdr_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_d_team_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "e4988480-b41d-4144-8aa6-e1ac1523375b",
            "sourceColumn": "x_studio_d_team_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_henry_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "dd4b239b-c22f-4541-ac21-38de7d6534b6",
            "sourceColumn": "x_studio_henry_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_mcleod_user_code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b91ffc97-bbba-4836-93a5-5ef1b8057601",
            "sourceColumn": "x_studio_mcleod_user_code",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_mcleod_salesperson_code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e0a642c2-2875-4700-b01b-6b08fba47f58",
            "sourceColumn": "x_studio_mcleod_salesperson_code",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_termination_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "688d7436-a920-4232-9411-389335abaaf3",
            "sourceColumn": "x_studio_termination_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_dat_license",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "04e04671-6e6f-417a-a6e9-732ebfa53795",
            "sourceColumn": "x_studio_dat_license",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_bi_license",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "0ed6c78b-895c-4590-9f0e-ecd4d1b73e1c",
            "sourceColumn": "x_studio_bi_license",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_bamboo_employee_number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "eaa2bbd2-c0a2-4871-ada4-a712e8db40e9",
            "sourceColumn": "x_studio_bamboo_employee_number",
            "summarizeBy": "sum"
          }
        ],
        "description": [
          "This Table contains the data from the Recruitment module in Odoo.",
          "Direct Relationships:",
          "1 to * with behaviors_recruitment",
          "* to 1 with recruiter_key"
        ],
        "lineageTag": "ac3a3bb2-4066-482b-8ae0-10dbe4a4053e",
        "partitions": [
          {
            "name": "recruitment",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\Recruitment\\recruitment_api.xlsx\"), null, true),",
                "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    //start fixing dates and replaceing date errors",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"id\", Int64.Type}, {\"name\", type text}, {\"job_id\", type any}, {\"stage_id\", type any}, {\"user_id\", type any}, {\"create_date\", type datetime}, {\"source_id\", type any}, {\"active\", type logical}, {\"x_studio_start_date\", type date}, {\"x_studio_team\", type any}, {\"x_studio_sdr_start_date\", type any}, {\"x_studio_d_team_start_date\", type date}, {\"x_studio_henry_start_date\", type date}, {\"x_studio_mcleod_user_code\", type any}, {\"x_studio_mcleod_salesperson_code\", type any}, {\"x_studio_termination_date\", type date}, {\"x_studio_dat_license\", type logical}, {\"x_studio_bi_license\", type logical}, {\"x_studio_bamboo_employee_number\", Int64.Type}}),",
                "    #\"Replaced Errors\" = Table.ReplaceErrorValues(#\"Changed Type\", {{\"x_studio_start_date\", null}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Replaced Errors\",{{\"x_studio_sdr_start_date\", type datetime}}),",
                "    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Changed Type2\",{{\"x_studio_sdr_start_date\", type date}}),",
                "    #\"Replaced Errors2\" = Table.ReplaceErrorValues(#\"Changed Type3\", {{\"x_studio_sdr_start_date\", null}}),",
                "    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Replaced Errors2\",{{\"x_studio_d_team_start_date\", type datetime}}),",
                "    #\"Changed Type5\" = Table.TransformColumnTypes(#\"Changed Type4\",{{\"x_studio_d_team_start_date\", type date}}),",
                "    #\"Replaced Errors3\" = Table.ReplaceErrorValues(#\"Changed Type5\", {{\"x_studio_d_team_start_date\", null}}),",
                "    #\"Changed Type6\" = Table.TransformColumnTypes(#\"Replaced Errors3\",{{\"x_studio_henry_start_date\", type datetime}}),",
                "    #\"Changed Type7\" = Table.TransformColumnTypes(#\"Changed Type6\",{{\"x_studio_henry_start_date\", type date}}),",
                "    #\"Replaced Errors4\" = Table.ReplaceErrorValues(#\"Changed Type7\", {{\"x_studio_henry_start_date\", null}}),",
                "    #\"Changed Type8\" = Table.TransformColumnTypes(#\"Replaced Errors4\",{{\"x_studio_termination_date\", type datetime}}),",
                "    #\"Changed Type9\" = Table.TransformColumnTypes(#\"Changed Type8\",{{\"x_studio_termination_date\", type date}}),",
                "    //end fixing dates and replacing date errors",
                "    #\"Replaced Errors5\" = Table.ReplaceErrorValues(#\"Changed Type9\", {{\"x_studio_termination_date\", null}}),",
                "    #\"Extracted Text Between Delimiters\" = Table.TransformColumns(#\"Replaced Errors5\", {{\"job_id\", each Text.BetweenDelimiters(_, \"'\", \"'\"), type text}, {\"stage_id\", each Text.BetweenDelimiters(_, \"'\", \"'\"), type text}, {\"user_id\", each Text.BetweenDelimiters(Text.From(_, \"en-US\"), \"'\", \"'\"), type text}, {\"source_id\", each Text.BetweenDelimiters(Text.From(_, \"en-US\"), \"'\", \"'\"), type text}}),",
                "    #\"Replaced Errors6\" = Table.ReplaceErrorValues(#\"Extracted Text Between Delimiters\", {{\"job_id\", null}}),",
                "    #\"Replaced Errors7\" = Table.ReplaceErrorValues(#\"Replaced Errors6\", {{\"stage_id\", null}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Replaced Errors7\",{{\"x_studio_mcleod_user_code\", type text}}),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Changed Type1\",{{\"x_studio_mcleod_user_code\", Text.Upper, type text}}),",
                "    #\"Changed Type10\" = Table.TransformColumnTypes(#\"Uppercased Text\",{{\"x_studio_mcleod_salesperson_code\", type text}}),",
                "    #\"Uppercased Text1\" = Table.TransformColumns(#\"Changed Type10\",{{\"x_studio_mcleod_salesperson_code\", Text.Upper, type text}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Uppercased Text1\", each true)",
                "in",
                "    #\"Filtered Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "behaviors_crm",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Date behavior was marked complete",
            "formatString": "0",
            "lineageTag": "0aa12d9c-cf22-40c7-b224-bbabe2d6dba0",
            "sourceColumn": "id",
            "summarizeBy": "sum"
          },
          {
            "name": "author_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "User Name that marked done on the behavior",
            "lineageTag": "4f908433-a839-4c6e-b2fa-2d4dce4b2562",
            "sourceColumn": "author_id",
            "summarizeBy": "none"
          },
          {
            "name": "mail_activity_type_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "description": "Name of Behavior completed",
            "lineageTag": "0247e02c-01b0-44bf-be49-7fb372422165",
            "sourceColumn": "mail_activity_type_id",
            "summarizeBy": "none"
          },
          {
            "name": "res_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "description": "Id of the record in the CRM module",
            "formatString": "0",
            "lineageTag": "06161d52-7d68-4575-8914-1b86a2bd9d8e",
            "sourceColumn": "res_id",
            "summarizeBy": "none"
          },
          {
            "name": "Behavior Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "afa771b7-71ab-4ebb-b50d-0f38a702bbea",
            "sourceColumn": "Behavior Date",
            "summarizeBy": "none"
          },
          {
            "name": "Behavior Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "2ad0ebf3-c111-41a4-8cc4-84a27088a9ab",
            "sourceColumn": "Behavior Time",
            "summarizeBy": "none"
          },
          {
            "name": "model",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "32ecc5e1-db95-4fda-9994-ef3a13bd6346",
            "sourceColumn": "model",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "60a6b8ea-3595-4a19-a6c9-b7355eac33e4",
        "partitions": [
          {
            "name": "behaviors_crm",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Folder.Files(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\behaviors_api_files\"),",
                "    #\"Filtered Hidden Files1\" = Table.SelectRows(Source, each [Attributes]?[Hidden]? <> true),",
                "    #\"Invoke Custom Function1\" = Table.AddColumn(#\"Filtered Hidden Files1\", \"Transform File (2)\", each #\"Transform File (2)\"([Content])),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Invoke Custom Function1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Renamed Columns1\", {\"Source.Name\", \"Transform File (2)\"}),",
                "    #\"Expanded Table Column1\" = Table.ExpandTableColumn(#\"Removed Other Columns1\", \"Transform File (2)\", Table.ColumnNames(#\"Transform File (2)\"(#\"Sample File (2)\"))),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Table Column1\",{{\"Source.Name\", type text}, {\"id\", Int64.Type}, {\"date\", type datetime}, {\"author_id\", type any}, {\"mail_activity_type_id\", type text}, {\"model\", type text}, {\"res_id\", Int64.Type}}),",
                "    #\"Filtered Rows1\" = Table.SelectRows(#\"Changed Type\", each true),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows1\",{\"Source.Name\"}),",
                "    #\"Extracted Text Between Delimiters\" = Table.TransformColumns(#\"Removed Columns\", {{\"author_id\", each Text.BetweenDelimiters(_, \"'\", \"'\"), type text}, {\"mail_activity_type_id\", each Text.BetweenDelimiters(_, \"'\", \"'\"), type text}}),",
                "    #\"Replaced Errors\" = Table.ReplaceErrorValues(#\"Extracted Text Between Delimiters\", {{\"author_id\", null}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Replaced Errors\", each ([model] <> \"gamification.badge.user\") and ([author_id] <> null and [author_id] <> \"OdooBot\" and [author_id] <> \"Portal User Template\")),",
                "    #\"Split Column by Delimiter\" = Table.SplitColumn(Table.TransformColumnTypes(#\"Filtered Rows\", {{\"date\", type text}}, \"en-US\"), \"date\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"date.1\", \"date.2\"}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"date.1\", type date}, {\"date.2\", type time}}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Changed Type2\",{{\"date.1\", \"Behavior Date\"}, {\"date.2\", \"Behavior Time\"}})",
                "in",
                "    #\"Renamed Columns2\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "recruitment_goals",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Recruiter Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "602f2ed3-3ede-49b2-b891-af2d27152367",
            "sourceColumn": "Recruiter Name",
            "summarizeBy": "none"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "985c2a0a-aa9c-4ba0-91cb-4a9c384f3f00",
            "sourceColumn": "Month",
            "summarizeBy": "none"
          },
          {
            "name": "Goal Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cbf39696-2a8f-4756-9922-ded59fb35daf",
            "sourceColumn": "Goal Name",
            "summarizeBy": "none"
          },
          {
            "name": "Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "be5b2096-de7b-4bed-972b-775045b95623",
            "sourceColumn": "Goal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "b950a695-1299-40dd-98a8-8bb25b57b8b4",
        "partitions": [
          {
            "name": "recruitment_goals",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BridgeRecruiting/Shared%20Documents/Recruiting%20Goals/Recruitment%20Goals.xlsx\"), null, true),",
                "    #\"Recruitment Goals New_Sheet\" = Source{[Item=\"Recruitment Goals New\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Recruitment Goals New_Sheet\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Recruiter Name\", type text}, {\"Month\", type date}, {\"Goal Name\", type text}, {\"Goal\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "recruiter_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "user_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f6a3b89e-2c2e-4c1a-ad55-10aa1c3e8c9c",
            "sourceColumn": "user_id",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "3b345067-4d4e-480c-b080-e03599763fc7",
        "partitions": [
          {
            "name": "recruiter_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = recruitment,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"user_id\"}),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Other Columns\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Blank Rows\")",
                "in",
                "    #\"Removed Duplicates\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "measures_",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "30d8a488f3be407cbf3748524ffb8738"
          }
        ],
        "columns": [
          {
            "name": "Column",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isDataTypeInferred": true,
            "isHidden": true,
            "isNameInferred": true,
            "lineageTag": "a38f1fb3-97d7-4560-ac7f-362302c5b519",
            "sourceColumn": "[Column]",
            "summarizeBy": "sum",
            "type": "calculatedTableColumn"
          }
        ],
        "description": "All measures that are filed away in this table should have a description of their function",
        "lineageTag": "7020b7c3-2d88-4e8c-8b90-a7c7e4c86cfd",
        "measures": [
          {
            "name": "Hires",
            "description": [
              "counts the number of behaviors with the mail_activity_type_id of \"Offer Signed",
              ""
            ],
            "displayFolder": "Recruiting",
            "expression": "CALCULATE(DISTINCTCOUNT(behaviors_crm[id]),behaviors_crm[mail_activity_type_id]=\"Offer Signed\")",
            "formatString": "0",
            "lineageTag": "6c36572d-eda8-46a0-a984-96f019cf2a0d"
          },
          {
            "name": "PCS Revenue",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "description": [
              "Sum of Total Charges in PCS",
              ""
            ],
            "displayFolder": "Sales Measures\\Revenue\\PCS",
            "expression": [
              "",
              "CALCULATE(",
              "    SUM(pcs_loads[Total Revenue]),",
              "    pcs_loads[Ship Date]>=MIN('calendar'[Date]),",
              "    pcs_loads[Ship Date]<=MAX('calendar'[Date]))"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "isHidden": true,
            "lineageTag": "7f132a2e-5769-47af-8a9f-b1f283268a4d"
          },
          {
            "name": "PCS Carrier Pay",
            "description": "Sum of Carrier Pay in PCS",
            "displayFolder": "Pay Measures\\PCS",
            "expression": [
              "",
              "CALCULATE(",
              "    SUM(pcs_loads[Carrier Pay]),",
              "    pcs_loads[Ship Date]>=MIN('calendar'[Date]),",
              "    pcs_loads[Ship Date]<=MAX('calendar'[Date]))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "2eb2bdd8-124c-433b-85cc-d9dca1ef2412"
          },
          {
            "name": "PCS Margin",
            "description": "Total Charges minus Total Carrier Pay in PCS",
            "displayFolder": "Sales Measures\\Margin\\PCS",
            "expression": "[PCS Revenue]-[PCS Carrier Pay]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "isHidden": true,
            "lineageTag": "de633058-eb32-4ae4-bd19-2c07deb5d9a5"
          },
          {
            "name": "Revenue Available",
            "description": [
              "Sum of Revenue on orders still Available",
              ""
            ],
            "displayFolder": "Sales Measures\\Revenue",
            "expression": "CALCULATE(SUM(orders[Total Charges]),movements[Move Status]=\"Available\")",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "3004f14e-a01c-4b97-abe3-2f950059a3d0"
          },
          {
            "name": "McLeod Movements Carrier Pay",
            "description": [
              "This is the sum of all carrier pays on the movement (Including Other Pay)",
              "**Note of caution this will not include a other pay if paying a 3rd party payee such as a labor company or insurance company***"
            ],
            "displayFolder": "Pay Measures\\McLeod",
            "expression": [
              "",
              "CALCULATE(",
              "    SUM(movements[Projected Total Carrier Pay]),",
              "    orders[Ship Scheduled Early Date]>=MIN('calendar'[Date]),",
              "    orders[Ship Scheduled Early Date]<=MAX('calendar'[Date]))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "66781810-7d44-4eb1-b454-12032a540d9d"
          },
          {
            "name": "McLeod Covered Revenue",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Sum of total Charges on orders excluding Available Loads",
            "displayFolder": "Sales Measures\\Revenue\\McLeod",
            "expression": [
              "",
              "CALCULATE(",
              "    SUM(orders[Total Charges]),movements[Move Status]<>\"Available\",",
              "    orders[Ship Scheduled Early Date]>=MIN('calendar'[Date]),",
              "    orders[Ship Scheduled Early Date]<=MAX('calendar'[Date]))"
            ],
            "isHidden": true,
            "lineageTag": "95e18d0a-5dc1-4d5e-a73e-fee55b8a0553"
          },
          {
            "name": "Mcleod Orders Carrier Pay",
            "description": [
              "This is the sum of all settlement pay for a order coming from the order pay.",
              "***this is the pay used to calculate margin***"
            ],
            "displayFolder": "Pay Measures\\McLeod",
            "expression": [
              "",
              "CALCULATE(",
              "    SUM(orders[Projected Total Carrier Pay]),",
              "    orders[Ship Scheduled Early Date]>=MIN('calendar'[Date]),",
              "    orders[Ship Scheduled Early Date]<=MAX('calendar'[Date]))"
            ],
            "formatString": "0.00",
            "lineageTag": "65ee6f17-6816-4263-9f7c-de04f329194c"
          },
          {
            "name": "McLeod Margin",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "McLeod Revenue - McLeod Orders Carrier Pay for all orders excluding the move status of Available",
            "displayFolder": "Sales Measures\\Margin\\Mcleod",
            "expression": "CALCULATE([McLeod Covered Revenue]-[Mcleod Orders Carrier Pay],movements[Move Status]<>\"Available\",orders[Ship Scheduled Early Date]>=MIN('calendar'[Date]),orders[Ship Scheduled Early Date]<=MAX('calendar'[Date]))",
            "isHidden": true,
            "lineageTag": "32b6c49b-106a-47d7-a703-333472502abe"
          },
          {
            "name": "Margin Goal",
            "description": "The Sum of all Margin Goals In the Margin Load Count Goals",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "SUM(margin_load_count_goals[Margin Goal])",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "8958ff9c-1e17-41e8-95b8-ba4ab63253e2"
          },
          {
            "name": "Margin",
            "description": "All Revenue minus all order expenses",
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "[McLeod Margin]+[PCS Margin]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "7590a8b2-7766-4e0f-bb03-c4819dfcb9c5"
          },
          {
            "name": "Best Margin Month Ever",
            "description": "Best Margin month ever",
            "displayFolder": "Sales Measures\\Margin\\Bests\\Months",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY('calendar','calendar'[Month / Year]),",
              "        [Margin]),",
              "        REMOVEFILTERS('calendar'[Year]),",
              "        REMOVEFILTERS('calendar'[Month Name]))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "ae4be7d0-7df0-4f4f-bb6c-06caf6b0d2d2"
          },
          {
            "name": "McLeod Count Of Orders",
            "description": [
              "Count of the distinct order numbers in McLeod",
              "***Including Available***"
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\McLeod",
            "expression": "DISTINCTCOUNT(orders[Order ID])",
            "formatString": "0",
            "lineageTag": "9361d764-7974-424f-a790-250359a69452"
          },
          {
            "name": "PCS Count of Orders",
            "description": "Count of the distinct order numbers in PCS",
            "displayFolder": "Operations Measures\\Count of Orders\\PCS",
            "expression": "DISTINCTCOUNT(pcs_loads[Order ID])",
            "formatString": "0",
            "lineageTag": "5aee6b10-6dea-4806-9096-b71dd7811bf6"
          },
          {
            "name": "Count of Orders",
            "description": [
              "Count of all orders in McLeod and PCS",
              "***Includes Available Orders***"
            ],
            "displayFolder": "Operations Measures\\Count of Orders",
            "expression": "[McLeod Count Of Orders]+[PCS Count of Orders]",
            "formatString": "0",
            "lineageTag": "ff5134d3-dd92-4685-bea4-940ba00beb48"
          },
          {
            "name": "Count of Orders Covered",
            "description": "Count of the distinct order numbers Covered and beyond in McLeod and PCS",
            "displayFolder": "Operations Measures\\Count of Orders",
            "expression": "CALCULATE([Count of Orders],movements[Move Status]<>\"Available\")",
            "formatString": "0",
            "lineageTag": "75deba24-36c3-4731-99cc-835a67cfdde7"
          },
          {
            "name": "Load Count Goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Load Count Goal is Calculated by calculating the Margin Per order Last month then dividing the Margin Goal by the Margin Per Order Last Month",
            "displayFolder": "Sales Measures\\Sales Goals\\Load Count",
            "expression": [
              "",
              "Var margin_per_order_LM = CALCULATE([Margin Per Order],DATEADD('calendar'[Date],-  1,MONTH))",
              "Var load_count_goal = DIVIDE([Margin Goal],margin_per_order_LM)",
              "Var ifs= ",
              "    IF(margin_per_order_LM=0,5,load_count_goal)",
              "",
              "Return ",
              "ifs"
            ],
            "lineageTag": "49997ed8-aeba-43bd-b18f-305d06aad5d8"
          },
          {
            "name": "Best Count of Orders Month Ever",
            "description": "Best Month ever of Orders that were Covered and beyond",
            "displayFolder": "Operations Measures\\Count of Orders\\Bests\\Months",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY('calendar','calendar'[Month / Year]),",
              "        [Count of Orders Covered]),",
              "        REMOVEFILTERS('calendar'[Year]),",
              "        REMOVEFILTERS('calendar'[Month Name]))"
            ],
            "formatString": "0",
            "lineageTag": "058ce1b5-bebc-4d92-8133-cf6f80c6f0d8"
          },
          {
            "name": "Margin vs Margin Goal Gauge Max",
            "description": "This measure Sets the max value for the Margin vs Margin Goal Gauge. if the best month they have had is less than the goal it will set the goal as the max value. if there goal is less than their best it will set the best as the max of the gauge.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "IF([Margin Goal]>[Best Margin Month Ever],[Margin Goal],[Best Margin Month Ever])"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "4d1a5017-a3f7-439f-bf95-345d56d33c45"
          },
          {
            "name": "Load Count vs Load Count Goal Guage Max",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This measure Sets the max value for the Load Count vs Load Count Goal Gauge. if the best month they have had is less than the goal it will set the goal as the max value. if there goal is less than their best it will set the best as the max of the gauge.",
            "displayFolder": "Sales Measures\\Sales Goals\\Load Count",
            "expression": [
              "",
              "IF([Best Count of Orders Month Ever]<=[Load Count Goal],[Load Count Goal],[Best Count of Orders Month Ever])"
            ],
            "lineageTag": "688b7851-6a66-42a6-9e45-10c83f15650a"
          },
          {
            "name": "Best Margin Per Order Month Ever",
            "description": "Best Margin per order month ever",
            "displayFolder": "Sales Measures\\Margin\\Bests\\Months",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY('calendar','calendar'[Month / Year]),",
              "        [Margin Per Order]),",
              "        REMOVEFILTERS('calendar'[Year]),",
              "        REMOVEFILTERS('calendar'[Month Name]),",
              "        REMOVEFILTERS('calendar'[Date]))"
            ],
            "formatString": "0",
            "lineageTag": "890eab4f-9c3f-488d-b25d-b56b93103c78"
          },
          {
            "name": "Margin per Order vs Margin per Order Goal Gauge Max",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This measure Sets the max value for the Margin per Order vs Margin per Order Goal Gauge. if the best month they have had is less than the goal it will set the goal as the max value. if there goal is less than their best it will set the best as the max of the gauge.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "IF([Avg Margin Per Order Goal]>=[Best Margin Per Order Month Ever],[Avg Margin Per Order Goal],[Best Margin Per Order Month Ever])"
            ],
            "lineageTag": "0c02dceb-b2dd-4cb0-88d3-de533deacca4"
          },
          {
            "name": "Avg Margin Per Order Goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "description": "The Average of the Margin per Order Goals in the Margin Load Count Table",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "AVERAGE(margin_load_count_goals[Margin Per Order Goal])",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "f80df9e9-eb8a-4746-9921-bbec4033434a"
          },
          {
            "name": "Margin %",
            "description": [
              "Margin divided by Revenue",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "DIVIDE([Margin],[Revenue Covered])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "59683e76-1236-437d-b778-7e82222e5389"
          },
          {
            "name": "Revenue Covered",
            "description": "Sum of the Covered Revenue in both PCS and McLeod",
            "displayFolder": "Sales Measures\\Revenue",
            "expression": "[McLeod Covered Revenue]+[PCS Revenue]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "ec7db848-619f-42b1-b965-43c08854cc2b"
          },
          {
            "name": "Avg Margin % Goal",
            "description": "The Average of the Margin Percentage Goals in the Margin Load Count Table",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "AVERAGE(margin_load_count_goals[Margin % Goal])",
            "formatString": "0%;-0%;0%",
            "lineageTag": "9b63a7d7-26cd-4cd0-b9a4-1347855bcffd"
          },
          {
            "name": "Best Margin % Month Ever",
            "description": "Best Margin % month ever",
            "displayFolder": "Sales Measures\\Margin\\Bests\\Months",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY('calendar','calendar'[Month / Year]),",
              "        [Margin %]),",
              "        REMOVEFILTERS('calendar'[Year]),",
              "        REMOVEFILTERS('calendar'[Month Name]))"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "42972458-5397-4e50-8431-8713a0131f20"
          },
          {
            "name": "Margin % vs Margin % Goal Guage Max",
            "description": "This measure Sets the max value for the Margin % vs Margin % Goal Gauge. if the best month they have had is less than the goal it will set the goal as the max value. if there goal is less than their best it will set the best as the max of the gauge.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "IF([Best Margin % Month Ever]<=[Avg Margin % Goal],[Avg Margin % Goal],[Best Margin % Month Ever])"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "c716c9f2-681e-46bd-9aac-f1454f2404ab"
          },
          {
            "name": "Sales BWS Behavior Progress",
            "description": "The the Count of completed behaviors divided by the sum of the Behavior goal",
            "displayFolder": "Behavior Goal Measures",
            "expression": [
              "",
              "Var behavior_progress = DIVIDE([BWS Behaviors],[Behavior Goals])",
              "Var Ifs = ",
              "    IF(behavior_progress=0,0,",
              "    IF(behavior_progress>=1,1,",
              "    behavior_progress))",
              "",
              "Return",
              "Ifs"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "8d4cd900-fc1b-4a4f-9c5c-cbde2a106369"
          },
          {
            "name": "Behavior Points",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Calculates the Average Of their Behavior Progress then multiplies that by the Max Points allowed",
              "",
              "Max Points is 30"
            ],
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "var avereage_behavior_progress = AVERAGEX(behavior_goals,[Sales BWS Behavior Progress])",
              "",
              "var behavior_points_pre_july_24 = ",
              "    IF(avereage_behavior_progress=0,0,",
              "    IF(avereage_behavior_progress>=1,30,",
              "    avereage_behavior_progress*30))",
              "",
              "var max_points_post_after_july24 = 20",
              "var behavior_points_after_july24 = ",
              "    IF(avereage_behavior_progress=0,0,",
              "    IF(avereage_behavior_progress>=1,max_points_post_after_july24,",
              "    avereage_behavior_progress*max_points_post_after_july24))",
              "",
              "var behavior_points = ",
              "    IF(MIN('calendar'[Date])>=45474,behavior_points_after_july24,behavior_points_pre_july_24)",
              "",
              "return",
              "behavior_points"
            ],
            "lineageTag": "5ed6fd93-a696-4ec4-9f48-f757bbaa22b7"
          },
          {
            "name": "Sales Margin Points",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Takes Margin and divides it by Margin Goal then multiplies that by the Max Points allowed",
              "",
              "Max Points = 30"
            ],
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "Var max_points_pre_july24 = 30",
              "Var max_points_after_july_24 = 80",
              "Var margin_progress = DIVIDE([Margin],[Margin Goal])",
              "",
              "Var margin_points_pre_july24 =",
              "    IF(margin_progress=0,0,",
              "    IF(margin_progress>=1,max_points_pre_july24,",
              "    margin_progress*max_points_pre_july24))",
              "",
              "Var margin_points_after_july24 =",
              "    IF(margin_progress=0,0,",
              "    IF(margin_progress>=1,max_points_after_july_24,",
              "    margin_progress*max_points_after_july_24))",
              "",
              "Var ifs = IF(MIN('calendar'[Date])>=45474,margin_points_after_july24,margin_points_pre_july24)",
              "",
              "Return",
              "ifs"
            ],
            "lineageTag": "e9c94891-ddef-44a4-b210-4e66a712f388"
          },
          {
            "name": "Sales Load Count Points",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Count of covered orders divided by load count goal.",
              "if progress is 0, 0 points awarded",
              "if progress is >=1, max points",
              "standard is progress times max points",
              "",
              "max points =10"
            ],
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "Var max_points = 10",
              "Var load_count_progress = DIVIDE([Count of Orders Covered],[Load Count Goal])",
              "Var load_count_points = ",
              "    IF(load_count_progress=0,0,",
              "    IF(load_count_progress>=1,max_points,",
              "    load_count_progress*max_points))",
              "",
              "Var ifs = IF(MIN('calendar'[Date])>=45474,0,load_count_points)",
              "",
              "return",
              "ifs"
            ],
            "lineageTag": "dbdad4c0-fc61-4975-89ac-c6f8a6185a83"
          },
          {
            "name": "Sales margin % Points",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Max Points = 15",
              "Margin% goal pre 7/1/2023 = 18%",
              "Current Margin % goal = 10%"
            ],
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "Var max_points = 15",
              "Var pre_july_twenty_three_goal = .18",
              "Var current_percentage_goal = .1",
              " ",
              "Var old_score =",
              "    IF([Margin %]=0,0,",
              "    IF([Margin %]>=pre_july_twenty_three_goal,max_points,",
              "    max_points-((pre_july_twenty_three_goal-[Margin %])*100)))",
              " ",
              "Var new_score =",
              "    IF([Margin %]=0,0,",
              "    IF([Margin %]>=current_percentage_goal,max_points,",
              "    max_points-(((current_percentage_goal-[Margin %])*2)*100)))",
              " ",
              "Var old_ifs =",
              "    IF(",
              "        MIN('calendar'[Date])<45017,old_score,",
              "        new_score)",
              "",
              "Var ifs = IF(MIN('calendar'[Date])>=45474,0,old_ifs)",
              "",
              "Return",
              "ifs"
            ],
            "lineageTag": "d48c168f-d65e-49e6-881f-b4ea7e7d9a24"
          },
          {
            "name": "Diversity Points",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Max points =15",
              "Max Diversity% = 40%",
              "",
              "Salesperson loses .25 points every percent over 40%"
            ],
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "Var max_points = 15",
              "Var max_percentage_allowed = .4",
              "",
              "Var max_of_margin = MAXX(ALL(crm_customer_key[Customer ID]),[Margin])",
              "Var grand_total_margin = CALCULATE([Margin],ALL(crm_customer_key[Customer ID]))",
              "Var top_customer_percent_of_grand_total = DIVIDE(max_of_margin,grand_total_margin)",
              "",
              "Var diversity_points_pre_july24 = ",
              "    IF([Margin]=0,0,",
              "    IF(top_customer_percent_of_grand_total<=max_percentage_allowed,max_points,",
              "    max_points-((top_customer_percent_of_grand_total-max_percentage_allowed)*25)))",
              "",
              "Var ifs = IF(MIN('calendar'[Date])>=45474,0,diversity_points_pre_july24)",
              "",
              "RETURN",
              "ifs"
            ],
            "lineageTag": "aa98a156-2d65-4cfd-9920-412886b79eac"
          },
          {
            "name": "Total Sales BWS",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Sum of Behavior points, diversity points, load count points, margin % points, and margin points",
            "displayFolder": "BWS\\Sales",
            "expression": "[Behavior Points]+[Sales Margin Points]+[Sales Load Count Points]+[Sales margin % Points]+[Diversity Points]",
            "lineageTag": "f86d0a72-5b30-4956-b2d2-6f559799134d"
          },
          {
            "name": "Behavior Goals",
            "description": "Sum of Behavior Goals",
            "displayFolder": "Behavior Goal Measures",
            "expression": "SUM(behavior_goals[Goal])",
            "formatString": "0",
            "lineageTag": "4bad0591-883f-4f4d-8125-b5002a117c78"
          },
          {
            "name": "BWS Behaviors",
            "description": "This is a distinct Count of the ID of rows in the bws_behaviors table",
            "displayFolder": "Behavior Goal Measures",
            "expression": "DISTINCTCOUNT(bws_behaviors[id])",
            "formatString": "0",
            "lineageTag": "1f4c6704-1738-4b19-bde8-687c333e035a"
          },
          {
            "name": "Average Sales BWS",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "The Average of the Sales BWS.",
              "",
              "(Made up by Margin Points, Behavior Points, Diversity Points, Load Count Points, and Margin % Points,)"
            ],
            "displayFolder": "BWS\\Sales",
            "expression": "AVERAGEX(GROUPBY(salesperson_key,salesperson_key[Salesperson Name]),[Total Sales BWS])",
            "lineageTag": "9e3ce4eb-57f3-48df-98f8-f50e42d5e4bd"
          },
          {
            "name": "Count of LFG",
            "description": "Count of individuals that BWS is >=85 and <90",
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "CALCULATE(",
              "    DISTINCTCOUNT(salesperson_key[Salesperson Name]),",
              "    FILTER(salesperson_key,[Average Sales BWS]>=85),",
              "    FILTER(salesperson_key,[Average Sales BWS]<90))"
            ],
            "formatString": "0",
            "lineageTag": "a0d7dbff-b3c5-4e28-945a-3e034b35d776"
          },
          {
            "name": "LFG",
            "description": "This is a text box that reads \"LFG\"",
            "displayFolder": "Text Boxes",
            "expression": "\"LFG\"",
            "lineageTag": "4c1b4321-9d7d-45aa-8a7f-e0493a76cb2b"
          },
          {
            "name": "Count of Avg Joe",
            "description": [
              "Count of individuals that BWS is >=80and <85",
              ""
            ],
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              " CALCULATE(",
              "    DISTINCTCOUNT(salesperson_key[Salesperson Name]),",
              "    FILTER(salesperson_key,[Average Sales BWS]>=80),",
              "    FILTER(salesperson_key,[Average Sales BWS]<85))"
            ],
            "formatString": "0",
            "lineageTag": "566e4e9c-2133-477c-829b-a056eef00d00"
          },
          {
            "name": "Avg Joe",
            "description": "This is a text box that reads \"Avg Joe's\"",
            "displayFolder": "Text Boxes",
            "expression": "\"Avg Joe\"",
            "lineageTag": "2b36fbd6-f8e8-4e7d-b3bd-d30094107436"
          },
          {
            "name": "Count of HHS",
            "description": "Count of individuals that BWS is >=90 and <95",
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "CALCULATE(",
              "    DISTINCTCOUNT(salesperson_key[Salesperson Name]),",
              "    FILTER(salesperson_key,[Average Sales BWS]>=90),",
              "    FILTER(salesperson_key,[Average Sales BWS]<95))",
              ""
            ],
            "formatString": "0",
            "lineageTag": "b824482f-f9e0-44be-99d8-1110b82a322d"
          },
          {
            "name": "WOOO!",
            "description": "This is a text box that reads \"Grinders\"",
            "displayFolder": "Text Boxes",
            "expression": "\"WOOO!\"",
            "lineageTag": "07aab317-650a-4153-9fbf-bedd12a4afcb"
          },
          {
            "name": "Count of WOOO!",
            "description": "Count of individuals that BWS is >= 95",
            "displayFolder": "BWS\\Sales",
            "expression": [
              "",
              "CALCULATE(",
              "    DISTINCTCOUNT(salesperson_key[Salesperson Name]),",
              "    FILTER(salesperson_key,[Average Sales BWS]>=95))"
            ],
            "formatString": "0",
            "lineageTag": "31faf689-d9ad-43bc-b7cd-1d966f158aab"
          },
          {
            "name": "HHS",
            "description": "This is a Text Box that reads \"HHS\"",
            "displayFolder": "Text Boxes",
            "expression": "\"HHS\"",
            "lineageTag": "c454275e-0312-475d-bcb9-9badc8f70281"
          },
          {
            "name": "Last Ship Date",
            "description": [
              "Calculates the Last Shipment Date",
              "",
              "based of of Scheduled pickup"
            ],
            "displayFolder": "Operations Measures",
            "expression": [
              "",
              "Var pcs_last_ship_date = MAX(pcs_loads[Ship Date])",
              "Var mcleod_last_ship_date = ",
              "    CALCULATE(MAX(orders[Ship Scheduled Early Date]),movements[Move Status]<>\"Available\")",
              "",
              "Var ifs =",
              "    IF(mcleod_last_ship_date=BLANK(),pcs_last_ship_date,",
              "    IF(mcleod_last_ship_date>=TODAY(),TODAY(),",
              "    mcleod_last_ship_date))",
              "",
              "Return",
              "ifs"
            ],
            "formatString": "Short Date",
            "lineageTag": "bd8be779-c7e4-4512-90cf-3eab6dc7633f"
          },
          {
            "name": "Days Since Last Shipment",
            "description": [
              "Number of days since the last shipment with a Company",
              ""
            ],
            "displayFolder": "Operations Measures",
            "expression": "DATEDIFF([Last Ship Date],TODAY(),DAY)",
            "formatString": "0",
            "lineageTag": "43822a86-d060-4b37-887f-7215d3eccb04"
          },
          {
            "name": "Days since Last Stage Update",
            "description": "Number of days since a CRM record has moved Stages",
            "displayFolder": "CRM Measures\\At Risk Measures",
            "expression": [
              "",
              " DATEDIFF(",
              "    MAX(crm[Last Stage Change]),TODAY(),DAY)"
            ],
            "formatString": "0",
            "lineageTag": "b669db3e-dfdb-4a29-a533-11647da22c25"
          },
          {
            "name": "Last Behavior Date",
            "description": "The Newest Behavior that has been completed from the behaviors_crm table",
            "displayFolder": "CRM Measures",
            "expression": "MAX(behaviors_crm[Behavior Date])",
            "formatString": "Short Date",
            "lineageTag": "c445a8be-6d34-4033-b3fd-d4b770321e91"
          },
          {
            "name": "Days since last Behaivor",
            "description": "Calculates the number of days since the last behavior was completed in Odoo",
            "displayFolder": "CRM Measures\\At Risk Measures",
            "expression": "DATEDIFF([Last Behavior Date],TODAY(),DAY)",
            "formatString": "0",
            "lineageTag": "344dc455-9bf5-4b66-b8b6-1f761e227e84"
          },
          {
            "name": "Days Over Due",
            "description": "Calculates the number if Days the Next Behavior for a company in Odoo Is over due",
            "displayFolder": "CRM Measures\\At Risk Measures",
            "expression": [
              "",
              "Var next_behavior_deadline = MAX(crm[activity_date_deadline])",
              "Var days_over_due = DATEDIFF(next_behavior_deadline,TODAY(),DAY)",
              "",
              "Return ",
              "days_over_due"
            ],
            "formatString": "0",
            "lineageTag": "49ce9ec4-abec-4123-85c5-c5a4faeb4bb9"
          },
          {
            "name": "Days since last Salesperson Update",
            "description": "Number of days since the current salesperson was put on the CRM record",
            "displayFolder": "CRM Measures\\At Risk Measures",
            "expression": "DATEDIFF(MAX(crm[date_open]),TODAY(),DAY)",
            "formatString": "0",
            "lineageTag": "5b3c2468-0e91-4a38-ad72-679abc7b0973"
          },
          {
            "name": "Days since Last Shipment is over 120",
            "description": [
              "If Days since last shipment is the reason for a company being at risk this measure will equal 1 if not 0",
              "",
              "Applies to Stages:",
              "1-3 Loads and Customer",
              "",
              "Var at_risk = IF([Days Since Last Shipment]>120,1,0)",
              "Var ifs =",
              "IF(MIN(crm[Stage])=\"Customer\",at_risk,",
              "IF(MIN(crm[Stage])=\"1-3 Loads\",at_risk,0))",
              "",
              "",
              "return",
              "ifs"
            ],
            "displayFolder": "CRM Measures\\At Risk Measures\\At Risk Reasons",
            "expression": [
              "",
              "Var at_risk = IF([Days Since Last Shipment]>120,1,0)",
              "Var ifs = ",
              "    IF(MIN(crm[Stage])=\"Customer\",at_risk,",
              "    IF(MIN(crm[Stage])=\"1-3 Loads\",at_risk,0))",
              "",
              "",
              "return",
              "ifs"
            ],
            "formatString": "0",
            "lineageTag": "2a093521-b4ac-4000-9e06-ac02fb4121b2"
          },
          {
            "name": "Days since last stage update is one of the reasons at risk reason",
            "description": [
              "Days since last stage update is one of the reasons at risk reason",
              "",
              "",
              "",
              "Var prospect_at_risk = if([Days since Last Stage Update]>90,1,0)",
              "Var pipeline_at_risk = IF([Days since Last Stage Update]>60,1,0)",
              "Var ifs =",
              "IF(MIN(crm[Stage])=\"Customer\",0,",
              "IF(MIN(crm[Stage])=\"Working\",prospect_at_risk,",
              "IF(MIN(crm[Stage])=\"No For Now\",prospect_at_risk,",
              "IF(MIN(crm[Stage])=\"Qualified\",pipeline_at_risk,",
              "IF(MIN(crm[Stage])=\"Quoted\",pipeline_at_risk,",
              "IF(MIN(crm[Stage])=\"Credit App\",pipeline_at_risk,",
              "IF(MIN(crm[Stage])=\"1-3 Loads\",pipeline_at_risk,0)))))))",
              "",
              "Return",
              "ifs",
              "",
              ""
            ],
            "displayFolder": "Crm Measures\\At Risk Measures\\At Risk Reasons",
            "expression": [
              "",
              "Var prospect_at_risk = if([Days since Last Stage Update]>90,1,0)",
              "Var pipeline_at_risk = IF([Days since Last Stage Update]>60,1,0)",
              "Var ifs = ",
              "    IF(MIN(crm[Stage])=\"Customer\",0,",
              "    IF(MIN(crm[Stage])=\"Working\",prospect_at_risk,",
              "    IF(MIN(crm[Stage])=\"No For Now\",prospect_at_risk,",
              "    IF(MIN(crm[Stage])=\"Qualified\",pipeline_at_risk,",
              "    IF(MIN(crm[Stage])=\"Quoted\",pipeline_at_risk,",
              "    IF(MIN(crm[Stage])=\"Credit App\",pipeline_at_risk,",
              "    IF(MIN(crm[Stage])=\"1-3 Loads\",pipeline_at_risk,0)))))))",
              "",
              "Return",
              "ifs"
            ],
            "formatString": "0",
            "lineageTag": "f38c0e47-8b88-46fa-bdd1-497c36c8aaee"
          },
          {
            "name": "Days Since Last Behavior is one of the reason for at risk",
            "description": [
              "Days Since Last Behavior is the reason for at risk",
              "",
              "Var opportunity_at_risk = IF([Days since last Behaivor]>60,1,0)",
              "Var working_at_risk = IF([Days since last Behaivor]>60,1,0)",
              "Var no_for_now_at_risk = IF([Days since last Behaivor]>90,1,0)",
              "",
              "Var Ifs =",
              "IF(MIN(crm[Stage])=\"Qualified\",opportunity_at_risk,",
              "IF(MIN(crm[Stage])=\"Quoted\",opportunity_at_risk,",
              "IF(MIN(crm[Stage])=\"Credit App\", opportunity_at_risk,",
              "IF(MIN(crm[Stage])=\"1-3 Loads\",opportunity_at_risk,",
              "IF(MIN(crm[Stage])=\"Customer\",opportunity_at_risk,",
              "IF(MIN(crm[Stage])=\"Working\",working_at_risk,",
              "IF(MIN(crm[Stage])=\"No For Now\",no_for_now_at_risk,0)))))))",
              "",
              "Return",
              "Ifs"
            ],
            "displayFolder": "CRM Measures\\At Risk Measures\\At Risk Reasons",
            "expression": [
              "",
              "Var opportunity_at_risk = IF([Days since last Behaivor]>60,1,0)",
              "Var working_at_risk = IF([Days since last Behaivor]>60,1,0)",
              "Var no_for_now_at_risk = IF([Days since last Behaivor]>90,1,0)",
              "",
              "Var Ifs = ",
              "    IF(MIN(crm[Stage])=\"Qualified\",opportunity_at_risk,",
              "    IF(MIN(crm[Stage])=\"Quoted\",opportunity_at_risk,",
              "    IF(MIN(crm[Stage])=\"Credit App\", opportunity_at_risk,",
              "    IF(MIN(crm[Stage])=\"1-3 Loads\",opportunity_at_risk,",
              "    IF(MIN(crm[Stage])=\"Customer\",opportunity_at_risk,",
              "    IF(MIN(crm[Stage])=\"Working\",working_at_risk,",
              "    IF(MIN(crm[Stage])=\"No For Now\",no_for_now_at_risk,0)))))))",
              "",
              "Return",
              "Ifs"
            ],
            "formatString": "0",
            "lineageTag": "9d5cea29-fc1d-4d61-b959-41c9e97014eb"
          },
          {
            "name": "Count of At Risk",
            "description": [
              "Count of Companies Deemed to be at risk.",
              "",
              "please see BOTL for details on what is at risk."
            ],
            "displayFolder": "CRM Measures\\At Risk Measures",
            "expression": "CALCULATE(DISTINCTCOUNT(crm[id]),crm[At Risk]=\"TRUE\")",
            "formatString": "0",
            "lineageTag": "cf53aa87-b06c-4ce4-9aef-78789cc8a126"
          },
          {
            "name": "Customer Margin Goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "description": "The Sum of the Margin Goal from the customer_margin_goal table",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "SUMX(customer_margin_goal,customer_margin_goal[Margin Goal])",
              ""
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "1b735731-d2fd-4841-b739-1dada7cd43ea"
          },
          {
            "name": "Customer Margin vs Customer Margin Goal Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This Measure Calculates the difference between Actual Margin with a customer and what the goal set for that Customers Margin.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "if([Customer Margin Goal]<=0,BLANK(),[Margin]-[Customer Margin Goal])",
            "lineageTag": "39315212-b1a1-4965-ae58-d057a9e8d955"
          },
          {
            "name": "Customer Load Count Goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "description": [
              "This Measure Calculates the Margin per Order Last month (MPOLM) then divides the Customer Margin Goal by MPOLM to get the Customer Load count goal.",
              "",
              "**if there was no MPOLM for that customer it will use the MPOLM for the salesperson as a hole***"
            ],
            "displayFolder": "Sales Measures\\Sales Goals\\Load Count",
            "expression": [
              "",
              "Var margin_per_load_last_month_customer_filter_removed = ",
              "    CALCULATE(",
              "        [Margin Per Order],",
              "        DATEADD('calendar'[Date],-1,MONTH),",
              "        REMOVEFILTERS(customer_key[Customer Name]),",
              "        REMOVEFILTERS(parent_customer_key[Customer Name]))",
              "Var margin_per_order_last_month = CALCULATE([Margin Per Order],DATEADD('calendar'[Date],-1,MONTH))",
              "Var margin_per_order_last_month_ifs = ",
              "    IF(margin_per_order_last_month=BLANK(),margin_per_load_last_month_customer_filter_removed,",
              "    IF(margin_per_order_last_month<=0,margin_per_load_last_month_customer_filter_removed,",
              "    margin_per_order_last_month))",
              "Var customer_load_count_goal = ",
              "    IF([Customer Margin Goal]=BLANK(),BLANK(),DIVIDE([Customer Margin Goal],margin_per_order_last_month_ifs))",
              "    ",
              "Return",
              "customer_load_count_goal"
            ],
            "formatString": "0",
            "lineageTag": "6cf6030d-51af-4e54-bc24-3e244e859933"
          },
          {
            "name": "Margin MTD",
            "description": "adds up all of the margin generated on days less than the current day of the month for the month that you have selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date",
            "expression": "TOTALMTD([Margin],'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "249a2f48-04d8-4f17-b5d5-9c9d69bd62cd"
          },
          {
            "name": "Margin per day Goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "description": "This Measure takes the sum of Margin Goals and divides it by the number of working days in the month.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "Var workingdays = ",
              "    NETWORKDAYS(",
              "        STARTOFMONTH('Calendar'[Date]),",
              "        ENDOFMONTH('Calendar'[Date]),",
              "        1,",
              "        observed_holidays)",
              "Var months_margin_goal = CALCULATE([Margin Goal],REMOVEFILTERS('calendar'[Date]))",
              "Var override_mpdg = CALCULATE([Override margin goal],REMOVEFILTERS('calendar'[Date]))",
              "Var mpd = DIVIDE(months_margin_goal,workingdays)",
              "",
              "Var override_blank = IF(override_mpdg=0,mpd,override_mpdg)",
              "",
              "Var wolf_pack_switch = SWITCH(TRUE(),SELECTEDVALUE(wolf_pack[Wolf Pack])=BLANK(),override_blank,mpd)",
              "",
              "Var mpdg = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Name])=BLANK(),wolf_pack_switch,mpd)",
              "",
              "Return",
              "mpdg"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "6eb1921f-1bec-40f9-97eb-639edb7614ba"
          },
          {
            "name": "Margin 1MA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated one month prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Months Ago",
            "expression": "CALCULATE([Margin],DATEADD('calendar'[Date],-1,MONTH))",
            "lineageTag": "dce6050d-571d-47ce-9d3f-689f9b5f5a15"
          },
          {
            "name": "Count of Orders Covered 1MA",
            "description": "adds up all of the covered orders for one month prior to the month selected in your filter context.",
            "displayFolder": "Operations measures\\Count of Orders\\Months Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "63487b85-dd28-4398-92ee-b80bf508a02c"
          },
          {
            "name": "Margin 1YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated one year prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Years Ago",
            "expression": "CALCULATE([Margin],DATEADD('calendar'[Date],-1,YEAR))",
            "lineageTag": "617fecb0-8d75-46f3-84df-4b710f74df58"
          },
          {
            "name": "Count of Orders Covered 1YA",
            "description": "Calculates the total of all the covered orders for one year prior to the year selected in your filter context.",
            "displayFolder": "Operations measures\\Count of Orders\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-1,YEAR))",
            "formatString": "0",
            "lineageTag": "64fcf6c4-b8ee-4b2a-b165-f1101b0efc18"
          },
          {
            "name": "Margin 4QA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated four quarters prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Quarters Ago",
            "expression": "CALCULATE([Margin],DATEADD('calendar'[Date],-4,QUARTER))",
            "lineageTag": "0cdb8bc0-e7b2-4aba-b16e-c6360b52bf35"
          },
          {
            "name": "Count of Orders Covered 4QA",
            "description": "Calculates the total number of Orders Covered four quarters prior to the quarter selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\Quarters Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-4,QUARTER))",
            "formatString": "0",
            "lineageTag": "bf39d2d8-e802-4d8b-9df2-abed4cdef908"
          },
          {
            "name": "Margin 1QA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated one quarter prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Quarters Ago",
            "expression": "CALCULATE([Margin],DATEADD('calendar'[Date],-1,QUARTER))",
            "lineageTag": "cbf8c580-ff29-47ab-bde0-45901b8a305b"
          },
          {
            "name": "Count of Orders Covered 1QA",
            "description": [
              "Calculates the total number of Orders Covered one quarter prior to the quarter selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\Quarters Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-1,QUARTER))",
            "formatString": "0",
            "lineageTag": "5170147b-9a6a-431c-a8ce-b1191e4d1a06"
          },
          {
            "name": "Count of Orders Covered MTD",
            "description": "adds up all of the covered orders generated on days less than the current day of the month for the month that you have selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month To Date",
            "expression": "TOTALMTD([Count of Orders Covered],'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "0",
            "lineageTag": "de744e67-e3df-4ec3-b42a-f74bd25842a2"
          },
          {
            "name": "Margin MTD 1MA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the month for one month prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Months Ago",
            "expression": "CALCULATE([Margin MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "lineageTag": "5c0bdd97-0a66-4af0-b838-3e25e7fb9961"
          },
          {
            "name": "Count of Orders Covered MTD 1MA",
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the month for one month prior to the month selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month To Date\\Months Ago",
            "expression": "CALCULATE([Count of Orders Covered MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "08118cbe-9372-4e1f-8055-d711a2606d56"
          },
          {
            "name": "Count of Orders Covered MTD 1YA",
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the month for one year prior to the month selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered MTD],DATEADD('calendar'[Date],-1,YEAR))",
            "formatString": "0",
            "lineageTag": "9e9a95f7-cda6-47cb-bcc3-af9efd3842ad"
          },
          {
            "name": "Margin MTD 1YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the month for one year prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Years Ago",
            "expression": "CALCULATE([Margin MTD],DATEADD('calendar'[Date],-1,YEAR))",
            "lineageTag": "f8c9de3c-363e-460e-b784-3d7ce2452497"
          },
          {
            "name": "Margin QTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for the quarter that you have selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date",
            "expression": [
              "",
              "Var today_doq = CALCULATE(MIN('calendar'[Day of Quarter]),'calendar'[Date]=TODAY())",
              "Var margin_qtd = TOTALQTD([Margin],'calendar'[Date],'calendar'[Day of Quarter]<today_doq)",
              "",
              "Return margin_qtd"
            ],
            "lineageTag": "9e2fc52b-d993-44d5-9684-86da2a0b8576"
          },
          {
            "name": "Count of Orders Covered QTD",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for the quarter that you have selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date",
            "expression": [
              "",
              "Var today_doq = CALCULATE(MIN('calendar'[Day of Quarter]),'calendar'[Date]=TODAY())",
              "Var load_count_qtd = TOTALQTD([Count of Orders Covered],'calendar'[Date],'calendar'[Day of Quarter]<today_doq)",
              "",
              "Return ",
              "load_count_qtd"
            ],
            "formatString": "0",
            "lineageTag": "1f8bc65a-6df4-4738-8d42-c6a6836a4211"
          },
          {
            "name": "Margin QTD 1QA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for one quarter prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Quarter Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('calendar'[Date],-1,QUARTER))",
            "lineageTag": "b15af374-e621-459c-827d-c8a300ae1ea2"
          },
          {
            "name": "Count of Orders Covered QTD 1QA",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for one quarter prior to the quarter selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Quarters Ago",
            "expression": "CALCULATE([Count of Orders Covered QTD],DATEADD('calendar'[Date],-1,QUARTER))",
            "formatString": "0",
            "lineageTag": "0a0fa56b-3227-43b8-ace7-1ab96dada88e"
          },
          {
            "name": "Margin QTD 4QA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for four quarters prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Quarter Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('calendar'[Date],-4,QUARTER))",
            "lineageTag": "d29a5a11-9b0e-4ebd-b009-c4511b3d670e"
          },
          {
            "name": "Count of Orders Covered QTD 4QA",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for four quarters prior to the quarter selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Quarters Ago",
            "expression": "CALCULATE([Count of Orders Covered QTD],DATEADD('calendar'[Date],-4,QUARTER))",
            "formatString": "0",
            "lineageTag": "dc08cfc9-a2a3-42c5-872e-382a8955878b"
          },
          {
            "name": "Margin YTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the year for the year that you have selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date",
            "expression": [
              "",
              "Var today_doy = CALCULATE(MIN('calendar'[Day of Year]),'calendar'[Date]=TODAY())",
              "Var margin_ytd = TOTALYTD([Margin],'calendar'[Date],'calendar'[Day of Year]<today_doy)",
              "",
              "Return",
              "margin_ytd"
            ],
            "lineageTag": "61189f78-204d-4639-b833-1cad7415fd24"
          },
          {
            "name": "Count of Orders Covered YTD",
            "description": "Calculates the total covered orders generated on days less than the current day of the year for the year prior to your selected year in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date",
            "expression": [
              "",
              "Var today_doy = CALCULATE(MIN('calendar'[Day of Year]),'calendar'[Date]=TODAY())",
              "Var load_count_ytd = TOTALYTD([Count of Orders Covered],'calendar'[Date],'calendar'[Day of Year]<today_doy)",
              "",
              "Return",
              "load_count_ytd"
            ],
            "formatString": "0",
            "lineageTag": "d2a6a1e1-b548-42e1-b7c1-8b11095a643d"
          },
          {
            "name": "Count of Orders Covered YTD 1YA",
            "description": "Calculates all of the covered orders generated on days less than the current day of the year for one year prior to the year selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered YTD],DATEADD('calendar'[Date],-1,YEAR))",
            "formatString": "0",
            "lineageTag": "dbe5107f-2d5d-4f47-9834-655bb16dd0e5"
          },
          {
            "name": "Margin YTD 1YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the year for one year prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date\\Years Ago",
            "expression": "CALCULATE([Margin YTD],DATEADD('calendar'[Date],-1,YEAR))",
            "lineageTag": "0c23eea3-09fa-4c7a-9ce0-dfee73a6f069"
          },
          {
            "name": "Count of Orders Covered MTD MOM diff",
            "description": [
              "adds up all of the  covered orders generated on days less than the current day of the month for one month prior to the month selected in your filter context and and finds the difference between the covered orders generated on days less than the current day of the month.",
              "",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month over Month",
            "expression": [
              "",
              "Var mtd_last_month = [Count of Orders Covered MTD 1MA]",
              "Var difference = [Count of Orders Covered MTD]-mtd_last_month",
              "",
              "",
              "Return",
              "difference"
            ],
            "formatString": "0",
            "lineageTag": "806ae227-a92e-4901-af98-5bb19b413509"
          },
          {
            "name": "Margin MTD 2YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the month for two years prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Years Ago",
            "expression": "CALCULATE([Margin MTD],DATEADD('calendar'[Date],-2,YEAR))",
            "lineageTag": "64a1cff2-8b20-4c15-af81-2cee3d2cc026"
          },
          {
            "name": "Margin MTD 3YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the month for three years prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Years Ago",
            "expression": "CALCULATE([Margin MTD],DATEADD('calendar'[Date],-3,YEAR))",
            "lineageTag": "9c18c5fa-9963-4b05-9af1-f5cf0bd2b27e"
          },
          {
            "name": "Count of Orders Covered MTD 2YA",
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the month for two years prior to the month selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered MTD],DATEADD('calendar'[Date],-2,YEAR))",
            "formatString": "0",
            "lineageTag": "df99e513-c0c3-4db0-9dbd-99587244f7e7"
          },
          {
            "name": "Count of Orders Covered MTD 3YA",
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the month for three years prior to the month selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered MTD],DATEADD('calendar'[Date],-3,YEAR))",
            "formatString": "0",
            "lineageTag": "6401f80f-890e-476e-b9bd-4512b74bd6ae"
          },
          {
            "name": "Avg Count of Orders Covered MTD MOM diff",
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the month for one, two month prior to the month selected in your filter context and finds the average percentage change between 13, 25, and 37 month ago(a month prior to the one, two and three years ago).",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month over Month",
            "expression": [
              "",
              "",
              "//1YA LC MTD MOM Variance % ",
              "Var LC_therteen_months_ago = CALCULATE([Count of Orders Covered MTD],DATEADD('Calendar'[Date],-13,MONTH))",
              "Var one_year_ago_MOM_variance =[Count of Orders Covered MTD 1YA]-LC_therteen_months_ago",
              "Var count_therteen = IF(LC_therteen_months_ago=0,0,1)",
              "Var count_one_year_ago = IF([Count of Orders Covered MTD 1YA]=0,0,1)",
              "Var count_first_occerance = IF(count_one_year_ago+count_therteen>=1,1,0)",
              "",
              "",
              "//2YA LC MTD MOM Variance % ",
              "Var LC_twentyfive_months_ago = CALCULATE([Count of Orders Covered MTD],DATEADD('Calendar'[Date],-25,MONTH))",
              "Var two_year_ago_MOM_variance =[Count of Orders Covered MTD 2YA]-LC_twentyfive_months_ago",
              "Var count_twenty_five_months_ago = IF(LC_twentyfive_months_ago=0,0,1)",
              "Var count_two_years_ago = IF([Count of Orders Covered MTD 2YA]=0,0,1)",
              "Var count_second_occerance = IF(count_twenty_five_months_ago+count_two_years_ago>=1,1,0)",
              "",
              "",
              "//3YA LC MTD MOM Variance %",
              "Var LC_thirtyseven_months_ago = CALCULATE([Count of Orders Covered MTD],DATEADD('Calendar'[Date],-37,MONTH))",
              "Var three_year_ago_MOM_variance =[Count of Orders Covered MTD 3YA]-LC_thirtyseven_months_ago",
              "Var count_thirtyseven_ma = IF(LC_thirtyseven_months_ago=0,0,1)",
              "Var count_three_ya = IF([Count of Orders Covered MTD 3YA]=0,0,1)",
              "Var count_third_occerance = IF(count_thirtyseven_ma+count_three_ya>=1,1,0)",
              "",
              "Var count_of_occerances = count_first_occerance+count_second_occerance+count_third_occerance",
              "Var sum_of_change = one_year_ago_MOM_variance + two_year_ago_MOM_variance + three_year_ago_MOM_variance",
              "Var avg_load_count_change = DIVIDE(sum_of_change,count_of_occerances)",
              "",
              "RETURN",
              "avg_load_count_change"
            ],
            "formatString": "0",
            "lineageTag": "1f4f8c46-0916-4a95-a1a4-3d794483c5a9"
          },
          {
            "name": "Margin MTD MOM Variance",
            "description": "adds up all of the margin generated on days less than the current day of the month for one month prior to the month selected in your filter context and and finds the difference between the margin generated on days less than the current day of the month.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Month over Month",
            "expression": [
              "",
              "Var mtd_last_month = CALCULATE([Margin MTD],DATEADD('Calendar'[Date],-1,MONTH))",
              "Var diference = [Margin MTD]-mtd_last_month",
              "",
              "Return",
              "diference"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "817079e0-fb7b-4784-8de0-cc703f310439"
          },
          {
            "name": "Avg Margin MTD MOM Change",
            "description": "adds up all of the margin generated on days less than the current day of the month for one, and two month prior to the month selected in your filter context and finds the average percentage change between 13, 25, and 37 month ago(a month prior to the one, two and three years ago).",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Month over Month",
            "expression": [
              "",
              "",
              "//1YA Margin MTD MOM Variance % ",
              "Var margin_therteen_months_ago = CALCULATE([Margin MTD],DATEADD('Calendar'[Date],-13,MONTH))",
              "Var one_year_ago_MOM_variance =[Margin MTD 1YA]-margin_therteen_months_ago",
              "Var count_therteen_months = IF(margin_therteen_months_ago=0,0,1)",
              "Var count_one_year_ago = IF([Margin MTD 1YA]=0,0,1)",
              "Var count_first_occerance = IF((count_therteen_months+count_one_year_ago)>=1,1,0)",
              "",
              "//2YA Margin MTD MOM Variance % ",
              "Var margin_twentyfive_months_ago = CALCULATE([Margin MTD],DATEADD('Calendar'[Date],-25,MONTH))",
              "Var two_year_ago_MOM_variance =[Margin MTD 2YA]-margin_twentyfive_months_ago",
              "VAr count_twentyfive_months_ago = IF(margin_twentyfive_months_ago=0,0,1)",
              "Var count_two_years_ago = IF([Margin MTD 2YA]=0,0,1)",
              "Var count_secound_occerance = IF((count_twentyfive_months_ago+count_two_years_ago)>=1,1,0)",
              "",
              "//3YA Margin MTD MOM Variance %",
              "Var margin_thirtyseven_months_ago = CALCULATE([Margin MTD],DATEADD('Calendar'[Date],-37,MONTH))",
              "Var three_year_ago_MOM_variance =[Margin MTD 3YA]-margin_thirtyseven_months_ago",
              "Var count_thirtyseven_months_ago = IF(margin_thirtyseven_months_ago=0,0,1)",
              "Var count_three_years_ago = IF([Margin MTD 3YA]=0,0,1)",
              "Var count_third_occerance = IF((count_thirtyseven_months_ago+count_three_years_ago)>=1,1,0)",
              "",
              "Var count_occerances = count_first_occerance+count_secound_occerance+count_third_occerance",
              "Var sum_margin_change = one_year_ago_MOM_variance+two_year_ago_MOM_variance+three_year_ago_MOM_variance",
              "Var avg_margin_change = DIVIDE(sum_margin_change,count_occerances)",
              "",
              "return",
              "avg_margin_change"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "5129c6dc-47f6-4ed6-a4ed-820f29ed34ad"
          },
          {
            "name": "Count of Orders Covered QTD 1YA",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for 1 year prior to the quarter selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered QTD],DATEADD('calendar'[Date],-4,QUARTER))",
            "formatString": "0",
            "lineageTag": "c5843c6f-5b75-4333-9c8f-31ef48fc9997"
          },
          {
            "name": "Count of Orders Covered QTD 2YA",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for 2 years prior to the quarter selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered QTD],DATEADD('Calendar'[Date],-8,QUARTER))",
            "formatString": "0",
            "lineageTag": "658aba2d-5d84-4cfb-bbe0-0bdf84055c72"
          },
          {
            "name": "Count of Orders Covered QTD 3YA",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for 3 years prior to the quarter selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered QTD],DATEADD('Calendar'[Date],-12,QUARTER))",
            "formatString": "0",
            "lineageTag": "b8c7efa5-850e-4b0e-a7c1-35197ed2fcea"
          },
          {
            "name": "Count of Orders Covered QTD QOQ diff",
            "description": "adds up all of the covered orders generated on days less than the current day of the quarter for one quarter prior to the quarter selected in your filter context and and finds the difference between the covered orders generated on days less than the current day of the quarter .",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Quarter over Quarter",
            "expression": [
              "",
              "Var qtd_last_month = [Count of Orders Covered QTD 1QA]",
              "Var difference = [Count of Orders Covered QTD] -qtd_last_month",
              "",
              "Return",
              "difference"
            ],
            "formatString": "0",
            "lineageTag": "799b10cf-66a0-41a8-949a-99aecca2a94f"
          },
          {
            "name": "Avg Count of Orders Covered QTD QOQ diff",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the quarter for one, two and three quarter prior to the quarter selected in your filter context and finds the average percentage change between five, nine, and thirteen quarter ago(a quarter prior to the one, two and three years ago).",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Quarter To Date\\Quarter over Quarter",
            "expression": [
              "",
              "",
              "//1YA LC QTD QOQ Variance % ",
              "Var LC_5_quarter_ago = CALCULATE([Count of Orders Covered QTD],DATEADD('Calendar'[Date],-5,QUARTER))",
              "Var one_year_ago_QOQ_variance =[Count of Orders Covered QTD 1YA]-LC_5_quarter_ago",
              "Var count_lc_5_qa = IF(LC_5_quarter_ago=0,0,1)",
              "Var count_one_year_ago = IF([Count of Orders Covered QTD 1YA]=0,0,1)",
              "Var count_first_occerance = IF((count_lc_5_qa+count_one_year_ago)>=1,1,0)",
              "",
              "//2YA LC QTD QOQ Variance % ",
              "Var LC_9_quarter_ago = CALCULATE([Count of Orders Covered QTD],DATEADD('Calendar'[Date],-9,QUARTER))",
              "Var two_year_ago_QOQ_variance =[Count of Orders Covered QTD 2YA]-LC_9_quarter_ago",
              "Var count_lc_9 = IF(LC_9_quarter_ago=0,0,1)",
              "Var count_two_years_ago = IF([Count of Orders Covered QTD 2YA]=0,0,1)",
              "Var count_second_occerance = IF((count_lc_9+count_two_years_ago)>=1,1,0)",
              "",
              "",
              "//3YA LC QTD QOQ Variance %",
              "Var LC_13_quarter_ago = CALCULATE([Count of Orders Covered QTD],DATEADD('Calendar'[Date],-13,QUARTER))",
              "Var three_year_ago_QOQ_variance =[Count of Orders Covered QTD 3YA]-LC_13_quarter_ago",
              "Var count_lc_13 = IF(LC_13_quarter_ago=0,0,1)",
              "Var count_three_years_ago = IF([Count of Orders Covered QTD 3YA]=0,0,1)",
              "Var count_third_occerance = IF((count_lc_13+count_three_years_ago)>=1,1,0)",
              "",
              "Var count_occerances = count_first_occerance+count_second_occerance+count_third_occerance",
              "Var sum_lc_change = one_year_ago_QOQ_variance + two_year_ago_QOQ_variance + three_year_ago_QOQ_variance",
              "Var avg_lc_change = DIVIDE(sum_lc_change,count_occerances)",
              "",
              "return",
              "avg_lc_change"
            ],
            "lineageTag": "95ab9588-6a3a-4c6e-a865-fbd07eafed8c"
          },
          {
            "name": "Margin Per Order",
            "description": "Margin divided by the count of covered orders",
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "DIVIDE([Margin], [Count of Orders Covered])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "282a5274-5463-4ec8-849b-fb374ded2f20"
          },
          {
            "name": "*",
            "displayFolder": "***Undocumented***",
            "expression": "1",
            "formatString": "0",
            "lineageTag": "dbfb4e40-58de-440c-a31d-f84d278a77b3"
          },
          {
            "name": "Margin QTD 1YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for 1 year prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-4,QUARTER))",
            "lineageTag": "0478a08d-511a-4e46-83f8-90fe0fc22e26"
          },
          {
            "name": "Margin QTD 2YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for 2 years prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-2,YEAR))",
            "lineageTag": "cae4f816-1411-4d68-a556-01b9602fccc1"
          },
          {
            "name": "Margin QTD 3YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for 3 years prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-3,YEAR))",
            "lineageTag": "fded63a7-a448-489a-a271-b04c9e9fe00c"
          },
          {
            "name": "Margin QTD 5YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for 5 years prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-5,YEAR))",
            "lineageTag": "4c3d7875-6dd3-4b6d-b71c-e03e78288e96"
          },
          {
            "name": "Margin QTD QOQ Variance",
            "description": "adds up all of the margin generated on days less than the current day of the quarter for one quarter prior to the quarter selected in your filter context and and finds the difference between the margin generated on days less than the current day of the month.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years over Year",
            "expression": [
              "",
              "Var mtd_last_month = CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-1,QUARTER))",
              "Var difference = [Margin QTD]-mtd_last_month",
              "",
              "Return",
              "difference"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "52f20c6a-7beb-4641-ba4f-4857eb60e26b"
          },
          {
            "name": "Avg Margin QTD QOQ change",
            "description": "adds up all of the margin generated on days less than the current day of the quarter for one, two and three quarter prior to the quarter selected in your filter context and finds the average percentage change between five, nine, and thirteen quarter ago(a quarter prior to the one, two and three years ago).",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years over Year",
            "expression": [
              "",
              "",
              "//1YA Margin QTD QOQ Variance % ",
              "Var margin_5_quarter_ago = CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-5,MONTH))",
              "Var one_year_ago_QOQ_variance =[Margin QTD 1YA]-margin_5_quarter_ago",
              "Var count_five_q_ago = IF(margin_5_quarter_ago=0,0,1)",
              "Var count_last_year = IF([Margin QTD 1YA]=0,0,1)",
              "Var count_first_occerance = IF((count_five_q_ago+count_last_year)>=1,1,0)",
              "",
              "//2YA Margin QTD QOQ Variance % ",
              "Var margin_9_quarter_ago = CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-9,MONTH))",
              "Var two_year_ago_QOQ_variance =[Margin QTD 2YA]-margin_9_quarter_ago",
              "Var count_9_q_ago = IF(margin_9_quarter_ago=0,0,1)",
              "Var count_two_years_ago = IF([Margin QTD 2YA]=0,0,1)",
              "Var count_secound_occereance = IF((count_9_q_ago+count_two_years_ago)>=1,1,0)",
              "",
              "//3YA Margin QTD QOQ Variance %",
              "Var margin_13_quarter_ago = CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-13,MONTH))",
              "Var three_year_ago_QOQ_variance =[Margin QTD 3YA]-margin_13_quarter_ago",
              "Var count_13_months_ago = IF(margin_13_quarter_ago=0,0,1)",
              "Var count_three_years_ago =IF([Margin QTD 3YA]=0,0,1)",
              "Var count_third_occerance = IF((count_13_months_ago+count_three_years_ago)>=1,1,0)",
              "",
              "Var count_occerances = count_first_occerance+count_secound_occereance+count_third_occerance",
              "Var sum_margin_change = one_year_ago_QOQ_variance+two_year_ago_QOQ_variance+three_year_ago_QOQ_variance",
              "Var avg_margin_change = DIVIDE(sum_margin_change,count_occerances)",
              "",
              "return",
              "avg_margin_change"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "ed86dca9-8d5d-4b22-a0fe-23059291d522"
          },
          {
            "name": "Margin QTD 4YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the quarter for 4 years prior to the quarter selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Quarter To Date\\Years Ago",
            "expression": "CALCULATE([Margin QTD],DATEADD('Calendar'[Date],-4,YEAR))",
            "lineageTag": "9aaa5d52-ce7f-4346-aa65-df745fb1138a"
          },
          {
            "name": "Count of Orders Covered YTD 2YA",
            "description": "Calculates all of the covered orders generated on days less than the current day of the year for two years prior to the year selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date\\Years Ago",
            "expression": [
              "",
              "CALCULATE([Count of Orders Covered YTD],(dateadd('Calendar'[Date],-2,YEAR)))"
            ],
            "formatString": "0",
            "lineageTag": "f48df3aa-101f-4cb5-b000-b408bc47dabc"
          },
          {
            "name": "Count of Orders Covered YTD 3YA",
            "description": "Calculates all of the covered orders generated on days less than the current day of the year for three years prior to the year selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date\\Years Ago",
            "expression": [
              "",
              "CALCULATE([Count of Orders Covered YTD],(dateadd('Calendar'[Date],-3,YEAR)))"
            ],
            "formatString": "0",
            "lineageTag": "4640a840-05ed-4e55-aabb-5ff0f6850258"
          },
          {
            "name": "Count of Orders Covered YTD 4YA",
            "description": "Calculates all of the covered orders generated on days less than the current day of the year for four years prior to the year selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date\\Years Ago",
            "expression": [
              "",
              "CALCULATE([Count of Orders Covered YTD],(dateadd('Calendar'[Date],-4,YEAR)))"
            ],
            "formatString": "0",
            "lineageTag": "842bbf6a-a5d0-4010-a33d-efff8e213303"
          },
          {
            "name": "Count of Orders Covered YTD 5YA",
            "description": "Calculates all of the covered orders generated on days less than the current day of the year for five years prior to the year selected in your filter context.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date\\Years Ago",
            "expression": [
              "",
              "CALCULATE([Count of Orders Covered YTD],(dateadd('Calendar'[Date],-5,YEAR)))"
            ],
            "formatString": "0",
            "lineageTag": "4b3bd693-2e84-4782-9c9b-3456a19e2670"
          },
          {
            "name": "Count of Orders Covered YTD YOY Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the covered orders generated on days less than the current day of the year for one year prior to the year selected in your filter context and and finds the difference between the covered orders generated on days less than the current day of the year.",
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Year To Date\\Year over year",
            "expression": "[Count of Orders Covered YTD]-[Count of Orders Covered YTD 1YA]",
            "lineageTag": "b03f2c30-cae5-450c-bc2a-90b95a41176d"
          },
          {
            "name": "Margin YTD 2YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the year for two years prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date\\Years Ago",
            "expression": "CALCULATE([Margin YTD],DATEADD('calendar'[Date],-2,YEAR))",
            "lineageTag": "75612467-10c0-4551-b6f6-1ba72b41b735"
          },
          {
            "name": "Margin YTD 3YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the year for three years prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date\\Years Ago",
            "expression": "CALCULATE([Margin YTD],DATEADD('calendar'[Date],-3,YEAR))",
            "lineageTag": "0a904415-1656-4c44-b5b5-72838eb513b7"
          },
          {
            "name": "Margin YTD 4YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the year for four years prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date\\Years Ago",
            "expression": "CALCULATE([Margin YTD],DATEADD('calendar'[Date],-4,YEAR))",
            "lineageTag": "6d653b6b-fdb7-45ec-bd3d-1472ca17aa6d"
          },
          {
            "name": "Margin YTD 5YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the year for five years prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date\\Years Ago",
            "expression": "CALCULATE([Margin YTD],DATEADD('calendar'[Date],-5,YEAR))",
            "lineageTag": "2ea99271-4a4f-4417-b4c1-9597538fc625"
          },
          {
            "name": "Margin YTD YOY Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "adds up all of the margin generated on days less than the current day of the year for one year prior to the year selected in your filter context and and finds the difference between the margin generated on days less than the current day of the year.",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Year To Date\\Year over Year",
            "expression": [
              "[Margin YTD]-[Margin YTD 1YA] ",
              ""
            ],
            "lineageTag": "e92e9679-2cac-4413-9ad7-2e8b29912560"
          },
          {
            "name": "Count of Orders Covered MOM 1MA Variance",
            "description": "This takes the current month Count of Orders Covered and subtracts last months Count of orders covered to give you the Variance.",
            "displayFolder": "Operations Measures\\Count of Orders\\Month over Month",
            "expression": "[Count of Orders Covered 1MA] - [Count of Orders Covered 2MA]",
            "formatString": "0",
            "lineageTag": "114be6bd-1326-48ed-a569-2cfcfb8f25e2"
          },
          {
            "name": "Avg Count of Orders Covered MOM Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This Measure Calculates the average Change in Orders Covered from the month prior to the one you have selected and the month you have selected over the last 3 years.",
            "displayFolder": "Operations Measures\\Count of Orders\\Month over Month",
            "expression": [
              "",
              "",
              "//1YA LC MOM Variance",
              "Var lc_13ma = CALCULATE([Count of Orders Covered],DATEADD('Calendar'[Date],-13,MONTH))",
              "Var one_year_ago_MOM_variance =[Count of Orders Covered 1YA]-lc_13ma",
              "Var count_13ma = IF(lc_13ma=0,0,1)",
              "Var count_1ya = IF([Count of Orders Covered 1YA]=0,0,1)",
              "Var count_first_occerance = IF((count_13ma+count_1ya)>=1,1,0)",
              "",
              "//2YA LC MOM Variance",
              "Var lc_25ma = CALCULATE([Count of Orders Covered],DATEADD('Calendar'[Date],-25,MONTH))",
              "Var two_year_ago_MOM_variance =[Count of Orders Covered 2YA]-lc_25ma",
              "Var count_25ma = IF(lc_25ma=0,0,1)",
              "Var count_2ya = IF([Count of Orders Covered MTD 2YA]=0,0,1)",
              "Var count_second_occerance = IF((count_25ma+count_2ya)>=1,1,0)",
              "",
              "//3YA LC MOM Variance",
              "Var lc_37ma = CALCULATE([Count of Orders Covered],DATEADD('Calendar'[Date],-37,MONTH))",
              "Var three_year_ago_MOM_variance =[Count of Orders Covered 3YA]-lc_37ma",
              "Var count_37ma = IF(lc_37ma=0,0,1)",
              "Var count_3ya = IF([Count of Orders Covered 3YA]=0,0,1)",
              "Var count_third_occerance = IF((count_37ma+count_3ya)>=1,1,0)",
              "",
              "Var count_of_occerances = count_first_occerance+count_second_occerance+count_third_occerance",
              "Var sum_lc_change = one_year_ago_MOM_variance + two_year_ago_MOM_variance + three_year_ago_MOM_variance",
              "Var avg_lc_change = DIVIDE(sum_lc_change,count_of_occerances)",
              "",
              "return",
              "avg_lc_change"
            ],
            "lineageTag": "eaace1a2-e357-408e-8c1f-6a6b2a1a2c81"
          },
          {
            "name": "Count of Orders Covered 2YA",
            "description": "Calculates the total of all the covered orders for two years prior to the year selected in your filter context.",
            "displayFolder": "Operations measures\\Count of Orders\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-2,YEAR))",
            "formatString": "0",
            "lineageTag": "f50c0a9a-5869-4928-a009-e44336fb5245"
          },
          {
            "name": "Count of Orders Covered 3YA",
            "description": [
              "Calculates the total of all the covered orders for three years prior to the year selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations measures\\Count of Orders\\Years Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-3,YEAR))",
            "formatString": "0",
            "lineageTag": "03207215-75ee-4d4b-8d47-332b666e7c17"
          },
          {
            "name": "Avg Margin MOM change",
            "description": "This Measure Calculates the average Change of margin from the month prior to the one you have selected and the month you have selected over the last 3 years.",
            "displayFolder": "Sales Measures\\Margin\\Month over Month",
            "expression": [
              "",
              "",
              "//1YA Margin MTD MOM Variance % ",
              "Var margin_therteen_months_ago = CALCULATE([Margin],DATEADD('Calendar'[Date],-13,MONTH))",
              "Var one_year_ago_MOM_variance =[Margin 1YA]-margin_therteen_months_ago",
              "Var count_13ma = IF(margin_therteen_months_ago=0,0,1)",
              "Var count_1ya = IF([Margin 1YA]=0,0,1)",
              "VAr count_first_occerance = IF((count_13ma+count_1ya)>=1,1,0)",
              "",
              "//2YA Margin MTD MOM Variance % ",
              "Var margin_twentyfive_months_ago = CALCULATE([Margin],DATEADD('Calendar'[Date],-25,MONTH))",
              "Var two_year_ago_MOM_variance =[Margin 2YA]-margin_twentyfive_months_ago",
              "Var count_25ma = IF(margin_twentyfive_months_ago=0,0,1)",
              "Var count_2ya = IF([Margin 2YA]=0,0,1)",
              "Var count_secound_occerance = IF((count_25ma+count_2ya)>=1,1,0)",
              "",
              "//3YA Margin MTD MOM Variance %",
              "Var margin_thirtyseven_months_ago = CALCULATE([Margin],DATEADD('Calendar'[Date],-37,MONTH))",
              "Var three_year_ago_MOM_variance =[Margin 3YA]-margin_thirtyseven_months_ago",
              "Var count_37ma = IF(margin_thirtyseven_months_ago=0,0,1)",
              "Var count_3ya = IF([Margin 3YA]=0,0,1)",
              "Var count_third_occerance = IF((count_37ma+count_3ya)>=1,1,0)",
              "",
              "Var count_occerances = count_first_occerance+count_secound_occerance+count_third_occerance",
              "Var sum_margin_change = one_year_ago_MOM_variance+two_year_ago_MOM_variance+three_year_ago_MOM_variance",
              "Var avg_margin_change = DIVIDE(sum_margin_change,count_occerances)",
              "",
              "return",
              "avg_margin_change"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "99f9d417-7cf4-46ec-9ccd-0879d063cf4b"
          },
          {
            "name": "Margin 2YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated two years prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Years Ago",
            "expression": "CALCULATE([Margin],DATEADD('Calendar'[Date],-2,YEAR))",
            "lineageTag": "08df6c2a-5508-4dc1-833f-3e4ed1a99bb4"
          },
          {
            "name": "Margin 3YA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated three years prior to the year selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Years Ago",
            "expression": "CALCULATE([Margin],DATEADD('Calendar'[Date],-3,YEAR))",
            "lineageTag": "abb87c2e-f892-4e57-a502-229f5c951e23"
          },
          {
            "name": "Margin MOM Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This takes the month selected Margin and subtracts the month prior to the one selected Margin to give you the Variance.",
            "displayFolder": "Sales Measures\\Margin\\Month over Month",
            "expression": "[Margin]-[Margin 1MA]",
            "lineageTag": "5dab9d3f-ad85-4a35-a8d7-5cfe055e7237"
          },
          {
            "name": "Count of Orders Covered QOQ Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "This takes the quarter you have selected Count of Orders Covered and subtracts quarter priors Count of orders covered to give you the Variance.",
              "",
              "*** Can not have a Month slicer Affect this measure ***"
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\Quarter over Quarter",
            "expression": "[Count of Orders Covered]-[Count of Orders Covered 1QA]",
            "lineageTag": "5b6c79fc-e1c0-4d05-aeed-737e523d47f4"
          },
          {
            "name": "Margin QOQ Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This takes the quarter selected Margin and subtracts the quarter prior to the one selected Margin to give you the Variance.",
            "displayFolder": "Sales Measures\\Margin\\Quarter over Quarter",
            "expression": "[Margin]-[Margin 1QA]",
            "lineageTag": "254d3949-1439-4b65-9156-e5563054f2b0"
          },
          {
            "name": "Avg Count of Orders Covered QOQ Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This Measure Calculates the average Change in Orders Covered from the quarter prior to the one you have selected and the quarter you have selected over the last 3 years.",
            "displayFolder": "Operations Measures\\Count of Orders\\Quarter over Quarter",
            "expression": [
              "",
              "",
              "//1YA LC MOM Variance",
              "Var lc_5qa = CALCULATE([Count of Orders Covered],DATEADD('Calendar'[Date],-5,QUARTER))",
              "Var one_year_ago_qoq_variance =[Count of Orders Covered 4QA]-LC_5qa",
              "Var count_lc_5qa = IF(LC_5qa=0,0,1)",
              "Var count_4qa = IF([Count of Orders Covered 4QA]=0,0,1)",
              "Var count_first_occerance = IF((count_lc_5qa+count_4qa)>=1,1,0)",
              "",
              "//2YA LC MOM Variance",
              "Var lc_9qa = CALCULATE([Count of Orders Covered],DATEADD('Calendar'[Date],-9,QUARTER))",
              "Var lc_8qa = CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-8,QUARTER))",
              "Var two_year_ago_qoq_variance= lc_8qa-LC_9qa",
              "Var count_9qa = IF(LC_9qa=0,0,1)",
              "Var count_8qa = IF(lc_8qa=0,0,1)",
              "Var count_second_occerance = IF((count_9qa+count_8qa)>=1,1,0)",
              "",
              "//3YA LC MOM Variance",
              "Var lc_13qa = CALCULATE([Count of Orders Covered],DATEADD('Calendar'[Date],-13,QUARTER))",
              "Var lc_12qa = CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-12,QUARTER))",
              "Var three_year_ago_qoq_variance =lc_12qa-lc_13qa",
              "Var count_13qa = IF(lc_13qa=0,0,1)",
              "Var count_12qa = IF(lc_12qa=0,0,1)",
              "Var count_third_occerance = IF((count_13qa+count_12qa)>=1,1,0)",
              "",
              "Var count_of_occerances = count_first_occerance+count_second_occerance+count_third_occerance",
              "Var sum_lc_change = one_year_ago_qoq_variance + two_year_ago_qoq_variance + three_year_ago_qoq_variance",
              "Var avg_lc_change = DIVIDE(sum_lc_change,count_of_occerances)",
              "",
              "return",
              "avg_lc_change"
            ],
            "lineageTag": "e825ddbd-3810-445f-800a-6c44643dee7b"
          },
          {
            "name": "Avg Margin QOQ change",
            "description": "This Measure Calculates the average Change of margin from the quarter prior to the one you have selected and the quarter you have selected over the last 3 years.",
            "displayFolder": "Sales Measures\\Margin\\Quarter over Quarter",
            "expression": [
              "",
              "",
              "//1YA Margin QOQ Variance",
              "Var margin_5qa = CALCULATE([Margin],DATEADD('Calendar'[Date],-5,QUARTER))",
              "Var one_ya_qoq_variance =[Margin 4QA]-margin_5qa",
              "Var count_5qa = IF(margin_5qa=0,0,1)",
              "Var count_4qa = IF([Margin 4QA]=0,0,1)",
              "VAr count_first_occerance = IF((count_5qa+count_4qa)>=1,1,0)",
              "",
              "//2YA Margin QOQ Variance ",
              "Var margin_9qa = CALCULATE([Margin],DATEADD('Calendar'[Date],-9,QUARTER))",
              "Var margin_8qa = CALCULATE([Margin],DATEADD('calendar'[Date],-8,QUARTER))",
              "Var two_ya_qoq_variance =margin_8qa-margin_9qa",
              "Var count_margin_9qa = IF(margin_9qa=0,0,1)",
              "Var count_margin_8qa= IF(margin_8qa=0,0,1)",
              "Var count_secound_occerance = IF((count_margin_9qa+count_margin_8qa)>=1,1,0)",
              "",
              "//3YA Margin QOQ Variance",
              "Var margin_13qa = CALCULATE([Margin],DATEADD('Calendar'[Date],-13,QUARTER))",
              "Var margin_12qa = CALCULATE([Margin],DATEADD('calendar'[Date],-12,QUARTER))",
              "Var three_ya_qoq_variance =margin_12qa-margin_13qa",
              "Var count_13qa = IF(margin_13qa=0,0,1)",
              "Var count_12qa = IF(margin_13qa=0,0,1)",
              "Var count_third_occerance = IF((count_13qa+count_12qa)>=1,1,0)",
              "",
              "Var count_occerances = count_first_occerance+count_secound_occerance+count_third_occerance",
              "Var sum_margin_change = one_ya_qoq_variance+two_ya_qoq_variance+three_ya_qoq_variance",
              "Var avg_margin_change = DIVIDE(sum_margin_change,count_occerances)",
              "",
              "return",
              "avg_margin_change"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "5e7a8b9c-2972-4ae0-8f36-4ae454a453b2"
          },
          {
            "name": "Count of Orders Covered YOY Variance",
            "description": "This takes the Year selected Count of Orders Covered and subtracts the quarter prior to the one selected  Count of Orders Covered to give you the Variance.",
            "displayFolder": "Operations Measures\\Count of Orders\\Year over Year",
            "expression": "[Count of Orders Covered]-[Count of Orders Covered 1YA]",
            "formatString": "0",
            "lineageTag": "a378b099-ed6e-43bf-8315-75304e0c982d"
          },
          {
            "name": "Margin YOY Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This measure Compares the Margin in the time period selected against the same time period one year prior",
            "displayFolder": "Sales Measures\\Margin\\Year over Year",
            "expression": "[Margin]-[Margin 1YA]",
            "lineageTag": "d1697a0e-1f3d-4c71-a366-44a513a4325f"
          },
          {
            "name": "Margin Vs Margin Goal Variance",
            "description": "This Measure Subtracts the Sum of Margin Goals from the Sum of Margin to calculate the Variance",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "[Margin]-[Margin Goal]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "31cb3625-4116-44af-a351-901c19d1a4c6"
          },
          {
            "name": "Margin Per Day Bar Chart axis max",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "This Measure sets the y axis on the margin per day bar chart in sales reports",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "var Graph_max = CALCULATE(",
              "    MAXX(",
              "    GROUPBY('calendar','calendar'[Date]),",
              "    [Margin]) * 1.25)",
              " ",
              "var margin_goal_max = [Margin per day Goal] * 1.25",
              " ",
              "var ifs = IF([Margin per day Goal] > Graph_max,margin_goal_max,Graph_max)",
              " ",
              "return",
              "ifs"
            ],
            "lineageTag": "45955de9-4b53-41ed-9081-fb866d74e56a"
          },
          {
            "name": "Margin per Day Variance",
            "description": [
              "The Difference between margin actual and margin per day goal",
              ""
            ],
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "[Margin]-[Margin per day Goal]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "326c1bc9-1258-4ce1-bd5b-1da00ca47b5f"
          },
          {
            "name": "Count of Movements Booked",
            "description": [
              "The distinct count or movement ID's that the move status is not available",
              ""
            ],
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "CALCULATE(DISTINCTCOUNT(movements[Movement ID]),movements[Move Status]<>\"Available\")",
            "formatString": "0",
            "lineageTag": "fad2db90-d340-4622-bb28-f08db420a77f"
          },
          {
            "name": "Margin per Week Goal",
            "description": "Takes the Margin goal for the month of the dates selected divides it by the number of working days in the month then multiplies that by the working days in the week.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "",
              "Var min_date = MIN('calendar'[Date])",
              "Var max_date = MAX('calendar'[Date])",
              "Var count_of_months = DISTINCTCOUNT('calendar'[MonthNmb])",
              "",
              "//first month measures",
              "Var start_of_month_min_date = calculate(STARTOFMONTH('calendar'[Date]),'calendar'[Date]=min_date)",
              "Var end_of_month_min_date = CALCULATE(ENDOFMONTH('calendar'[Date]),'calendar'[Date]=min_date)",
              "Var working_days_of_min_month = ",
              "    NETWORKDAYS(",
              "        start_of_month_min_date,",
              "        end_of_month_min_date,",
              "        1,",
              "        observed_holidays)",
              "Var working_days_of_week_of_first_month = ",
              "    NETWORKDAYS(",
              "        min_date,",
              "        end_of_month_min_date,",
              "        1,",
              "        observed_holidays)",
              "Var margin_goal_first_month = CALCULATE([Margin Goal],'calendar'[Date]=start_of_month_min_date)",
              "Var mpwg_min_month = DIVIDE(margin_goal_first_month,working_days_of_min_month)",
              "Var mpwg_first_half = mpwg_min_month*working_days_of_week_of_first_month",
              "//end first month measures",
              "",
              "//second month measures",
              "Var start_of_month_max_date = CALCULATE(STARTOFMONTH('calendar'[Date]),'calendar'[Date]=max_date)",
              "Var end_of_month_max_date = CALCULATE(ENDOFMONTH('calendar'[Date]),'calendar'[Date]=max_date)",
              "Var working_days_max_month = ",
              "    NETWORKDAYS(",
              "        start_of_month_max_date,",
              "        end_of_month_max_date,",
              "        1,",
              "        observed_holidays)",
              "Var working_days_of_week_of_secound_month = ",
              "    NETWORKDAYS(",
              "        start_of_month_max_date,",
              "        max_date,",
              "        1,",
              "        observed_holidays)",
              "Var margin_goal_secound_month = CALCULATE([Margin Goal],'calendar'[Date]=start_of_month_max_date)",
              "Var mpwg_secound_month = DIVIDE(margin_goal_secound_month,working_days_max_month)",
              "Var mpwg_second_half = mpwg_secound_month*working_days_of_week_of_secound_month",
              "//end second month measures",
              "",
              "//standard month",
              "Var workingdays = ",
              "    NETWORKDAYS(",
              "        MIN('calendar'[Date]),",
              "        MAX('calendar'[Date]),",
              "        1,",
              "        observed_holidays)",
              "Var months_margin_goal = CALCULATE([Margin Goal],'calendar'[Date]=start_of_month_min_date)",
              "Var mpwg = DIVIDE(months_margin_goal,working_days_of_min_month)",
              "Var mpwg_single_month = mpwg*workingdays",
              "//end standard month",
              "",
              "//override margin goal first month",
              "Var override_margin_goal_min_month = CALCULATE([Override margin goal],'calendar'[Date]=start_of_month_min_date)",
              "Var override_mpwg_first_half_override_set = override_margin_goal_min_month*working_days_of_week_of_first_month",
              "Var override_mpwg_first_half = ",
              "    IF(override_margin_goal_min_month>0,",
              "    override_mpwg_first_half_override_set,",
              "    mpwg_first_half)",
              "//end override margin goal first month",
              "",
              "//override margin goal second month",
              "Var override_margin_goal_max_month = CALCULATE([Override margin goal],'calendar'[Date]=start_of_month_max_date)",
              "Var override_mpwg_second_month_override_set = override_margin_goal_max_month*working_days_of_week_of_secound_month",
              "Var override_mpwg_second_half =",
              "    IF(override_margin_goal_max_month>0,",
              "    override_mpwg_second_month_override_set,",
              "    mpwg_second_half)",
              "//end overridge margin goal second month",
              "",
              "//override margin goal single month",
              "Var override_mpwg_single_month_override_set = override_margin_goal_min_month*workingdays",
              "Var override_mpwg_single_month = ",
              "    IF(override_margin_goal_min_month>0,",
              "   override_mpwg_single_month_override_set,",
              "    mpwg_single_month)",
              "//end override margin goal single month",
              "",
              "Var two_month_goal = mpwg_first_half+mpwg_second_half",
              "Var two_month_goal_salerperson_not_set = override_mpwg_first_half+override_mpwg_second_half",
              "",
              "Var if_2_months = ",
              "    IF(count_of_months=2,",
              "    two_month_goal,",
              "    mpwg_single_month)",
              "Var if_2_month_salesperson_not_set = ",
              "    IF(count_of_months=2,",
              "    two_month_goal_salerperson_not_set,",
              "    override_mpwg_single_month)",
              "",
              "Var salesperson_is_selected = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Salesperson Name])=BLANK(),if_2_month_salesperson_not_set,if_2_months)",
              "",
              "RETURN",
              "salesperson_is_selected"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "5702792e-f7a9-413b-990b-1d1be2e13e4a"
          },
          {
            "name": "Todays margin goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "description": [
              "Calculates sum of all margin goal from each sales person for today.",
              "Then will output the sum of all margin goal if override margin goal is blank.",
              "Or will output override margin goal is sales person is blank."
            ],
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": [
              "",
              "Var start_of_month = CALCULATE(STARTOFMONTH('calendar'[Date]),'calendar'[Date]=TODAY())",
              "",
              "Var workingdays = ",
              "    NETWORKDAYS(",
              "        CALCULATE(STARTOFMONTH('Calendar'[Date]),'calendar'[Date]=start_of_month),",
              "        CALCULATE(ENDOFMONTH('Calendar'[Date]),'calendar'[Date]=TODAY()),",
              "        1,",
              "        observed_holidays)",
              "Var months_margin_goal = CALCULATE([Margin Goal],'calendar'[Date]=start_of_month)",
              "Var override_mpdg = CALCULATE([Override margin goal],'calendar'[Date]=start_of_month)",
              "Var mpd = DIVIDE(months_margin_goal,workingdays)",
              "Var override_is_blank = IF(override_mpdg=0,mpd,override_mpdg)",
              "",
              "Var mpdg = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Name])=BLANK(),override_is_blank,mpd)",
              "",
              "Return",
              "mpdg"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "953aa526-b0c2-41e9-b4a6-362d066e40ee"
          },
          {
            "name": "Available Margin",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Total charges on available loads multiplied by margin %.",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": [
              "",
              "VAR avaialable_rev = CALCULATE(SUM(orders[Total Charges]),movements[Move Status]=\"Available\")",
              "Var available_margin = avaialable_rev*[Margin %]",
              "",
              "Return",
              "available_margin"
            ],
            "lineageTag": "a395a683-4df4-4379-bc65-e3a21bdb415a"
          },
          {
            "name": "Average Margin Per Day MTD",
            "description": [
              "Margin MTD divided by working days elapsed",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date",
            "expression": "divide([Margin MTD], [Working days Elapsed])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "db3295ae-6e4e-4822-9574-849234d72bec"
          },
          {
            "name": "Best Margin Day Ever (since McLeod)",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Best Margin day ever.",
              "***This data does not include PCS margin***",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Bests\\Days",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY(orders,orders[Ship Scheduled Early Date]),",
              "        [McLeod Margin]),",
              "        REMOVEFILTERS('Calendar'[Date]))",
              "     //REMOVEFILTERS('Calendar'[Month],'Calendar'[Year]))"
            ],
            "lineageTag": "0a81a7d5-ffb5-45ae-873e-45301a701742"
          },
          {
            "name": "Best Margin Week Ever",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Best margin week ever of all margin.",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Bests\\Week",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY('Calendar','calendar'[Week / Year]),",
              "        [Margin]),",
              "        REMOVEFILTERS('Calendar'[Date]))"
            ],
            "lineageTag": "22cedc96-261a-46f1-a972-2394134fb643"
          },
          {
            "name": "Customers Served",
            "description": [
              "Distinct Count of Customers ID's that has a move status of anything but available.",
              ""
            ],
            "displayFolder": "Sales Measures\\Customers Served",
            "expression": "CALCULATE(DISTINCTCOUNT(orders[Customer ID]),movements[Move Status]<>\"Available\")",
            "formatString": "0",
            "lineageTag": "ce424f5b-d00a-4a7d-92f9-99df3dd35d7f"
          },
          {
            "name": "This Weeks Margin",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Total margin for the current week.",
              "***This data does not include PCS data***",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "CALCULATE([McLeod Margin],YEAR(orders[Ship Scheduled Early Date])=YEAR(TODAY()) && WEEKNUM(orders[Ship Scheduled Early Date])=WEEKNUM(TODAY()))",
            "lineageTag": "22d96f79-6ea6-4aad-8579-1afc9f0ac0eb"
          },
          {
            "name": "Count of Trackable Movements",
            "description": "Count of Movements Booked that are greater then 50 miles and the order type is FTL, BW, or PARTIAL",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": [
              "",
              "Var count_ftl = ",
              "    CALCULATE([Count of Movements Booked],",
              "        orders[Order Type]=\"FTL\",",
              "        orders[Bill Distance]>50)",
              "Var count_bw = ",
              "    CALCULATE([Count of Movements Booked],",
              "        orders[Order Type]=\"BW\",",
              "        orders[Bill Distance]>50)",
              "        ",
              "Var count_partials =",
              "    CALCULATE([Count of Movements Booked],",
              "        orders[Order Type]=\"PARTIAL\",",
              "        orders[Bill Distance]>50)",
              "Var count_of_trackable_movements = count_ftl+count_bw+count_partials",
              "RETURN",
              "count_of_trackable_movements"
            ],
            "formatString": "0",
            "lineageTag": "e6656c9e-faca-45b9-8ca9-be3a07299cbb"
          },
          {
            "name": "Count of tracking pings",
            "description": "Count of callins that were entered by loadmaster",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "CALCULATE([Count of Callins],callins[Entered by]=\"loadmaster\")",
            "lineageTag": "a1501a9e-c930-41e7-8fcf-6b6d90f47c93"
          },
          {
            "name": "Count of Callins",
            "description": "count of callins",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "COUNTROWS(callins)",
            "formatString": "0",
            "lineageTag": "f47a6a66-3de6-44cb-9b4a-9064edd73dfc"
          },
          {
            "name": "Count of movements with 1 or more pings",
            "description": "The distinct count of callin movements that were entered by loadmaster and has at least one tracking ping",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "CALCULATE(DISTINCTCOUNT(callins[Movement]),callins[Entered by]=\"loadmaster\")",
            "formatString": "0",
            "lineageTag": "5c3f9f56-4202-4b62-8466-2032026e906c"
          },
          {
            "name": "Count of movements with 3 or more pings",
            "description": [
              "The distinct count of callin movements that were entered by loadmaster and has at least one tracking ping",
              ""
            ],
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": [
              "",
              "CALCULATE(DISTINCTCOUNT(callins[Movement]),",
              "FILTER(GROUPBY(callins,callins[Movement]),[Count of tracking pings]>=3))"
            ],
            "formatString": "0",
            "lineageTag": "9ce3c18f-e28d-4d7b-aebb-b754fa57c47c"
          },
          {
            "name": "Percentage Of movement with 1 or more pings",
            "description": [
              "Divides count of movements with 1 or more ping by count of trackable movements",
              ""
            ],
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "DIVIDE([Count of movements with 1 or more pings],[Count of Trackable Movements])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "42f38d99-3fa7-4570-bfd0-f345c9d3f89c"
          },
          {
            "name": "Percentage Of movement with 3 or more pings",
            "description": "Divides count of movements with 3 or more ping by count of trackable movements",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "DIVIDE([Count of movements with 3 or more pings],[Count of Trackable Movements])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "25f9d793-4d4a-4812-8458-82f129717541"
          },
          {
            "name": "Margin Today",
            "description": "Find Margin of today only",
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "CALCULATE([Margin],'calendar'[Date]=TODAY())",
            "formatString": "0.00",
            "lineageTag": "0dc28837-5a19-4b20-b71a-b668993a1c62"
          },
          {
            "name": "Max trackable Movements grouped by day",
            "description": [
              "Finds the max number of trackable moves by day",
              ""
            ],
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": [
              "",
              "    CALCULATE(",
              "        MAXX(",
              "            GROUPBY('calendar','calendar'[Date]),",
              "            [Count of Trackable Movements]))"
            ],
            "formatString": "0",
            "lineageTag": "ee69639b-829a-4424-97cb-3b0507aa19bf"
          },
          {
            "name": "Total Linehall Carrier Pay",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Sum of projected freight carrier pay that move status is NOT available.",
            "displayFolder": "Movement Measures\\Carrier Pay",
            "expression": "CALCULATE(SUM(orders[Projected Freight Carrier Pay]),movements[Move Status]<>\"Available\")",
            "lineageTag": "9b10112b-6cc0-4e11-b362-f873605a5c42"
          },
          {
            "name": "Total Linehall Charges",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Movement Measures\\Carrier Pay",
            "expression": "CALCULATE(SUM(orders[Linehaul Charges]),movements[Move Status]<>\"Available\")",
            "lineageTag": "52db7fc6-96ac-459f-9288-c69d79a34a15"
          },
          {
            "name": "Average Linehall Charges",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Divides Total Linehall Charges by Count of orders.",
            "displayFolder": "Movement Measures\\Carrier Pay",
            "expression": [
              "//this measure calculates the average linehall charges",
              "DIVIDE([Total Linehall Charges],[Count of Orders])"
            ],
            "lineageTag": "2196f4ec-df1f-4a16-a07a-28cb8cffb9a9"
          },
          {
            "name": "Max Trackable Movements Grouped by dispatcher",
            "description": "Finds the max number of trackable moves by Dispatchers name",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": [
              "",
              "    CALCULATE(",
              "        MAXX(",
              "            GROUPBY(dispatcher_key,dispatcher_key[Dispatcher Name]),",
              "            [Count of Trackable Movements]))"
            ],
            "formatString": "0",
            "lineageTag": "8e499a05-6434-4a62-88b7-5f73162a8a38"
          },
          {
            "name": "Margin MTD 2MA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "adds up all of the margin generated on days less than the current day of the month for two months prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date\\Months Ago",
            "expression": "CALCULATE([Margin MTD],DATEADD('calendar'[Date],-2,MONTH))",
            "lineageTag": "75396d90-df40-4729-9c2c-e4dab1c53290"
          },
          {
            "name": "Margin 2MA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates the Total Margin generated two months prior to the month selected in your filter context.",
            "displayFolder": "Sales Measures\\Margin\\Months Ago",
            "expression": "CALCULATE([Margin],DATEADD('calendar'[Date],-2,MONTH))",
            "lineageTag": "e1e7ff08-a862-4516-a65e-6f8d0284a6bf"
          },
          {
            "name": "Customer Best Load Count",
            "description": "Finds the Max count of orders covered grouped by month / year, then removes the filters of start of month and move status is not equal to available",
            "displayFolder": "Sales Measures\\Sales Goals\\Load Count",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY(orders,'calendar'[Month / Year]),",
              "        [Count of Orders Covered]),",
              "        REMOVEFILTERS('calendar'[Start of Month]),",
              "        movements[Move Status]<>\"Available\")"
            ],
            "formatString": "0",
            "lineageTag": "102cd559-c639-46f2-9091-827536ff6a09"
          },
          {
            "name": "Count of Orders Covered MTD 2MA",
            "description": [
              "adds up all of the covered orders generated on days less than the current day of the month for two months prior to the month selected in your filter context.",
              ""
            ],
            "displayFolder": "Operations Measures\\Count of Orders\\To Date Measures\\Month To Date\\Months Ago",
            "expression": "CALCULATE([Count of Orders Covered MTD],DATEADD('calendar'[Date],-2,MONTH))",
            "formatString": "0",
            "lineageTag": "aa380414-bd72-4cd9-8fd0-4b26f76a9064"
          },
          {
            "name": "Margin % Goal Variance",
            "description": [
              "The variance between Margin % and Avg Marging% Goal",
              ""
            ],
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "[Margin %]-[Avg Margin % Goal]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "54e40f26-1419-4a7d-80f9-493d07511ffd"
          },
          {
            "name": "Margin MTD Goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "description": [
              "Margin per day goal multiplied by working days elapsed",
              ""
            ],
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": [
              "",
              "Var workingdays = ",
              "    NETWORKDAYS(",
              "        STARTOFMONTH('Calendar'[Date]),",
              "        ENDOFMONTH('Calendar'[Date]),",
              "        1,",
              "        observed_holidays)",
              "Var months_margin_goal = CALCULATE([Margin Goal],REMOVEFILTERS('calendar'[Date]))",
              "Var override_mpdg = CALCULATE([Override margin goal],REMOVEFILTERS('calendar'[Date]))",
              "Var mpd = DIVIDE(months_margin_goal,workingdays)",
              "Var mpdg_wolf_pack = ",
              "    SWITCH(TRUE(),SELECTEDVALUE(wolf_pack[Wolf Pack])=BLANK(),override_mpdg*[Working days Elapsed],mpd*[Working days Elapsed])",
              "",
              "Var mpdg = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Salesperson Name])=BLANK(),mpdg_wolf_pack,mpd*[Working days Elapsed])",
              "",
              "RETURN",
              "mpdg"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "6a34313b-f870-4422-9a9e-d2a3974f078e"
          },
          {
            "name": "Margin MTD vs Margin MTD Goal variance",
            "description": "Calculates the difference between Margin MTD and Margin MTD Goal.",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "[Margin MTD]-[Margin MTD Goal]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "6e41b9b5-77f6-4161-bc15-b694cc404ee9"
          },
          {
            "name": "Revenue Covered MTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": "Calculates Covered Revenue for days in the month less than today.",
            "displayFolder": "Sales Measures\\Revenue\\To Date Measures\\Month To Date",
            "expression": "TOTALMTD([Revenue Covered], 'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "lineageTag": "01e399cf-dbec-40ff-9529-533045440f99"
          },
          {
            "name": "Margin % MTD",
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date",
            "expression": "DIVIDE([Margin MTD],[Revenue Covered MTD])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "689b7579-c777-42d9-90b3-5a84271c1efa"
          },
          {
            "name": "Margin Per Order MTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "Sales Measures\\Margin\\To Date Measures\\Month To Date",
            "expression": "DIVIDE([Margin MTD], [Count of Orders Covered MTD])",
            "lineageTag": "f8159109-09b4-4b33-986f-d291997c54c0"
          },
          {
            "name": "Margin % MTD Goal Variance",
            "description": "The variance between Margin % MTD and Avg Marging% Goal",
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "[Margin % MTD]-[Avg Margin % Goal]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "7bb17fcf-c1bf-4d7a-8eaf-239710cc1c52"
          },
          {
            "name": "Customers Served 1YA",
            "description": "Calculates the number of customers served one year prior to the time selected in your filter context.",
            "displayFolder": "Sales Measures\\Customers Served\\Years Ago",
            "expression": "CALCULATE([Customers Served],DATEADD('calendar'[Date],-1,YEAR))",
            "formatString": "0",
            "lineageTag": "6b367d41-b688-4d91-97ea-40038716aa09"
          },
          {
            "name": "New / Revived Bill-too's",
            "description": [
              "This measure calculates the count of customers that we billed during a time peroid that we had not billed in the last 90 days",
              ""
            ],
            "displayFolder": "Sales Measures\\Customers Served",
            "expression": [
              "",
              "//This measure calculates the count of customers that we billed during a time peroid that we had not billed in the last 90 days",
              "Var customer_tm = VALUES(orders[Customer ID])",
              "Var prior_customers = ",
              "CALCULATETABLE(",
              "    VALUES(orders[Customer ID]),",
              "    FILTER(ALL('Calendar'),",
              "     'Calendar'[Date] > MIN('Calendar'[Date])-90 &&",
              "     'Calendar'[Date] < min('Calendar'[Date])))",
              "",
              "Return",
              "COUNTROWS(",
              "    EXCEPT(customer_tm,prior_customers))"
            ],
            "formatString": "0",
            "lineageTag": "29c65dca-27f7-4be8-a2e1-a0ae021290c7"
          },
          {
            "name": "New / Revived Bill-too's 1YA",
            "description": [
              "This measure calculates the count of customers that we billed one year prior to the time peroid that we had not billed in the last 90 days prior to time selected",
              "",
              ""
            ],
            "displayFolder": "Sales Measures\\Customers Served\\Years Ago",
            "expression": "CALCULATE([New / Revived Bill-too's],DATEADD('calendar'[Date],-1,YEAR))",
            "formatString": "0",
            "lineageTag": "33b7ed6a-1b8c-4321-87ab-548a2fa46db8"
          },
          {
            "name": "Margin vs Margin per week Goal Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Margin minus margin per week goal",
              ""
            ],
            "displayFolder": "Sales Measures\\Sales Goals\\Margin",
            "expression": "[Margin]-[Margin per Week Goal]",
            "lineageTag": "a7a46cdc-053a-4b95-a1e9-6ed70d05f482"
          },
          {
            "name": "Days Since Billed",
            "description": [
              "The difference in days between payments received bill date and todays date",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": "DATEDIFF(MIN(payments_received[Bill Date]),TODAY(),DAY)",
            "formatString": "0",
            "lineageTag": "c10ce8c7-683c-403f-a047-86d72d0748e1"
          },
          {
            "name": "Over 30",
            "description": [
              "Sum of order payment balance that are between 30 and 60 days old",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": [
              "CALCULATE(SUM(payments_received[Order Payment Balance]),",
              "FILTER(orders,[Days Since Billed]>30),",
              "FILTER(orders,[Days Since Billed]<=60))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "33f6f66e-0eb8-4d06-9abf-06dc95845d51"
          },
          {
            "name": "Over 60",
            "description": [
              "Sum of order payment balance that are between 60 and 90 days old",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": [
              "CALCULATE(SUM(payments_received[Order Payment Balance]),",
              "FILTER(orders,[Days Since Billed]>60),",
              "FILTER(orders,[Days Since Billed]<=90))"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "7c59d01f-aada-4661-b778-4e7e107872db"
          },
          {
            "name": "Over 90",
            "description": [
              "Sum of order payment balance that are greater than  90 days old",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": [
              "CALCULATE(SUM(payments_received[Order Payment Balance]),",
              "FILTER(orders,[Days Since Billed]>90))"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "78cfb761-e353-4880-bc6d-95865bc95278"
          },
          {
            "name": "Total Overdue",
            "description": "Takes total order balance and filters it by days since billed that are greater than the customers pay terms",
            "displayFolder": "Billing Measures",
            "expression": [
              "",
              "CALCULATE([Order Balance],",
              "FILTER(orders,[Days Since Billed]>MIN(customer_key[Pay Terms])))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "463077cb-300d-43a3-a721-9a305c1c4495"
          },
          {
            "name": "Invoice Amount",
            "description": "Sum of payment received table, order invoice and debit amount",
            "displayFolder": "Billing Measures",
            "expression": "SUM(payments_received[Order Invoice And Debit Amount])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "0765a584-1bc5-420b-9d66-ffd7786e656b"
          },
          {
            "name": "Order Balance",
            "description": [
              "sum of payment received table, order payment balance",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": "SUM(payments_received[Order Payment Balance])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "0794fdbc-a306-4c3f-859d-9bfa504dcf77"
          },
          {
            "name": "Avg Days to Pay",
            "description": [
              "average days to pay by customer key",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": "MIN(customer_key[Average Days to Pay])",
            "lineageTag": "8609293a-be11-40e9-a30b-16fac1b8aece"
          },
          {
            "name": "Days Overdue",
            "description": [
              "Subtracts days since billed by customer key pay terms",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": "[Days Since Billed]-MIN(customer_key[Pay Terms])",
            "formatString": "0",
            "lineageTag": "ef289013-307c-449c-a818-213e59bcb6b5"
          },
          {
            "name": "Last Payment",
            "description": [
              "finds the max payment received payment date and removes the filter if order payment balance",
              ""
            ],
            "displayFolder": "Billing Measures",
            "expression": "CALCULATE(MAX(payments_received[Payment Date]),REMOVEFILTERS(payments_received[Order Payment Balance]))",
            "formatString": "Short Date",
            "lineageTag": "b68e063c-b0a7-48b4-bfab-148eccdda91a"
          },
          {
            "name": "Average Margin per day MTD vs margin today goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "description": [
              "Subtracts average margin per day MTD and  Margin per day goal",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "[Average Margin Per Day MTD] - [Margin per day Goal]",
            "lineageTag": "be9e3f4b-57ff-4141-a0a1-6de41783bb59"
          },
          {
            "name": "Forcasted Margin this month",
            "description": [
              "Margin MTD plus the product of average margin per day MTD and working days left in the month.",
              ""
            ],
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": [
              "[Margin MTD] + ([Average Margin Per Day MTD] * [Working Days Left] )",
              ""
            ],
            "lineageTag": "a5be087a-792b-4844-9c92-34ddf7efa8f7"
          },
          {
            "name": "Working Days Left",
            "description": "Subtracts working days  by working days elapsed.",
            "displayFolder": "Calendar Measures",
            "expression": "[Working Days]-[Working days Elapsed]",
            "formatString": "0",
            "lineageTag": "039cc8de-fdc3-49c3-af2f-c757866a39e5"
          },
          {
            "name": "Count Overdue Check Calls",
            "description": "Counts the rows of the overdue check call table",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "COUNTROWS(overdue_check_calls)",
            "formatString": "0",
            "lineageTag": "43e5929e-a4a4-41d8-9fda-339b9bcf0376"
          },
          {
            "name": "Overdue Check Calls vs Count of Check Calls",
            "description": "Divides Count of overdue check calls by Count of Callins",
            "displayFolder": "Movement Measures\\Callins Measures",
            "expression": "DIVIDE([Count Overdue Check Calls],[Count of Callins])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "ffe3c242-1781-4f53-925e-2ecd0a3ef76b"
          },
          {
            "name": "Override margin goal",
            "description": "Sum of daily number override Margin Number",
            "displayFolder": "Sales Measures\\Margin\\Current Margin Measures",
            "expression": "SUM(daily_number_override[Margin Number])",
            "formatString": "0",
            "lineageTag": "d6af1cc2-db68-456e-8f70-90fe9494cf39"
          },
          {
            "name": "Count of DNC",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Count of Movements Booked],movements[DNC] = TRUE)",
            "formatString": "0",
            "lineageTag": "ac905068-b9de-4e23-8041-ad274b1fa69a"
          },
          {
            "name": "Count of DNC by Rev code",
            "displayFolder": "***Undocumented***",
            "expression": "[Count of DNC] / [Count of Movements Booked]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "58fc7993-7c0b-4432-b0cd-fd238884e418"
          },
          {
            "name": "Count of movements all time",
            "displayFolder": "***Undocumented***",
            "expression": [
              "CALCULATE([Count of Movements Booked],",
              "REMOVEFILTERS('calendar'[Date]))"
            ],
            "formatString": "0",
            "lineageTag": "cd5c84c7-53a1-4c34-97be-0a8722b880a9"
          },
          {
            "name": "Average Revenue Per Week",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var count_of_weeks = DISTINCTCOUNT('calendar'[Week / Year])",
              "Var avg_rev_per_week = DIVIDE([Revenue Covered],count_of_weeks)",
              "",
              "RETURN",
              "avg_rev_per_week"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "59c4d908-73a9-47b3-9abb-424e4a5edbd3"
          },
          {
            "name": "SDR OPS Date",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": "SUM(sdr_key[x_studio_start_date])+14",
            "formatString": "General Date",
            "lineageTag": "cbd3b68a-5781-4996-9cb4-e2bcb854ad69"
          },
          {
            "name": "SDR Move Date",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "Var start_date_plus90 = SUM(sdr_key[x_studio_start_date])+90",
              "Var first_monday_of_start_date_plus90 = Format(CEILING(EOMONTH(start_date_plus90,-1)-1,7)+2,\"dddd, mmm dd, yyyy\")",
              "Var first_monday_of_month_after_start_date_plus90 = FORMAT(CEILING(EOMONTH(start_date_plus90,-0)-1,7)+2, \"dddd, mmm dd, yyyy\")",
              "Var day_of_start_date = Day(SUM(sdr_key[x_studio_start_date]))",
              "Var estamate_of_sdr_move_date = ",
              "    IF(day_of_start_date>15,first_monday_of_month_after_start_date_plus90,first_monday_of_start_date_plus90)",
              "Var override = IF(SUM(sdr_key[x_studio_sdr_start_date])=BLANK(),estamate_of_sdr_move_date,FORMAT(SUM(sdr_key[x_studio_sdr_start_date]),\"dddd, mmm, dd, yyyy\"))",
              "",
              "RETURN",
              "override"
            ],
            "lineageTag": "6cef3c46-cc79-4e41-b066-2de65e34824a"
          },
          {
            "name": "SDR D-Team Move Date estamate",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "Var sdr_move_plus_3_months = SUM(sdr_key[x_studio_start_date])+180",
              "Var first_monday_of_sdr_move_plus3 = Format(CEILING(EOMONTH(sdr_move_plus_3_months,-1)-1,7)+2,\"dddd, mmmm dd, yyyy\")",
              "Var first_monday_of_monday_after_sdr_plus3 = FORMAT(CEILING(EOMONTH(sdr_move_plus_3_months,0)+1,7)+2, \"dddd, mmmm dd, yyyy\")",
              "Var day_of_start_date = DAY(SUM(sdr_key[x_studio_start_date]))",
              "Var estemate_of_dteam_date = ",
              "    IF(day_of_start_date>15,first_monday_of_monday_after_sdr_plus3,first_monday_of_monday_after_sdr_plus3)",
              "",
              "RETURN",
              "estemate_of_dteam_date"
            ],
            "lineageTag": "d9317f2d-e52c-42c5-8709-06a2c2129ba8"
          },
          {
            "name": "SDR Margin new",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "Var lead_passed_date_var = MIN(crm[x_studio_lead_passed_date])",
              "Var end_monitor = lead_passed_date_var+180",
              "Var margin = CALCULATE([Margin],orders[Ship Scheduled Early Date]>=lead_passed_date_var, orders[Ship Scheduled Early Date]<=end_monitor)",
              "",
              "Return",
              "margin"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "77a2ba51-4443-450c-a93b-da64f92bac8a"
          },
          {
            "name": "Qualified Leads",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": "CALCULATE(DISTINCTCOUNT(behaviors_crm[id]),behaviors_crm[mail_activity_type_id]=\"Lead Passed\")",
            "formatString": "0",
            "lineageTag": "06c3b12a-9066-4963-a4fc-142e891e4492"
          },
          {
            "name": "Unqualified Leads",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": "CALCULATE(DISTINCTCOUNT(behaviors_crm[id]),behaviors_crm[mail_activity_type_id]=\"Unqualified Lead Passed\")",
            "formatString": "0",
            "lineageTag": "e9c7cf92-dadf-4dcb-98df-db754c90bae6"
          },
          {
            "name": "Total Leads Remove Calendar Filter",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "var unqualified_lead_ratio = DIVIDE([Unqualified Leads],3)",
              "Var total_leads = CALCULATE([Qualified Leads]+unqualified_lead_ratio,REMOVEFILTERS('calendar'[Quarter],'calendar'[Year]))",
              "",
              "RETURN",
              "total_leads"
            ],
            "lineageTag": "e9d65f4c-d8a9-43de-aa11-d2359ca2f097"
          },
          {
            "name": "Count of SDR Grads",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "    CALCULATE(",
              "        DISTINCTCOUNT(sdr_key[user_id]),",
              "        sdr_key[x_studio_d_team_start_date]>MIN('calendar'[Date]),",
              "        sdr_key[x_studio_d_team_start_date]<MAX('calendar'[Date]))"
            ],
            "formatString": "0",
            "lineageTag": "d5d70614-896a-4adc-9aa2-a165259969ee"
          },
          {
            "name": "Average Leads Passed By Grads",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": "DIVIDE([Total Leads Remove Calendar Filter],[Count of SDR Grads])",
            "lineageTag": "9180be1c-e3b0-4e3b-a2cb-23879a3617c7"
          },
          {
            "name": "Leads closed in 90 days",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "Var lead_passed_date_var = MIN(crm[x_studio_lead_passed_date])",
              "Var lead_passed_dateplus90 = lead_passed_date_var+90",
              "Var first_order = ",
              "    CALCULATE(",
              "    MIN(orders[Ship Scheduled Early Date]),",
              "    REMOVEFILTERS('calendar'[Quarter]),",
              "    REMOVEFILTERS('calendar'[Year]),",
              "    orders[Ship Scheduled Early Date]>=lead_passed_date_var)",
              "Var count_of_orders_in_90_day_window = CALCULATE([Count of Orders Covered],first_order>=lead_passed_date_var,orders[Ship Scheduled Early Date]<=lead_passed_dateplus90)",
              "Var if_closed = IF(count_of_orders_in_90_day_window>=1,1,0)",
              "",
              "RETURN",
              "count_of_orders_in_90_day_window"
            ],
            "lineageTag": "91e225f5-e6cb-4db5-a3e4-0e60a142e4aa"
          },
          {
            "name": "Lead was passed in 90 days prior to quarter",
            "displayFolder": "***Undocumented***\\SDR Measures",
            "expression": [
              "",
              "Var lead_passed_date_var = MIN(crm[x_studio_lead_passed_date])",
              "Var start_of_qrt_minus90 = MIN('calendar'[Date])-90",
              "Var end_of_qrt = MAX('calendar'[Date])",
              "Var lead_passed_date_in_window = ",
              "    if(lead_passed_date_var>= start_of_qrt_minus90,",
              "    if(lead_passed_date_var<=end_of_qrt,1,0))",
              "    ",
              "RETURN  ",
              "lead_passed_date_in_window"
            ],
            "formatString": "0",
            "lineageTag": "e657874e-d183-4aa3-926b-35158e851a32"
          },
          {
            "name": "% of orders covered CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var total_covered = [Count of Orders Covered]",
              "var CRT_covered = CALCULATE([Count of Orders Covered],dispatcher_key[Level] = \"Central Operations\")",
              "var diff = CRT_covered / total_covered",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "4f8d5da2-9d68-4057-8232-7898928c8b56"
          },
          {
            "name": "Avg Margin per load CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var CRT_covered = CALCULATE([Count of Orders Covered],dispatcher_key[Level] = \"Central Operations\")",
              "var CRT_margin = CALCULATE([Margin],dispatcher_key[Level] = \"Central Operations\")",
              "var diff = CRT_margin / CRT_covered",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "dfb64c3a-fe9c-484c-9f8d-9fab70f80677"
          },
          {
            "name": "Count of orders covered CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var CRT_covered = CALCULATE([Count of Orders Covered],dispatcher_key[Level] = \"Central Operations\")",
              "",
              "RETURN",
              "CRT_covered"
            ],
            "formatString": "#,0",
            "lineageTag": "ba06b593-47be-4319-970a-95ea0004ba3f"
          },
          {
            "name": "Margin % CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var CRT_rev = CALCULATE([Revenue Covered],dispatcher_key[Level] = \"Central Operations\")",
              "var CRT_margin = CALCULATE([Margin],dispatcher_key[Level] = \"Central Operations\")",
              "var diff = CRT_margin / CRT_rev",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "6c650ba6-55ad-4ea4-a01b-55ee879159ea"
          },
          {
            "name": "Total Margin % CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var total_margin = [Margin]",
              "var CRT_margin = CALCULATE([Margin],dispatcher_key[Level] = \"Central Operations\")",
              "var diff = CRT_margin / total_margin",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "993b6ca9-5097-469e-a026-c1703856bfe7"
          },
          {
            "name": "Carriers onboarded vs Load count",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var onboarded = SUM(highway_onboarded[count])",
              "var loads_covered_per_dispatcher = CALCULATE([Count of Orders Covered],dispatcher_key[Dispatcher Name] = min(highway_onboarded[Dispatcher]))",
              "var diff = onboarded / loads_covered_per_dispatcher",
              "",
              "return",
              "diff"
            ],
            "formatString": "0%;-0%;0%",
            "lineageTag": "3a6d64d4-cfec-4514-a9be-034413eaaff9"
          },
          {
            "name": "% of Carriers Onboarded CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var total_CRT = [Count of Carrier Onboards CRT]",
              "var count_ = [Count of orders covered CRT]",
              "var diff = DIVIDE(total_CRT , count_)",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0%;-0%;0%",
            "lineageTag": "7c2ac733-ea31-4951-a389-7350066e4674"
          },
          {
            "name": "Count of Carrier Onboards CRT",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var CRT_ = CALCULATE(SUM(highway_onboarded[count]),dispatcher_key[Level] = \"Central Operations\")",
              "",
              "RETURN",
              "CRT_"
            ],
            "formatString": "0",
            "lineageTag": "f7c5973e-6891-431f-9845-d66322541a0b"
          },
          {
            "name": "Count of Next sched Check calls",
            "displayFolder": "***Undocumented***",
            "expression": "COUNTROWS(check_call_roller)",
            "formatString": "0",
            "lineageTag": "f9f11a2f-f1f7-4c03-bc30-c8c3b3c192a3"
          },
          {
            "name": "Next sched check call vs Overdue",
            "displayFolder": "***Undocumented***",
            "expression": "DIVIDE([Count Overdue Check Calls],[Count of Next sched Check calls])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "41ee16c1-c155-4798-a2ac-e3d5ad297043"
          },
          {
            "name": "Count of orders covered by team",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var team_covered = CALCULATE([Count of Orders Covered],dispatcher_key[Level] <> \"Central Operations\",dispatcher_key[Level] <> \"admin\")",
              "",
              "RETURN",
              "team_covered"
            ],
            "formatString": "0",
            "lineageTag": "28639271-b443-4448-841e-3f31d4cda4e7"
          },
          {
            "name": "CRT booking goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": "[Count of Orders Covered] * .8",
            "lineageTag": "9bfedd23-4c7e-4066-b349-d326008ce8e1"
          },
          {
            "name": "Margin % Team",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var team_rev = CALCULATE([Revenue Covered],dispatcher_key[Level] <> \"Central Operations\",dispatcher_key[Level] <> \"Admin\")",
              "var team_margin = CALCULATE([Margin],dispatcher_key[Level] <> \"Central Operations\",dispatcher_key[Level] <> \"Admin\")",
              "var diff = team_margin / team_rev",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "2f75e6d9-aff7-47d8-aa36-206d9c2883e0"
          },
          {
            "name": "Avg Margin per load team",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var team_covered = CALCULATE([Count of Orders Covered],dispatcher_key[Level] <> \"Central Operations\")",
              "var team_margin = CALCULATE([Margin],dispatcher_key[Level] <> \"Central Operations\")",
              "var diff = team_margin / team_covered",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "a3658ea9-0639-4491-9d0f-065e65e4318f"
          },
          {
            "name": "Margin CRT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var CRT_margin = CALCULATE([Margin],dispatcher_key[Level] = \"Central Operations\")",
              "",
              "RETURN",
              "CRT_margin"
            ],
            "lineageTag": "f8613ff4-33ba-4fa6-a10e-639940786f7a"
          },
          {
            "name": "Margin % Parade",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var CRT_rev = CALCULATE([Revenue Covered],dispatcher_key[Level] = \"Admin\")",
              "var CRT_margin = CALCULATE([Margin],dispatcher_key[Level] = \"Admin\")",
              "var diff = CRT_margin / CRT_rev",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "027e7d9c-11bc-42c5-94e5-beebfbd1eaba"
          },
          {
            "name": "Margin % CRT + P",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var CRT_rev = CALCULATE([Revenue Covered],dispatcher_key[Level] = \"Central Operations\")",
              "var CRT_margin = CALCULATE([Margin],dispatcher_key[Level] = \"Central Operations\")",
              "var p_rev = CALCULATE([Revenue Covered],dispatcher_key[Level] = \"admin\")",
              "var p_margin = CALCULATE([Margin],dispatcher_key[Level] = \"admin\")",
              "var mar = (CRT_margin + p_margin)",
              "var rev = (CRT_rev + p_rev)",
              "var diff = DIVIDE(mar,rev)",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "04326934-0fdf-4150-8234-5b2f20077354"
          },
          {
            "name": "Count of orders covered Parade",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var p_covered = CALCULATE([Count of Orders Covered],dispatcher_key[Level] = \"admin\")",
              "",
              "RETURN",
              "p_covered"
            ],
            "formatString": "0",
            "lineageTag": "36528c3d-926f-43c6-8da9-f201059233de"
          },
          {
            "name": "Count of orders covered CRT + P",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var CRT_ = CALCULATE([Count of orders covered CRT],dispatcher_key[Level] = \"Central Operations\")",
              "var p_ = CALCULATE([Count of orders covered Parade],dispatcher_key[Level] = \"admin\")",
              "var add_ = CRT_ + p_",
              "",
              "RETURN",
              "add_"
            ],
            "formatString": "0",
            "lineageTag": "a3f10482-5888-4256-a200-aaf776b8ea7b"
          },
          {
            "name": "% of Passed Back Loads Covered CRT + P",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "var CRT_ = CALCULATE([Count of orders covered CRT],",
              "    dispatcher_key[Level] = \"Central Operations\",",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 1, ",
              "    FILTER(movements,[Was Passed] = 1))",
              "",
              "var p_ = CALCULATE([Count of orders covered Parade],",
              "    dispatcher_key[Level] = \"admin\",",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 1,",
              "    FILTER(movements,[Was Passed] = 1))",
              "",
              "var add_ = CRT_ + p_",
              "",
              "var x = DIVIDE(add_,[Total Passed])",
              "",
              "RETURN ",
              "x",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "fa9fa466-0061-405f-8ded-f7662b87a0e4"
          },
          {
            "name": "Margin Team",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var team_margin = CALCULATE([Margin],dispatcher_key[Level] <> \"Central Operations\")",
              "",
              "RETURN",
              "team_margin"
            ],
            "lineageTag": "15d8ca8a-6469-476b-af7a-474e0ee17f75"
          },
          {
            "name": "Margin Parade",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var Parade_margin = CALCULATE([Margin],dispatcher_key[Level] = \"admin\")",
              "",
              "RETURN",
              "Parade_margin"
            ],
            "lineageTag": "49043af4-3d8d-4555-aab8-91716ec8b5c8"
          },
          {
            "name": "Margin CRT + P",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR CRT = [Margin CRT]",
              "VAR PARADE = [Margin Parade]",
              "VAR ADD_ = CRT + PARADE",
              "",
              "RETURN",
              "ADD_"
            ],
            "lineageTag": "21805806-3793-4e4b-b5ed-778410efd333"
          },
          {
            "name": "Best Margin Month Ever remove date",
            "displayFolder": "Sales Measures\\Margin\\Bests\\Months",
            "expression": [
              "",
              "CALCULATE(",
              "    MAXX(",
              "        GROUPBY('calendar','calendar'[Month / Year]),",
              "        [Margin]),",
              "        REMOVEFILTERS('calendar'[Year]),",
              "        REMOVEFILTERS('calendar'[Month Name]),",
              "        REMOVEFILTERS('calendar'[Date]))"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "107d8412-7d73-4825-81c6-ed9a06250a55"
          },
          {
            "name": "Margin Goal MTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var workingdays = ",
              "    NETWORKDAYS(",
              "        STARTOFMONTH('Calendar'[Date]),",
              "        ENDOFMONTH('Calendar'[Date]),",
              "        1,",
              "        observed_holidays)",
              "Var months_margin_goal = CALCULATE([Margin Goal])",
              "Var override_mpdg = CALCULATE([Override margin goal])",
              "Var mpd = DIVIDE(months_margin_goal,workingdays)",
              "",
              "Var override_blank = if(override_mpdg=0,mpd,override_mpdg)",
              "Var mpdg_wolf_pack = ",
              "    SWITCH(TRUE(),SELECTEDVALUE(wolf_pack[Wolf Pack])=BLANK(),override_blank*[Working days Elapsed],mpd*[Working days Elapsed])",
              "",
              "Var mpdg = SWITCH(TRUE(),SELECTEDVALUE(salesperson_key[Salesperson Name])=BLANK(),mpdg_wolf_pack,mpd*[Working days Elapsed])",
              "",
              "RETURN",
              "mpdg"
            ],
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "0350b5b4-3603-410d-bee7-897d8431b530"
          },
          {
            "name": "Customers Served 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Customers Served],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "4b0f25eb-819c-488a-b3a4-62a4686faa21"
          },
          {
            "name": "Customers Served MOM Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Customers Served] - [Customers Served 1MA]",
            "formatString": "0",
            "lineageTag": "fda16fb7-8333-49ed-8bc5-a902b07fad22"
          },
          {
            "name": "Customers Served MTD",
            "displayFolder": "***Undocumented***",
            "expression": "TOTALMTD([Customers Served],'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "0",
            "lineageTag": "f26264db-4f36-4cda-a374-9d2b5e1aaf28"
          },
          {
            "name": "Customers Served MTD 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Customers Served MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "bbe9545c-23d5-41db-bfea-e3f548c76556"
          },
          {
            "name": "Customers Served MTD MOM Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Customers Served MTD] - [Customers Served MTD 1MA]",
            "formatString": "0",
            "lineageTag": "c091abbe-ca3e-4fd7-80a2-66976ce3166d"
          },
          {
            "name": "Margin Goal 1MA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Margin Goal],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "44c593b2-139e-4da2-ad6c-f492218abde5"
          },
          {
            "name": "Todays margin per order goal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var start_of_month = CALCULATE(STARTOFMONTH('calendar'[Date]),'calendar'[Date]=TODAY())",
              "Var workingdays = ",
              "    NETWORKDAYS(",
              "        CALCULATE(STARTOFMONTH('Calendar'[Date]),'calendar'[Date]=start_of_month),",
              "        CALCULATE(ENDOFMONTH('Calendar'[Date]),'calendar'[Date]=TODAY()),",
              "        1,",
              "        observed_holidays)",
              "Var months_margin_goal = CALCULATE([Avg Margin Per Order Goal],'calendar'[Date]=start_of_month)",
              "Var mpd = months_margin_goal",
              "",
              "Return",
              "mpd"
            ],
            "lineageTag": "cc3b5088-a317-4175-8598-43406b1b4788"
          },
          {
            "name": "Count of Orders Covered 2MA",
            "displayFolder": "Operations Measures\\Count of Orders\\Months Ago",
            "expression": "CALCULATE([Count of Orders Covered],DATEADD('calendar'[Date],-2,MONTH))",
            "formatString": "0",
            "lineageTag": "78672060-930b-4514-8635-d231e2f3913c"
          },
          {
            "name": "Count of Orders Covered MOM Variance",
            "displayFolder": "Operations Measures\\Count of Orders\\Month over Month",
            "expression": "[Count of Orders Covered] - [Count of Orders Covered 1MA]",
            "formatString": "0",
            "lineageTag": "190aaf74-69a3-494d-80e6-18e5e58fe831"
          },
          {
            "name": "Margin per order 1MA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Margin Per Order],DATEADD('calendar'[Date],-1,MONTH))",
            "lineageTag": "afa49517-cd2c-4cb4-bc75-2e6c554895f6"
          },
          {
            "name": "Margin per order MOM Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": "[Margin Per Order] -[Margin per order 1MA]",
            "lineageTag": "de5fd95b-81d2-4440-ae4e-063eef4e22de"
          },
          {
            "name": "Carriers Onboarded 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE(count(highway_onboarded[count]),DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "bac8d3f9-fb7e-495a-887d-edf0f958fe37"
          },
          {
            "name": "Carriers Onboarded 2MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE(count(highway_onboarded[count]),DATEADD('calendar'[Date],-2,MONTH))",
            "formatString": "0",
            "lineageTag": "4cc66e1e-7bf6-441d-9f08-230950d6296d"
          },
          {
            "name": "Carriers Onboarded MOM 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "[Carriers Onboarded 1MA]-[Carriers Onboarded 2MA]",
            "formatString": "0",
            "lineageTag": "a46fb3f1-ab68-4784-a95d-a5f50edcd207"
          },
          {
            "name": "Carriers Onboarded MTD",
            "displayFolder": "***Undocumented***",
            "expression": "TOTALMTD(count(highway_onboarded[count]),'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "0",
            "lineageTag": "598b307b-d8b6-45e6-8198-51106f7f7de3"
          },
          {
            "name": "Carriers Onboarded MTD 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Carriers Onboarded MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "b0246966-d0b6-4a15-8dbd-c59568ee6282"
          },
          {
            "name": "Carriers Onboarded MOM MTD",
            "displayFolder": "***Undocumented***",
            "expression": "[Carriers Onboarded MTD]-[Carriers Onboarded MTD 1MA]",
            "formatString": "0",
            "lineageTag": "cae47b45-62ae-48da-8915-a539f39837d9"
          },
          {
            "name": "Count of Carriers reloaded",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var count_ = CALCULATE(DISTINCTCOUNT(movements[Carrier ID]),",
              "    FILTER(carrier_key,[Count of Orders Covered] > 1))",
              "",
              "return count_"
            ],
            "formatString": "0",
            "lineageTag": "1c542828-b561-4dfb-8d67-30d3fcd1ec83"
          },
          {
            "name": "Distinct carrier ID",
            "displayFolder": "***Undocumented***",
            "expression": [
              "DISTINCTCOUNT(movements[Carrier ID])",
              "",
              "",
              ""
            ],
            "formatString": "0",
            "lineageTag": "818cd40d-7845-4560-9321-e79ba68b3e66"
          },
          {
            "name": "Count of Carriers reloaded 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Count of Carriers reloaded],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "39ed9bbf-d4d8-4437-b8c1-8ad8e9d98d05"
          },
          {
            "name": "Count of Carriers reloaded 2MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Count of Carriers reloaded],DATEADD('calendar'[Date],-2,MONTH))",
            "formatString": "0",
            "lineageTag": "57e856e2-20c0-4f74-b60a-307b5c054e21"
          },
          {
            "name": "Count of Carriers reloaded MTD",
            "displayFolder": "***Undocumented***",
            "expression": "TOTALMTD([Count of Carriers reloaded],'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "0",
            "lineageTag": "4e463d76-dde2-495d-bd7e-aa0194216186"
          },
          {
            "name": "Count of Carriers reloaded MTD 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Count of Carriers reloaded MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0",
            "lineageTag": "5f093bb5-c45a-4979-a660-0991079cc4b8"
          },
          {
            "name": "Count of Carriers reloaded MOM Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Count of Carriers reloaded 1MA] - [Count of Carriers reloaded 2MA]",
            "formatString": "0",
            "lineageTag": "9762d623-500f-4c1c-87a4-f23066af1e42"
          },
          {
            "name": "Count of Carriers reloaded MTD MOM Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Count of Carriers reloaded MTD] - [Count of Carriers reloaded MTD 1MA]",
            "formatString": "0",
            "lineageTag": "05b96afb-df07-4d8e-9e1d-aeb9e8b1a561"
          },
          {
            "name": "% of Recurring Carriers",
            "displayFolder": "***Undocumented***",
            "expression": "DIVIDE([Count of Carriers reloaded],[Distinct carrier ID])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "5bff9f79-c4b1-4708-9c5a-4cd67a005a38"
          },
          {
            "name": "Pass Rate (Sales to CRT)",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(COUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 0)",
              "    ",
              "",
              "VAR pass_by_total = DIVIDE(num_pass,[Count of Orders] )",
              "",
              "",
              "return ",
              "pass_by_total"
            ],
            "formatString": "0.0%;-0.0%;0.0%",
            "lineageTag": "5a686f24-15b2-4d17-8253-44d778a2c007"
          },
          {
            "name": "Pass Rate 1MA (Sales to CRT)",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Pass Rate (Sales to CRT)],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "ac628bf7-b5f6-4b96-878d-17aea10563f7"
          },
          {
            "name": "Pass Rate MOM Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Pass Rate 1MA (Sales to CRT)] - [Pass Rate 2MA (Sales to CRT)]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "2336834b-fc9f-487e-96f2-960e55ddd3be"
          },
          {
            "name": "Pass Rate 2MA (Sales to CRT)",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Pass Rate (Sales to CRT)],DATEADD('calendar'[Date],-2,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "abe13779-dea0-4ce0-b039-9d61fafbfef5"
          },
          {
            "name": "Pass Rate MTD",
            "displayFolder": "***Undocumented***",
            "expression": "TOTALMTD([Pass Rate (Sales to CRT)],'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "0.0%;-0.0%;0.0%",
            "lineageTag": "f46d5baf-c817-4797-bdaf-aa2f530c858b"
          },
          {
            "name": "Pass Rate MTD 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Pass Rate MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "57d06f07-0737-4c2a-95c9-bc8802f20b69"
          },
          {
            "name": "Pass Rate MOM MTD Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Pass Rate MTD] - [Pass Rate MTD 1MA]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "f716de9d-e1f1-48d5-8096-f751195bd4a6"
          },
          {
            "name": "% of Passed Loads Covered CRT + P",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var CRT_ = CALCULATE([Count of orders covered CRT],",
              "    dispatcher_key[Level] = \"Central Operations\", ",
              "    FILTER(movements,[Was Passed] = 1))",
              "",
              "var p_ = CALCULATE([Count of orders covered Parade],",
              "    dispatcher_key[Level] = \"admin\",",
              "    FILTER(movements,[Was Passed] = 1))",
              "",
              "var add_ = CRT_ + p_",
              "",
              "var x = DIVIDE(add_,[Total Passed])",
              "",
              "RETURN ",
              "x",
              ""
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "424999c2-d27a-4943-96c6-d2fe31cc77e7"
          },
          {
            "name": "Total Passed",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(DISTINCTCOUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 0)",
              "",
              "RETURN",
              "num_pass",
              ""
            ],
            "formatString": "0",
            "lineageTag": "03d6cba5-e875-45bb-80cd-81a4841e8bc5"
          },
          {
            "name": "Pass Back Rate (1 or more)",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(COUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 1)",
              "    ",
              "VAR pass_by_total = DIVIDE(num_pass,[Count of Orders])",
              "",
              "return ",
              "pass_by_total"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "0b5d4f6d-6f64-4c9d-a5e6-d08812accfd4"
          },
          {
            "name": "Pass Back Rate (3 or more)",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(COUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 3)",
              "VAR pass_by_total = DIVIDE(num_pass,[Count of Orders])",
              "",
              "return ",
              "pass_by_total"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "67727ea6-d947-4442-86a1-ca91133d3f78"
          },
          {
            "name": "Pass Back Rate MTD",
            "displayFolder": "***Undocumented***",
            "expression": "TOTALMTD([Pass Back Rate (1 or more)],'calendar'[Date],'calendar'[Day of Month]<DAY(TODAY()))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "dcd0ef6a-e954-476e-a921-0fe511eca04a"
          },
          {
            "name": "Pass Back Rate MTD 1MA",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Pass Back Rate MTD],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "ebd83a5b-691b-42bb-814d-de9c489a2355"
          },
          {
            "name": "Pass Back Rate MOM MTD Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Pass Back Rate MTD] - [Pass Back Rate MTD 1MA]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "a9e8c85b-56c5-4b5a-b26c-ebe7aa272f80"
          },
          {
            "name": "Pass Back Rate 1MA (Sales to CRT)",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Pass Back Rate (1 or more)],DATEADD('calendar'[Date],-1,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "77b04f13-4772-4245-a12b-6548afc8bfdd"
          },
          {
            "name": "Pass Back Rate 2MA (Sales to CRT)",
            "displayFolder": "***Undocumented***",
            "expression": "CALCULATE([Pass Back Rate (1 or more)],DATEADD('calendar'[Date],-2,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "d7566789-9d8d-4b3c-8404-6b6d85abfca6"
          },
          {
            "name": "Pass Back Rate MOM Variance",
            "displayFolder": "***Undocumented***",
            "expression": "[Pass Back Rate 1MA (Sales to CRT)] - [Pass Back Rate 2MA (Sales to CRT)]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "1135343e-3df7-4229-85b6-064f86e75249"
          },
          {
            "name": "% of eligible loads covered CRT + P (Pass Back 1 or more)",
            "displayFolder": "***Undocumented***",
            "expression": "[Pass Back Rate (1 or more)] * [% of Passed Back Loads Covered CRT + P]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "86890a8f-37f3-420e-b0e1-f2b4438d2df4"
          },
          {
            "name": "Total Pass Back (1 or more)",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(DISTINCTCOUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 1)",
              "",
              "return ",
              "num_pass"
            ],
            "formatString": "0",
            "lineageTag": "31999f2b-9b31-4363-b8ea-de4627a26f9c"
          },
          {
            "name": "Total Not Passed",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(DISTINCTCOUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 0)",
              "VAR total_orders = [Count of Orders]",
              "",
              "var diff = total_orders - num_pass",
              "",
              "RETURN",
              "diff"
            ],
            "formatString": "0",
            "lineageTag": "2364cc46-7db8-44c0-b859-3c872f0f153c"
          },
          {
            "name": "Was Passed",
            "displayFolder": "***Undocumented***",
            "expression": "if(min(movements[Movement ID]) = min(carrier_dispatch_movement_data[Movement ID]),1,0)",
            "formatString": "0",
            "lineageTag": "fc2607b1-7b3f-4850-b273-3d05fab47fa5"
          },
          {
            "name": "% of Not Passed Loads Covered CRT + P",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var CRT_ = CALCULATE([Count of orders covered CRT],",
              "    dispatcher_key[Level] = \"Central Operations\", ",
              "    FILTER(movements,[Was Passed] = 0))",
              "",
              "var p_ = CALCULATE([Count of orders covered Parade],",
              "    dispatcher_key[Level] = \"admin\",",
              "    FILTER(movements,[Was Passed] = 0))",
              "",
              "var add_ = CRT_ + p_",
              "",
              "var x = DIVIDE(add_,[Total Not Passed])",
              "",
              "RETURN ",
              "x"
            ],
            "formatString": "0%;-0%;0%",
            "lineageTag": "1bb263a1-8d2d-449c-8101-80c6ef393475"
          },
          {
            "name": "Total Success Rate",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var pass_ = [% of Passed Loads Covered CRT + P] * [Pass Rate (Sales to CRT)]",
              "var not_passed = [% of Not Passed Loads Covered CRT + P] * [Not Pass Rate (Sales to CRT)]",
              "var add_ = pass_ + not_passed",
              "RETURN",
              "add_"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "7925302a-2c09-480d-8941-cd6fb2082b84"
          },
          {
            "name": "Not Pass Rate (Sales to CRT)",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "Var num_pass = CALCULATE(COUNT(carrier_dispatch_movement_data[Movement ID]), ",
              "    carrier_dispatch_movement_data[Number of Pass Backs] >= 0)",
              "",
              "VAR pass_by_total = DIVIDE([Total Not Passed],[Count of Orders] )",
              "",
              "",
              "return ",
              "pass_by_total"
            ],
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "6fd34ad4-f0cc-4155-a3e6-10e200ebfef4"
          },
          {
            "name": "% of orders covered CRT + P",
            "displayFolder": "***Undocumented***",
            "expression": "[% of orders covered CRT]+[% of Orders Covered Parade]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "40e6c544-92ab-46b2-b319-d5f82ed0fd64"
          },
          {
            "name": "% of Orders Covered Parade",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "var total_covered = [Count of Orders Covered]",
              "var Parade_covered = [Count of orders covered Parade]",
              "var diff = Parade_covered / total_covered",
              "",
              "RETURN",
              "diff"
            ],
            "lineageTag": "9573f31d-08f5-4fa4-8dd8-957b2d65aacd"
          },
          {
            "name": "Time from Available to Loadboard time",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR total_seconds = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Available Date Time], ",
              "    carrier_dispatch_movement_data[Load Board Date Time], ",
              "    SECOND)",
              ")",
              "",
              "VAR XDay = INT(total_seconds / (24 * 60 * 60))",
              "VAR XHours = MOD(INT(total_seconds / (60 * 60)), 24)",
              "VAR XMinutes = MOD(INT(total_seconds / 60), 60)",
              "VAR XSeconds = MOD(total_seconds, 60)",
              "VAR XEnd = TIME(XHours,XMinutes,XSeconds)",
              "",
              "RETURN ",
              "XEnd",
              ""
            ],
            "formatString": "hh:nn:ss",
            "lineageTag": "dce9417c-31da-4559-99eb-5519b08bccf2"
          },
          {
            "name": "Time from Loadboard to Covered time",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR total_seconds = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Load Board Date Time], ",
              "    carrier_dispatch_movement_data[Covered Date Time], ",
              "    SECOND)",
              ")",
              "",
              "VAR XDay = INT(total_seconds / (24 * 60 * 60))",
              "VAR XHours = MOD(INT(total_seconds / (60 * 60)), 24)",
              "VAR XMinutes = MOD(INT(total_seconds / 60), 60)",
              "VAR XSeconds = MOD(total_seconds, 60)",
              "VAR XEnd = TIME(XHours,XMinutes,XSeconds)",
              "",
              "RETURN ",
              "XEnd",
              ""
            ],
            "formatString": "hh:nn:ss",
            "lineageTag": "792c4050-e087-4dc9-8cde-1064092d4891"
          },
          {
            "name": "Time from Available to Give Back time",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR total_seconds = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Available Date Time], ",
              "    carrier_dispatch_movement_data[Give Back Date Time], ",
              "    SECOND)",
              ")",
              "",
              "VAR Hours = MOD(INT(total_seconds / (60 * 60)), 24)",
              "VAR Minutes = MOD(INT(total_seconds / 60), 60)",
              "VAR Seconds = MOD(total_seconds, 60)",
              "VAR End_ = TIME(Hours,Minutes,Seconds)",
              "",
              "",
              "RETURN ",
              "End_",
              ""
            ],
            "formatString": "hh:nn:ss",
            "lineageTag": "67345104-ebff-44ad-aea7-39f68c12c558"
          },
          {
            "name": "Available to Give Back sec",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR total_seconds = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Available Date Time], ",
              "    carrier_dispatch_movement_data[Give Back Date Time], ",
              "    SECOND)",
              ")",
              "",
              "",
              "RETURN ",
              "total_seconds",
              ""
            ],
            "lineageTag": "f0768cce-9769-4c4f-9cc7-1d82f95439b3"
          },
          {
            "name": "Available to Loadboard sec",
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR total_seconds = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Available Date Time], ",
              "    carrier_dispatch_movement_data[Load Board Date Time], ",
              "    SECOND)",
              ")",
              "",
              "RETURN ",
              "total_seconds",
              ""
            ],
            "formatString": "0",
            "lineageTag": "f3e4c279-3f1d-4148-b028-061fc33caa26"
          },
          {
            "name": "Load Board to Covered time sec",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "VAR total_seconds = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Load Board Date Time], ",
              "    carrier_dispatch_movement_data[Covered Date Time], ",
              "    SECOND)",
              ")",
              "",
              "RETURN ",
              "total_seconds"
            ],
            "formatString": "0",
            "lineageTag": "c73062dd-bcc0-42a1-b88a-b68c38db66f6"
          },
          {
            "name": "Time from Give Back to Covered time",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "displayFolder": "***Undocumented***",
            "expression": [
              "",
              "",
              "VAR total_seconds1 = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Give Back Date Time], ",
              "    carrier_dispatch_movement_data[Covered Date Time], ",
              "    SECOND)",
              ")",
              "VAR total_seconds2 = AVERAGEX(carrier_dispatch_movement_data, ",
              "    DATEDIFF(carrier_dispatch_movement_data[Available Date Time], ",
              "    carrier_dispatch_movement_data[Give Back Date Time], ",
              "    SECOND)",
              ")",
              "VAR total_seconds3 =total_seconds1 - total_seconds2",
              "",
              "VAR Hours = MOD(INT(total_seconds3 / (60 * 60)), 24)",
              "VAR Minutes = MOD(INT(total_seconds3 / 60), 60)",
              "VAR Seconds = MOD(total_seconds3, 60)",
              "VAR End_ = TIME(Hours,Minutes,Seconds)",
              "",
              "",
              "RETURN ",
              "End_",
              ""
            ],
            "formatString": "hh:nn:ss",
            "lineageTag": "725e6fcf-9d32-48bb-a2c9-f1bb4c86efe9"
          },
          {
            "name": "Carriers Onboarded MTD %",
            "displayFolder": "***Undocumented***",
            "expression": "DIVIDE([Carriers Onboarded MTD] , [Count of Orders Covered MTD])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "2e304744-a36a-4f4c-a995-6d531c7776cf"
          },
          {
            "name": "Carriers Onboarded MTD 1MA %",
            "displayFolder": "***Undocumented***",
            "expression": "DIVIDE([Carriers Onboarded MTD 1MA] , [Count of Orders Covered MTD 1MA])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "7f3145a0-a933-4bb0-98f3-28a0a4861a44"
          },
          {
            "name": "Carriers Onboarded MOM MTD %",
            "displayFolder": "***Undocumented***",
            "expression": "([Carriers Onboarded MTD %]-[Carriers Onboarded MTD 1MA %])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "f4faa457-10fb-4eb2-b777-0ee05355ad01"
          },
          {
            "name": "Carriers Onboarded 1MA %",
            "displayFolder": "***Undocumented***",
            "expression": "DIVIDE([Carriers Onboarded 1MA] , [Count of Orders Covered 1MA])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "36f0aa91-83ea-430e-a00b-a52b6acb1858"
          },
          {
            "name": "Carriers Onboarded 2MA %",
            "displayFolder": "***Undocumented***",
            "expression": "DIVIDE([Carriers Onboarded 2MA] , [Count of Orders Covered 2MA])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "d8116683-9f89-42ef-86de-836c060cdeee"
          },
          {
            "name": "Carriers Onboarded MOM 1MA %",
            "displayFolder": "***Undocumented***",
            "expression": "[Carriers Onboarded 1MA %]-[Carriers Onboarded 2MA %]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "2b56f51c-b98c-42f7-a26f-761b4b5c9b09"
          },
          {
            "name": "Commision Rate",
            "displayFolder": "Commission Measures",
            "expression": [
              "",
              "Var Margin= [McLeod Margin]",
              "",
              "Var Commission_pre_august_first_twenty_three= ",
              "IF(Margin>=20000,1875+((Margin-19999)*.175),",
              "IF(Margin>=15000,1125+((Margin-14999)*.15),",
              "IF(Margin>=10000,500+((Margin-9999)*.125),",
              "IF(Margin>=5000,((Margin-4999)*.1),",
              "0))))",
              "",
              "Var commission_post_august_first_twenty_three=",
              "IF(margin>=200000,44626+((margin-199999)*.3),",
              "IF(margin>=150000,30876+((margin-149999)*.275),",
              "IF(margin>=100000,18376+((margin-99999)*.25),",
              "IF(margin>=50000,7126+((margin-49999)*.225),",
              "IF(margin>=20000,1875+((margin-19999)*.175),",
              "IF(Margin>=15000,1125+((Margin-14999)*.15),",
              "IF(Margin>=10000,500+((Margin-9999)*.125),",
              "IF(Margin>=5000,((Margin-4999)*.1),",
              "0))))))))",
              "",
              "Var commission_rate=",
              "IF(MIN('Calendar'[Date])<=45138,Commission_pre_august_first_twenty_three,commission_post_august_first_twenty_three)",
              "",
              "Return ",
              "commission_rate"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "94c8588a-bac4-4bce-86bf-381940bbff76"
          },
          {
            "name": "10% Commission",
            "displayFolder": "Commission Measures",
            "expression": "[Margin]*.1",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "lineageTag": "6ce55daa-86cc-4dee-af9d-e951b1729375"
          },
          {
            "name": "Staff Turnover",
            "description": "Counts the Rows of the Employee Table whose termination date are >= min(date), termination date <= max(date), and termination date are not blank",
            "displayFolder": "HR",
            "expression": [
              "",
              "CALCULATE(",
              "    COUNTROWS(employees),",
              "    FILTER(VALUES(employees[Termination Date]),employees[Termination Date]>=MIN('calendar'[Date])),",
              "    employees[Termination Date]<>BLANK(),",
              "    FILTER(employees,employees[Termination Date]<=MAX('calendar'[Date])))"
            ],
            "formatString": "0",
            "lineageTag": "7658f84d-4e42-4fde-9cf7-1de7446a2692"
          },
          {
            "name": "Current Staff",
            "displayFolder": "HR",
            "expression": [
              "",
              "CALCULATE(",
              "    COUNTROWS(employees),",
              "    FILTER(VALUES(employees[Hire Date]),employees[Hire Date] <= MAX('calendar'[Date])),",
              "    FILTER(VALUES(employees[Termination Date]), OR(employees[Termination Date] >= MIN('calendar'[Date]), ISBLANK(employees[Termination Date]))))"
            ],
            "formatString": "0",
            "lineageTag": "d7380fe7-e2c8-43e0-a9e2-a141a474a642"
          },
          {
            "name": "Avg Monthy Head Count",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "HR",
            "expression": [
              "",
              "AVERAGEX(",
              "    SUMMARIZE(",
              "        'Calendar',",
              "        'Calendar'[Month / Year],",
              "        \"avg head count\",[Current Staff]",
              "    ),",
              "    [avg head count]",
              ")"
            ],
            "lineageTag": "c88a84f8-dc1f-4671-b100-1703bbe76197"
          },
          {
            "name": "Turnover Rate",
            "displayFolder": "HR",
            "expression": "DIVIDE([Staff Turnover],[Avg Monthy Head Count])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "13529256-6b8e-40f3-a64c-fc49fc4483b7"
          },
          {
            "name": "Turnover Rate 12 Months Prior",
            "displayFolder": "HR",
            "expression": "CALCULATE([Turnover Rate],DATEADD('Calendar'[Date],-12,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "612467f9-8b6f-477e-80ea-a4c97c1f50b7"
          },
          {
            "name": "Turnover YOY Variance",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "HR",
            "expression": "[Turnover Rate]-[Turnover Rate 12 Months Prior]",
            "lineageTag": "f092ff6e-93cb-49a8-8797-ef8fc0d7fc94"
          },
          {
            "name": "Avg Monthly Staff Turnover",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "displayFolder": "HR",
            "expression": [
              "",
              "AVERAGEX(",
              "    SUMMARIZE(",
              "        'Calendar',",
              "        'Calendar'[Month / Year],",
              "        \"avg staff turnover\",[Staff Turnover]",
              "    ),",
              "    [avg staff turnover]",
              ")"
            ],
            "lineageTag": "5e22ca9d-baa3-46d7-9a14-e2e56fae5781"
          },
          {
            "name": "Avg Monthly Turnover Rate",
            "displayFolder": "HR",
            "expression": "DIVIDE([Avg Monthly Staff Turnover],[Avg Monthy Head Count])",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "227273ed-bcdd-436a-b7e7-dc0d6c1f66ce"
          },
          {
            "name": "Average Monthly Turnover Rate 12 Months Prior",
            "displayFolder": "HR",
            "expression": "CALCULATE([Avg Monthly Turnover Rate],DATEADD('Calendar'[Date],-12,MONTH))",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "0fa363d3-2315-4024-b467-0c472a329097"
          },
          {
            "name": "Average Monthly YOY Variance",
            "displayFolder": "HR",
            "expression": "[Avg monthly turnover Rate]-[Average Monthly Turnover Rate 12 Months Prior]",
            "formatString": "0.00%;-0.00%;0.00%",
            "lineageTag": "dec11f80-26c6-427a-bc20-c32e30c7e47b"
          },
          {
            "name": "Ops Team Move Date",
            "displayFolder": "HR\\Move Dates",
            "expression": "SUM(employees[Hire Date])+14",
            "formatString": "Short Date",
            "lineageTag": "6a435a0c-2890-47ad-a4c3-6245e624100d"
          },
          {
            "name": "SDR Move Date new",
            "displayFolder": "HR\\Move Dates",
            "expression": [
              "",
              "Var job_history_sdr_date = ",
              "    CALCULATE(",
              "        MIN(job_history[Job Start Date]),",
              "        FILTER(job_history,job_history[Division]=\"SDR Team\"))",
              "Var hire_date_plus_90 = MIN(employees[Hire Date])+90",
              "Var first_monday_of_hire_plus_90 = CEILING(EOMONTH(hire_date_plus_90,-1)-1,7)+2",
              "Var first_monday_of_next_month = CEILING(EOMONTH(hire_date_plus_90,-0)-1,7)+2",
              "Var employee_start_day_of_month = DAY(MIN(employees[Hire Date]))",
              "Var estamate_of_sdr_move_date = ",
              "    IF(employee_start_day_of_month>15,",
              "    first_monday_of_next_month,",
              "    first_monday_of_hire_plus_90",
              "    )",
              "Var ifs = ",
              "    IF(job_history_sdr_date=BLANK(),",
              "    estamate_of_sdr_move_date,",
              "    job_history_sdr_date",
              "    )",
              "",
              "RETURN",
              "FORMAT(ifs,\"Short Date\")"
            ],
            "lineageTag": "0845dcef-c9b8-48b5-b1fe-8a8c2835509c"
          },
          {
            "name": "D-Team Move Date",
            "displayFolder": "HR\\Move Dates",
            "expression": [
              "",
              "Var job_history_d_team_date = ",
              "    CALCULATE(",
              "        MIN(job_history[Job Start Date]),",
              "        FILTER(job_history,job_history[Division]=\"Development Team Sales\"))",
              "Var sdr_date_plus_90 =[SDR Move Date new]+100",
              "Var estemate_of_d_team_move_date= CEILING(EOMONTH(sdr_date_plus_90,-1)-1,7)+2",
              "",
              "Var ifs = ",
              "    IF(job_history_d_team_date=BLANK(),",
              "    estemate_of_d_team_move_date,",
              "    job_history_d_team_date",
              "    )",
              "",
              "RETURN",
              "FORMAT(ifs,\"Short Date\")"
            ],
            "lineageTag": "fb8f6181-cc37-44e9-ae33-d406161a02f9"
          },
          {
            "name": "Henry Move Date",
            "displayFolder": "HR\\Move Dates",
            "expression": [
              "",
              "Var JobHirstoryHenryDate = ",
              "     CALCULATE(",
              "        MIN(job_history[Job Start Date]),",
              "        FILTER(job_history,job_history[Division]=\"Logistics Advisor Sales (Formerly Henry)\"))",
              "Var StartOfNextMonth = CALCULATE(EOMONTH(MIN(employees[Hire Date]),0)+1,DATEADD(employees[Hire Date],365,DAY))",
              "Var ifs = IF(JobHirstoryHenryDate=BLANK(),StartOfNextMonth,JobHirstoryHenryDate)",
              "",
              "Return",
              "ifs"
            ],
            "formatString": "General Date",
            "lineageTag": "2d517e8d-254a-4051-860e-cca595a4c3db"
          },
          {
            "name": "Test",
            "displayFolder": "***Undocumented***",
            "expression": "[Margin] * 2",
            "formatString": "0",
            "lineageTag": "cf9f5ee9-9765-40fb-9125-0b911e84a514"
          }
        ],
        "partitions": [
          {
            "name": "measures_",
            "mode": "import",
            "source": {
              "expression": "Row(\"Column\", BLANK())",
              "type": "calculated"
            }
          }
        ]
      },
      {
        "name": "movements",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Brokerage Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ea49bc2b-7634-4de6-af0d-d23cd04d7e89",
            "sourceColumn": "Brokerage Status",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Actual Arrival Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "c2a9b9d8-e393-47a1-b98e-007579abf8aa",
            "sourceColumn": "Delivery Actual Arrival Date",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Actual Arrival Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "5b27ea37-5b17-4bcd-8ced-8201c0db89ca",
            "sourceColumn": "Delivery Actual Arrival Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Actual Departure Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "86ab6059-c350-4ff4-8ad4-b9cb021b3a4f",
            "sourceColumn": "Delivery Actual Departure Date",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Actual Departure Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "ba46cf7e-ba54-4f9a-b531-6393cb48c399",
            "sourceColumn": "Delivery Actual Departure Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Move Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "35924aa3-592a-456f-8b0b-4bffff5931d2",
            "sourceColumn": "Move Status",
            "summarizeBy": "none"
          },
          {
            "name": "Movement ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c3f310e7-68d3-4e64-9411-36c7525db9f1",
            "sourceColumn": "Movement ID",
            "summarizeBy": "none"
          },
          {
            "name": "Order ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "86732f5e-75d0-43c9-b50e-7b300bdaf8e3",
            "sourceColumn": "Order ID",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Actual Arrival Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "84910b8d-7ee4-4a63-875c-11dabd5ef0b0",
            "sourceColumn": "Ship Actual Arrival Date",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Actual Arrival Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "b12373c6-e271-4107-8846-4c5ebdd992eb",
            "sourceColumn": "Ship Actual Arrival Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Actual Departure Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "b18a5a68-b65a-429c-9878-59eb5b088ee8",
            "sourceColumn": "Ship Actual Departure Date",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Actual Departure Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "20b6ff09-7dc2-41b1-9b2b-9536a2d38b1a",
            "sourceColumn": "Ship Actual Departure Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Carrier ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bbae78c8-1097-4bbd-9290-f714df0ba2bf",
            "sourceColumn": "Carrier ID",
            "summarizeBy": "none"
          },
          {
            "name": "Projected Total Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "cec8dfcf-0224-49f5-9d29-9e917d665669",
            "sourceColumn": "Projected Total Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Consignee City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8bce8dfe-a7a5-4fb6-ab5e-682d47f63a1a",
            "sourceColumn": "Consignee City",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bef42537-3c48-4d5c-82c4-bd44e75f02d8",
            "sourceColumn": "Consignee State",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f204b303-1c32-45c9-ad6c-5f76c29258e4",
            "sourceColumn": "Consignee Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "057d3803-af11-49f8-8b2c-566dec84f89d",
            "sourceColumn": "Shipper City",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c19b1ffc-e85c-4c6c-9556-38277143699a",
            "sourceColumn": "Shipper State",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e4dd531c-3bb7-4ae9-833c-df016b3168ca",
            "sourceColumn": "Shipper Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee 3 Digit Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "84a0e297-2139-4751-9a5c-9975e2980f66",
            "sourceColumn": "Consignee 3 Digit Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper 3 Digit Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "506e7b8a-24af-4fbd-975c-12a50ea931cc",
            "sourceColumn": "Shipper 3 Digit Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Max Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ad84a0d5-6338-4426-a4bc-c7dc80b7f4a2",
            "sourceColumn": "Max Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Projected Freight Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0326689d-0b60-4b97-a44d-b0c683d976d5",
            "sourceColumn": "Projected Freight Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Projected Other Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e0ffefe6-9f0c-4a0d-b663-5986aa276120",
            "sourceColumn": "Projected Other Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Target Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ceed4756-6382-4ed3-a359-99ec977d0172",
            "sourceColumn": "Target Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Dispatcher Id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0802d286-e142-4336-bbd6-93589e459fbb",
            "sourceColumn": "Dispatcher Id",
            "summarizeBy": "none"
          },
          {
            "name": "DNC",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "e8e9b516-094a-4927-bca0-9f120c9c20c0",
            "sourceColumn": "DNC",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "cae9df8f-1cd9-408a-8fa4-aab0f7d1154d",
        "partitions": [
          {
            "name": "movements",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = AnalysisServices.Databases(\"bl-mcbiserver\", [TypedMeasureColumns=true, Implementation=\"2.0\"]),",
                "    McLeodIQ_2019_Powerbroker = Source{[Name=\"McLeodIQ_2019_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker1 = McLeodIQ_2019_Powerbroker{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker2 = McLeodIQ_Powerbroker1{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(McLeodIQ_Powerbroker2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[Order]\", {\"[Order].[Brokerage Status].[Brokerage Status]\", \"[Order].[Delivery Actual Arrival Date].[Delivery Actual Arrival Date]\", \"[Order].[Delivery Actual Arrival Date Time].[Delivery Actual Arrival Date Time]\", \"[Order].[Delivery Actual Departure Date].[Delivery Actual Departure Date]\", \"[Order].[Delivery Actual Departure Date Time].[Delivery Actual Departure Date Time]\", \"[Order].[Dispatcher].[Dispatcher]\", \"[Order].[Move Status].[Move Status]\", \"[Order].[Movement ID].[Movement ID]\", \"[Order].[Order ID].[Order ID]\", \"[Order].[Ship Actual Arrival Date].[Ship Actual Arrival Date]\", \"[Order].[Ship Actual Arrival Date Time].[Ship Actual Arrival Date Time]\", \"[Order].[Ship Actual Departure Date].[Ship Actual Departure Date]\", \"[Order].[Ship Actual Departure Date Time].[Ship Actual Departure Date Time]\"}, {\"Order.Brokerage Status\", \"Order.Delivery Actual Arrival Date\", \"Order.Delivery Actual Arrival Date Time\", \"Order.Delivery Actual Departure Date\", \"Order.Delivery Actual Departure Date Time\", \"Order.Dispatcher\", \"Order.Move Status\", \"Order.Movement ID\", \"Order.Order ID\", \"Order.Ship Actual Arrival Date\", \"Order.Ship Actual Arrival Date Time\", \"Order.Ship Actual Departure Date\", \"Order.Ship Actual Departure Date Time\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Carrier]\", {\"[Carrier].[Carrier ID].[Carrier ID]\"}, {\"Carrier.Carrier ID\"}},",
                "            {Cube.AddMeasureColumn, \"Projected Total Carrier Pay\", \"[Measures].[Projected Total Carrier Pay]\"},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Consignee]\", {\"[Consignee].[Consignee.Location City].[Consignee.Location City]\", \"[Consignee].[Consignee.Location State].[Consignee.Location State]\", \"[Consignee].[Consignee.Location Zip].[Consignee.Location Zip]\"}, {\"Consignee.Consignee.Location City\", \"Consignee.Consignee.Location State\", \"Consignee.Consignee.Location Zip\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Shipper]\", {\"[Shipper].[Shipper.Location City].[Shipper.Location City]\", \"[Shipper].[Shipper.Location State].[Shipper.Location State]\", \"[Shipper].[Shipper.Location Zip].[Shipper.Location Zip]\"}, {\"Shipper.Shipper.Location City\", \"Shipper.Shipper.Location State\", \"Shipper.Shipper.Location Zip\"}},",
                "            {Cube.AddMeasureColumn, \"Max Pay\", \"[Measures].[Max Pay]\"},",
                "            {Cube.AddMeasureColumn, \"Projected Freight Carrier Pay\", \"[Measures].[Projected Freight Carrier Pay]\"},",
                "            {Cube.AddMeasureColumn, \"Projected Other Carrier Pay\", \"[Measures].[Projected Other Carrier Pay]\"},",
                "            {Cube.AddMeasureColumn, \"Target Pay\", \"[Measures].[Target Pay]\"}",
                "        }),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Items\",{{\"Order.Brokerage Status\", \"Brokerage Status\"}, {\"Order.Delivery Actual Arrival Date\", \"Delivery Actual Arrival Date\"}, {\"Order.Delivery Actual Arrival Date Time\", \"Delivery Actual Arrival Date Time\"}, {\"Order.Delivery Actual Departure Date\", \"Delivery Actual Departure Date\"}, {\"Order.Delivery Actual Departure Date Time\", \"Delivery Actual Departure Date Time\"}, {\"Order.Dispatcher\", \"Dispatcher\"}, {\"Order.Move Status\", \"Move Status\"}, {\"Order.Movement ID\", \"Movement ID\"}, {\"Order.Order ID\", \"Order ID\"}, {\"Order.Ship Actual Arrival Date\", \"Ship Actual Arrival Date\"}, {\"Order.Ship Actual Arrival Date Time\", \"Ship Actual Arrival Date Time\"}, {\"Order.Ship Actual Departure Date\", \"Ship Actual Departure Date\"}, {\"Order.Ship Actual Departure Date Time\", \"Ship Actual Departure Date Time\"}, {\"Carrier.Carrier ID\", \"Carrier ID\"}, {\"Consignee.Consignee.Location City\", \"Consignee City\"}, {\"Consignee.Consignee.Location State\", \"Consignee State\"}, {\"Consignee.Consignee.Location Zip\", \"Consignee Zip\"}, {\"Shipper.Shipper.Location City\", \"Shipper City\"}, {\"Shipper.Shipper.Location State\", \"Shipper State\"}, {\"Shipper.Shipper.Location Zip\", \"Shipper Zip\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Delivery Actual Arrival Date\", type date}, {\"Delivery Actual Arrival Date Time\", type time}, {\"Delivery Actual Departure Date\", type date}, {\"Delivery Actual Departure Date Time\", type time}, {\"Ship Actual Arrival Date\", type date}, {\"Ship Actual Arrival Date Time\", type time}, {\"Ship Actual Departure Date\", type date}, {\"Ship Actual Departure Date Time\", type time}}),",
                "    #\"Inserted First Characters\" = Table.AddColumn(#\"Changed Type\", \"First Characters\", each Text.Start([Consignee Zip], 3), type text),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Inserted First Characters\",{{\"First Characters\", \"Consignee 3 Digit Zip\"}}),",
                "    #\"Inserted First Characters1\" = Table.AddColumn(#\"Renamed Columns1\", \"First Characters\", each Text.Start([Shipper Zip], 3), type text),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Inserted First Characters1\",{{\"First Characters\", \"Shipper 3 Digit Zip\"}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Renamed Columns2\",{{\"Movement ID\", Int64.Type}}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type2\", {\"Movement ID\"}, parade_orders, {\"movement_id\"}, \"parade_orders\", JoinKind.LeftOuter),",
                "    #\"Expanded parade_orders\" = Table.ExpandTableColumn(#\"Merged Queries\", \"parade_orders\", {\"id\"}, {\"parade_orders.id\"}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Expanded parade_orders\", \"Dispatcher Id\", each if [parade_orders.id] = null then [Dispatcher] else \"parade\"),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Conditional Column\",{\"Dispatcher\", \"parade_orders.id\"}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Removed Columns\", {\"Movement ID\"}, dnc, {\"DNC\"}, \"dnc\", JoinKind.LeftOuter),",
                "    #\"Expanded dnc\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"dnc\", {\"DNC\"}, {\"dnc.DNC\"}),",
                "    #\"Added Conditional Column1\" = Table.AddColumn(#\"Expanded dnc\", \"DNC\", each if [dnc.DNC] = null then false else true),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Conditional Column1\",{\"dnc.DNC\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Removed Columns1\",{{\"DNC\", type logical}}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Changed Type1\", {\"Movement ID\"})",
                "in",
                "    #\"Removed Duplicates\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "orders",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Consignee City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "26b0e2d5-56ab-4666-af54-64307378ff30",
            "sourceColumn": "Consignee City",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "451f5dc2-9995-467a-8062-cd23a758ceaf",
            "sourceColumn": "Consignee Name",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4738e4d8-1daa-41b6-9b00-d484a664e258",
            "sourceColumn": "Consignee State",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "efd2687e-4b5d-48ef-94f0-7d47addf9a17",
            "sourceColumn": "Consignee Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Customer ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "eaeb8042-279e-4398-949f-51b5322eb08f",
            "sourceColumn": "Customer ID",
            "summarizeBy": "none"
          },
          {
            "name": "Customer PO Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "84fb1e78-92c9-4418-878c-3c2ac0f62336",
            "sourceColumn": "Customer PO Number",
            "summarizeBy": "none"
          },
          {
            "name": "BOL Received",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4943948e-8ad9-4fed-95fd-70377c4d2b6c",
            "sourceColumn": "BOL Received",
            "summarizeBy": "none"
          },
          {
            "name": "Commodity ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "94034ab7-a3ff-4a2e-afff-98b89e5a0d21",
            "sourceColumn": "Commodity ID",
            "summarizeBy": "none"
          },
          {
            "name": "BOL Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "35244911-5913-4e3a-a797-0d34cf5f6b6e",
            "sourceColumn": "BOL Number",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Scheduled Early Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "f820712d-6ebc-47dd-977e-810048d4b96e",
            "sourceColumn": "Delivery Scheduled Early Date",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Scheduled Early Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "8cf28e88-a116-4822-91a0-a6b1d6ed6cc1",
            "sourceColumn": "Delivery Scheduled Early Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Scheduled Late Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "7851a6a1-bfab-498d-b6a7-ebc1d59c532e",
            "sourceColumn": "Delivery Scheduled Late Date",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Scheduled Late Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "297eaf4a-e860-415a-8a98-3544d75776c4",
            "sourceColumn": "Delivery Scheduled Late Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Entered By",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b2c78712-b7bc-40af-a4fa-a1216a2fa320",
            "sourceColumn": "Entered By",
            "summarizeBy": "none"
          },
          {
            "name": "Entry Method",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c9e3e625-b5ee-4b97-8dfd-931f8b572390",
            "sourceColumn": "Entry Method",
            "summarizeBy": "none"
          },
          {
            "name": "Order ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5e82bff2-84ba-4cb4-934e-96e024eddd4f",
            "sourceColumn": "Order ID",
            "summarizeBy": "none"
          },
          {
            "name": "Order Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "48bdeb5e-8a54-470b-8be9-8f9f1790648c",
            "sourceColumn": "Order Status",
            "summarizeBy": "none"
          },
          {
            "name": "Order Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f24b7619-858c-4281-bc37-02fa368a59b9",
            "sourceColumn": "Order Type",
            "summarizeBy": "none"
          },
          {
            "name": "Revenue Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f50b5671-7823-4196-b4c4-dc620c4957d3",
            "sourceColumn": "Revenue Code",
            "summarizeBy": "count"
          },
          {
            "name": "Ship Scheduled Early Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "9fa7115b-0621-4adb-87f0-b07439c1be43",
            "sourceColumn": "Ship Scheduled Early Date",
            "summarizeBy": "none"
          },
          {
            "name": "Scheduled Early Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "cb2d3265-4b52-463e-b912-a0e85e261cef",
            "sourceColumn": "Scheduled Early Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Scheduled Late Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "154b8824-f51b-4d85-8019-203571602490",
            "sourceColumn": "Ship Scheduled Late Date",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Scheduled Late Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "db435d1b-376b-414e-861e-64118767ec7f",
            "sourceColumn": "Ship Scheduled Late Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Trailer Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "434f877a-1a8a-42f4-a437-275a25b2ff3b",
            "sourceColumn": "Trailer Type",
            "summarizeBy": "none"
          },
          {
            "name": "Salesperson ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5974c6ee-f658-4120-b6b6-090687d4ff47",
            "sourceColumn": "Salesperson ID",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e863c43c-d200-4ee0-8d41-ccd3d2ce154b",
            "sourceColumn": "Shipper City",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper.Shipper.Location Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "71f4cf8e-9067-447d-b4ed-4ab8cce4a497",
            "sourceColumn": "Shipper.Shipper.Location Name",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7b7acf0d-cea5-4004-949a-d140572b7c85",
            "sourceColumn": "Shipper State",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "862f2334-462e-4a7d-ba0a-45de61aca3b2",
            "sourceColumn": "Shipper Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Cases Pieces",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cf7f7f86-6a77-45d8-aa3d-ec08c926216c",
            "sourceColumn": "Cases Pieces",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Charges",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "a1ae526a-f268-48be-a677-0835ccfc4148",
            "sourceColumn": "Total Charges",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Other Charges",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "197b1261-6a87-40ed-adf4-e0ed43149eea",
            "sourceColumn": "Total Other Charges",
            "summarizeBy": "sum"
          },
          {
            "name": "Projected Freight Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "bb26b761-205f-41a9-8fe1-c3916397c7bd",
            "sourceColumn": "Projected Freight Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Projected Other Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "27d407fd-1c53-4101-9ba8-be340f977427",
            "sourceColumn": "Projected Other Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Projected Total Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c1bf5929-a72a-4595-ad6b-8fdf7a900b0f",
            "sourceColumn": "Projected Total Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Linehaul Charges",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "2db7e680-af95-42f6-9cac-64845d42d464",
            "sourceColumn": "Linehaul Charges",
            "summarizeBy": "sum"
          },
          {
            "name": "Bill Distance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e9d9f68a-1abc-4ec5-a1ab-e4063775bcda",
            "sourceColumn": "Bill Distance",
            "summarizeBy": "sum"
          },
          {
            "name": "Date Order Entered.Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "a6e9459f-de94-4155-b4b7-8217a1f2876c",
            "sourceColumn": "Date Order Entered.Date",
            "summarizeBy": "none"
          },
          {
            "name": "Lane",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "10f48857-f387-444f-8f50-74854b41d0a2",
            "sourceColumn": "Lane",
            "summarizeBy": "none"
          },
          {
            "name": "Payment Recvd",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ffdf8b90-f98f-4ace-ac16-be2a9e68ddd3",
            "sourceColumn": "Payment Recvd",
            "summarizeBy": "sum"
          },
          {
            "name": "Consignee.Consignee.Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b6e40f71-81b1-453a-8765-b9ae62bb56cc",
            "sourceColumn": "Consignee.Consignee.Location ID",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper.Shipper.Location ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ad2eb186-8cdb-4ad1-9126-166b75e98f50",
            "sourceColumn": "Shipper.Shipper.Location ID",
            "summarizeBy": "none"
          },
          {
            "name": "Weight",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f8138a98-023d-4f1b-bd74-389c65c7929c",
            "sourceColumn": "Weight",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "aa3b9040-5a73-4edf-938f-bd361198cbf4",
        "partitions": [
          {
            "name": "orders",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = AnalysisServices.Databases(\"bl-mcbiserver\", [TypedMeasureColumns=true, Implementation=\"2.0\"]),",
                "    McLeodIQ_2019_Powerbroker = Source{[Name=\"McLeodIQ_2019_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker1 = McLeodIQ_2019_Powerbroker{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker2 = McLeodIQ_Powerbroker1{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(McLeodIQ_Powerbroker2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[Consignee]\", {\"[Consignee].[Consignee.Location City].[Consignee.Location City]\", \"[Consignee].[Consignee.Location ID].[Consignee.Location ID]\", \"[Consignee].[Consignee.Location Name].[Consignee.Location Name]\", \"[Consignee].[Consignee.Location State].[Consignee.Location State]\", \"[Consignee].[Consignee.Location Zip].[Consignee.Location Zip]\"}, {\"Consignee.Consignee.Location City\", \"Consignee.Consignee.Location ID\", \"Consignee.Consignee.Location Name\", \"Consignee.Consignee.Location State\", \"Consignee.Consignee.Location Zip\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Customer]\", {\"[Customer].[Customer ID].[Customer ID]\"}, {\"Customer.Customer ID\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Order]\", {\"[Order].[BOL Number].[BOL Number]\", \"[Order].[BOL Received].[BOL Received]\", \"[Order].[Commodity ID].[Commodity ID]\", \"[Order].[Consignee Reference Number].[Consignee Reference Number]\", \"[Order].[Delivery Scheduled Early Date].[Delivery Scheduled Early Date]\", \"[Order].[Delivery Scheduled Early Date Time].[Delivery Scheduled Early Date Time]\", \"[Order].[Delivery Scheduled Late Date].[Delivery Scheduled Late Date]\", \"[Order].[Delivery Scheduled Late Date Time].[Delivery Scheduled Late Date Time]\", \"[Order].[Entered By].[Entered By]\", \"[Order].[Entry Method].[Entry Method]\", \"[Order].[Order ID].[Order ID]\", \"[Order].[Order Status].[Order Status]\", \"[Order].[Order Type].[Order Type]\", \"[Order].[Revenue Code ID].[Revenue Code ID]\", \"[Order].[Ship Scheduled Early Date].[Ship Scheduled Early Date]\", \"[Order].[Ship Scheduled Early Date Time].[Ship Scheduled Early Date Time]\", \"[Order].[Ship Scheduled Late Date].[Ship Scheduled Late Date]\", \"[Order].[Ship Scheduled Late Date Time].[Ship Scheduled Late Date Time]\", \"[Order].[Trailer Type].[Trailer Type]\"}, {\"Order.BOL Number\", \"Order.BOL Received\", \"Order.Commodity ID\", \"Order.Consignee Reference Number\", \"Order.Delivery Scheduled Early Date\", \"Order.Delivery Scheduled Early Date Time\", \"Order.Delivery Scheduled Late Date\", \"Order.Delivery Scheduled Late Date Time\", \"Order.Entered By\", \"Order.Entry Method\", \"Order.Order ID\", \"Order.Order Status\", \"Order.Order Type\", \"Order.Revenue Code ID\", \"Order.Ship Scheduled Early Date\", \"Order.Ship Scheduled Early Date Time\", \"Order.Ship Scheduled Late Date\", \"Order.Ship Scheduled Late Date Time\", \"Order.Trailer Type\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Salesperson]\", {\"[Salesperson].[Salesperson ID].[Salesperson ID]\"}, {\"Salesperson.Salesperson ID\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Shipper]\", {\"[Shipper].[Shipper.Location City].[Shipper.Location City]\", \"[Shipper].[Shipper.Location ID].[Shipper.Location ID]\", \"[Shipper].[Shipper.Location Name].[Shipper.Location Name]\", \"[Shipper].[Shipper.Location State].[Shipper.Location State]\", \"[Shipper].[Shipper.Location Zip].[Shipper.Location Zip]\"}, {\"Shipper.Shipper.Location City\", \"Shipper.Shipper.Location ID\", \"Shipper.Shipper.Location Name\", \"Shipper.Shipper.Location State\", \"Shipper.Shipper.Location Zip\"}},",
                "            {Cube.AddMeasureColumn, \"Cases Pieces\", \"[Measures].[Cases Pieces]\"},",
                "            {Cube.AddMeasureColumn, \"Total Charges\", \"[Measures].[Total Charges]\"},",
                "            {Cube.AddMeasureColumn, \"Total Other Charges\", \"[Measures].[Total Other Charges]\"},",
                "            {Cube.AddMeasureColumn, \"Projected Freight Carrier Pay\", \"[Measures].[Projected Freight Carrier Pay]\"},",
                "            {Cube.AddMeasureColumn, \"Projected Other Carrier Pay\", \"[Measures].[Projected Other Carrier Pay]\"},",
                "            {Cube.AddMeasureColumn, \"Projected Total Carrier Pay\", \"[Measures].[Projected Total Carrier Pay]\"},",
                "            {Cube.AddMeasureColumn, \"Linehaul Charges\", \"[Measures].[Linehaul Charges]\"},",
                "            {Cube.AddMeasureColumn, \"Bill Distance\", \"[Measures].[Bill Distance]\"},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Date Order Entered]\", {\"[Date Order Entered].[Date Order Entered.Date].[Date Order Entered.Date]\"}, {\"Date Order Entered.Date Order Entered.Date\"}},",
                "            {Cube.AddMeasureColumn, \"Payment Recvd\", \"[Measures].[Payment Recvd]\"},",
                "            {Cube.AddMeasureColumn, \"Weight\", \"[Measures].[Weight]\"}",
                "        }),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Items\",{{\"Consignee.Consignee.Location City\", \"Consignee City\"}, {\"Consignee.Consignee.Location Name\", \"Consignee Name\"}, {\"Consignee.Consignee.Location State\", \"Consignee State\"}, {\"Consignee.Consignee.Location Zip\", \"Consignee Zip\"}, {\"Customer.Customer ID\", \"Customer ID\"}, {\"Order.BOL Number\", \"Customer PO Number\"}, {\"Order.BOL Received\", \"BOL Received\"}, {\"Order.Commodity ID\", \"Commodity ID\"}, {\"Order.Consignee Reference Number\", \"BOL Number\"}, {\"Order.Delivery Scheduled Early Date\", \"Delivery Scheduled Early Date\"}, {\"Order.Delivery Scheduled Early Date Time\", \"Delivery Scheduled Early Date Time\"}, {\"Order.Delivery Scheduled Late Date\", \"Delivery Scheduled Late Date\"}, {\"Order.Delivery Scheduled Late Date Time\", \"Delivery Scheduled Late Date Time\"}, {\"Order.Entered By\", \"Entered By\"}, {\"Order.Entry Method\", \"Entry Method\"}, {\"Order.Order ID\", \"Order ID\"}, {\"Order.Order Status\", \"Order Status\"}, {\"Order.Revenue Code ID\", \"Revenue Code\"}, {\"Order.Ship Scheduled Early Date\", \"Ship Scheduled Early Date\"}, {\"Order.Ship Scheduled Early Date Time\", \"Scheduled Early Date Time\"}, {\"Order.Ship Scheduled Late Date\", \"Ship Scheduled Late Date\"}, {\"Order.Ship Scheduled Late Date Time\", \"Ship Scheduled Late Date Time\"}, {\"Order.Trailer Type\", \"Trailer Type\"}, {\"Salesperson.Salesperson ID\", \"Salesperson ID\"}, {\"Shipper.Shipper.Location City\", \"Shipper City\"}, {\"Shipper.Shipper.Location State\", \"Shipper State\"}, {\"Shipper.Shipper.Location Zip\", \"Shipper Zip\"}, {\"Order.Order Type\", \"Order Type\"}, {\"Date Order Entered.Date Order Entered.Date\", \"Date Order Entered.Date\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Delivery Scheduled Early Date\", type date}, {\"Delivery Scheduled Early Date Time\", type time}, {\"Delivery Scheduled Late Date\", type date}, {\"Delivery Scheduled Late Date Time\", type time}, {\"Ship Scheduled Early Date\", type date}, {\"Scheduled Early Date Time\", type time}, {\"Ship Scheduled Late Date\", type date}, {\"Ship Scheduled Late Date Time\", type time}, {\"Revenue Code\", Int64.Type}, {\"Date Order Entered.Date\", type date}}),",
                "    #\"Trimmed Text\" = Table.TransformColumns(#\"Changed Type\",{{\"Consignee State\", Text.Trim, type text}, {\"Consignee City\", Text.Trim, type text}, {\"Shipper State\", Text.Trim, type text}, {\"Shipper City\", Text.Trim, type text}}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Trimmed Text\", \"Consignee City\", \"Consignee City - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"Consignee State\", \"Consignee State - Copy\"),",
                "    #\"Merged Columns\" = Table.CombineColumns(#\"Duplicated Column1\",{\"Consignee City - Copy\", \"Consignee State - Copy\"},Combiner.CombineTextByDelimiter(\", \", QuoteStyle.None),\"Consignee City, State\"),",
                "    #\"Duplicated Column2\" = Table.DuplicateColumn(#\"Merged Columns\", \"Shipper City\", \"Shipper City - Copy\"),",
                "    #\"Duplicated Column3\" = Table.DuplicateColumn(#\"Duplicated Column2\", \"Shipper State\", \"Shipper State - Copy\"),",
                "    #\"Merged Columns1\" = Table.CombineColumns(#\"Duplicated Column3\",{\"Shipper City - Copy\", \"Shipper State - Copy\"},Combiner.CombineTextByDelimiter(\", \", QuoteStyle.None),\"Shipper City, State\"),",
                "    #\"Merged Columns2\" = Table.CombineColumns(#\"Merged Columns1\",{\"Shipper City, State\", \"Consignee City, State\"},Combiner.CombineTextByDelimiter(\" - \", QuoteStyle.None),\"Lane\"),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Merged Columns2\",{{\"Lane\", Text.Upper, type text}})",
                "in",
                "    #\"Uppercased Text\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "crm_customer_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Customer ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0037c396-c76d-4c0f-97ef-2530d6fc629d",
            "sourceColumn": "Customer ID",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4458d786-5a20-4f6e-ba5e-7407c024a222",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0e0f67f9-6182-4e36-b014-24e03e62ce7c",
            "sourceColumn": "Customer Name",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Bridge ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e834a5e7-96bd-4e08-b739-20353ab1a8d9",
            "sourceColumn": "Customer Bridge ID",
            "summarizeBy": "none"
          },
          {
            "name": "City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f1966a9c-3199-473f-af05-6289f8fd6097",
            "sourceColumn": "City",
            "summarizeBy": "none"
          },
          {
            "name": "State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6093c3dd-902d-4961-be9b-603ebcc36275",
            "sourceColumn": "State",
            "summarizeBy": "none"
          },
          {
            "name": "Zip Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "749334e4-bdc5-45b8-a56f-ee82cc025079",
            "sourceColumn": "Zip Code",
            "summarizeBy": "none"
          },
          {
            "name": "Date Added",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "116af2b0-8133-4bfa-a5d9-7570be2ae072",
            "sourceColumn": "Date Added",
            "summarizeBy": "none"
          },
          {
            "name": "Change Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "db7ddb3e-b198-4370-99b5-b4f14c35cbf9",
            "sourceColumn": "Change Date",
            "summarizeBy": "none"
          },
          {
            "name": "Pay Terms",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "31052aba-47da-427f-b39f-c7123fceedb6",
            "sourceColumn": "Pay Terms",
            "summarizeBy": "sum"
          },
          {
            "name": "Customer.Credit Limit",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "73559a05-eb60-465d-9ac4-30f9f279dae3",
            "sourceColumn": "Customer.Credit Limit",
            "summarizeBy": "none"
          },
          {
            "name": "Billed Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8d005452-425f-4b6f-925e-0875dcd8a900",
            "sourceColumn": "Billed Orders",
            "summarizeBy": "sum"
          },
          {
            "name": "Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "79dee731-057a-4e84-9e68-bf9fad69f3ba",
            "sourceColumn": "Orders",
            "summarizeBy": "sum"
          },
          {
            "name": "Average Days To Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "67ebec48-f4c3-4107-9550-84ce46c2cc1e",
            "sourceColumn": "Average Days To Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Customer.Obsolete Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "20613f96-10da-4db1-9210-fd52da005770",
            "sourceColumn": "Customer.Obsolete Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "b98d9d2d-73b0-4ee7-9962-b97515159738",
        "partitions": [
          {
            "name": "crm_customer_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = AnalysisServices.Databases(\"bl-mcbiserver\", [TypedMeasureColumns=true, Implementation=\"2.0\"]),",
                "    McLeodIQ_2019_Powerbroker = Source{[Name=\"McLeodIQ_2019_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker1 = McLeodIQ_2019_Powerbroker{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker2 = McLeodIQ_Powerbroker1{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(McLeodIQ_Powerbroker2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[Customer]\", {\"[Customer].[Bill Due Days].[Bill Due Days]\", \"[Customer].[Credit Limit].[Credit Limit]\", \"[Customer].[Credit Status].[Credit Status]\", \"[Customer].[Customer ID].[Customer ID]\", \"[Customer].[Customer Name].[Customer Name]\", \"[Customer].[Customer.Bridge ID].[Customer.Bridge ID]\", \"[Customer].[Customer.City].[Customer.City]\", \"[Customer].[Customer.State].[Customer.State]\", \"[Customer].[Customer.Zip Code].[Customer.Zip Code]\", \"[Customer].[Date Added].[Date Added]\", \"[Customer].[Obsolete Date].[Obsolete Date]\"}, {\"Customer.Bill Due Days\", \"Customer.Credit Limit\", \"Customer.Credit Status\", \"Customer.Customer ID\", \"Customer.Customer Name\", \"Customer.Customer.Bridge ID\", \"Customer.Customer.City\", \"Customer.Customer.State\", \"Customer.Customer.Zip Code\", \"Customer.Date Added\", \"Customer.Obsolete Date\"}},",
                "            {Cube.AddMeasureColumn, \"Billed Orders\", \"[Measures].[Billed Orders]\"},",
                "            {Cube.AddMeasureColumn, \"Orders\", \"[Measures].[Orders]\"}",
                "        }),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Added Items\",{{\"Customer.Bill Due Days\", \"Pay Terms\"}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Renamed Columns3\",{{\"Customer.Customer ID\", \"Customer ID\"}, {\"Customer.Credit Status\", \"Status\"}, {\"Customer.Customer Name\", \"Customer Name\"}}),",
                "    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Customer.Obsolete Date\", type datetime}}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Changed Type3\",{{\"Customer ID\", Order.Ascending}, {\"Customer.Obsolete Date\", Order.Ascending}}),",
                "    #\"Removed Duplicates1\" = Table.Distinct(#\"Sorted Rows\", {\"Customer ID\"}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Removed Duplicates1\",{\"Customer ID\", \"Status\", \"Customer Name\", \"Customer.Customer.Bridge ID\", \"Customer.Customer.City\", \"Customer.Customer.State\", \"Customer.Customer.Zip Code\", \"Customer.Date Added\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Reordered Columns\",{{\"Customer.Customer.Bridge ID\", \"Customer Bridge ID\"}, {\"Customer.Customer.City\", \"City\"}, {\"Customer.Customer.State\", \"State\"}, {\"Customer.Customer.Zip Code\", \"Zip Code\"}, {\"Customer.Date Added\", \"Date Added\"}}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Renamed Columns1\", {\"Customer ID\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Duplicates\",{{\"Date Added\", type date}}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type\", {\"Customer ID\"}, salesperson_change, {\"Customer ID\"}, \"salesperson_change\", JoinKind.LeftOuter),",
                "    #\"Expanded salesperson_change\" = Table.ExpandTableColumn(#\"Merged Queries\", \"salesperson_change\", {\"Change Date\"}, {\"Change Date\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Expanded salesperson_change\",{{\"Pay Terms\", Int64.Type}}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Changed Type1\", {\"Customer ID\"}, avereage_days_to_pay, {\"Customer.Customer ID\"}, \"avereage_days_to_pay\", JoinKind.LeftOuter),",
                "    #\"Expanded avereage_days_to_pay\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"avereage_days_to_pay\", {\"Customer.Average Pay Days \"}, {\"Customer.Average Pay Days \"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Expanded avereage_days_to_pay\",{{\"Customer.Average Pay Days \", \"Average Days To Pay\"}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Renamed Columns2\",{{\"Average Days To Pay\", type number}})",
                "in",
                "    #\"Changed Type2\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "dispatcher_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9e59fd49-26b0-4150-afdc-8439cf1a1686",
            "sourceColumn": "id",
            "summarizeBy": "sum"
          },
          {
            "name": "Dispatcher Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6b6f2ed8-7e14-4255-b3e6-10804a34f232",
            "sourceColumn": "Dispatcher Name",
            "summarizeBy": "none"
          },
          {
            "name": "Job Title",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "968134c5-0659-4afd-917c-812a1ea08a28",
            "sourceColumn": "Job Title",
            "summarizeBy": "none"
          },
          {
            "name": "Level",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "25b034b8-8f00-4127-923b-4c8bd3768f33",
            "sourceColumn": "Level",
            "summarizeBy": "none"
          },
          {
            "name": "user_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "775b1799-f040-494f-be75-e2d42cc4da67",
            "sourceColumn": "user_id",
            "summarizeBy": "none"
          },
          {
            "name": "create_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "8626e48c-a68f-4ce3-8e6a-9bc9e3e04a1e",
            "sourceColumn": "create_date",
            "summarizeBy": "none"
          },
          {
            "name": "source_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "eacceed7-179a-4297-9ace-41c5b7279e65",
            "sourceColumn": "source_id",
            "summarizeBy": "none"
          },
          {
            "name": "active",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "33112455-5aaa-44bc-96a8-86915fad2bd9",
            "sourceColumn": "active",
            "summarizeBy": "none"
          },
          {
            "name": "Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "d526473f-8533-4218-8ac4-c8a242f51d92",
            "sourceColumn": "Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "Team",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5b75c235-faac-430f-a286-2898cec7a14e",
            "sourceColumn": "Team",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_sdr_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "871dda95-5244-4aa6-b697-fee9478a5e62",
            "sourceColumn": "x_studio_sdr_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_d_team_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "1cf218f1-bf56-421c-9868-aee7424aca9b",
            "sourceColumn": "x_studio_d_team_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_henry_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "098181bd-41a1-4fa1-b4f5-59ccd8a8fdd6",
            "sourceColumn": "x_studio_henry_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "Dispatch McLeod ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "064e346a-558e-4e20-bbf5-f0f47b32f4fe",
            "sourceColumn": "Dispatch McLeod ID",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_mcleod_salesperson_code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4950e2ec-59b0-4265-8c6d-24d11a0cec8e",
            "sourceColumn": "x_studio_mcleod_salesperson_code",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_termination_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "12565dc9-c620-421c-8914-0bfbfe6eee05",
            "sourceColumn": "x_studio_termination_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_dat_license",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "e8afc197-991f-4b8b-968c-95603c41b779",
            "sourceColumn": "x_studio_dat_license",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_bi_license",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "247d9446-eec5-4d29-92e8-4f903f85cf2e",
            "sourceColumn": "x_studio_bi_license",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_bamboo_employee_number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c386af6d-5729-4845-9163-643a8a758f4b",
            "sourceColumn": "x_studio_bamboo_employee_number",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "76626843-7293-435a-ad1f-37133060195b",
        "partitions": [
          {
            "name": "dispatcher_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = recruitment,",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"x_studio_mcleod_user_code\", type text}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each ([x_studio_mcleod_user_code] <> \"false\")),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"name\", \"Dispatcher Name\"}, {\"job_id\", \"Job Title\"}, {\"stage_id\", \"Level\"}, {\"x_studio_start_date\", \"Start Date\"}, {\"x_studio_team\", \"Team\"}, {\"x_studio_mcleod_user_code\", \"Dispatch McLeod ID\"}}),",
                "    #\"Filtered Rows1\" = Table.SelectRows(#\"Renamed Columns\", each ([Dispatch McLeod ID] <> \"FALSE\")),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Filtered Rows1\",{{\"Dispatcher Name\", Text.Upper, type text}})",
                "in",
                "    #\"Uppercased Text\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "margin_load_count_goals",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Salesperson Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a5f32b6a-bc6a-484e-b530-4a99e3b77f0b",
            "sourceColumn": "Salesperson Name",
            "summarizeBy": "none"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "8b376bdf-f542-4208-bf1b-56ad3ee9507a",
            "sourceColumn": "Month",
            "summarizeBy": "none"
          },
          {
            "name": "Margin Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "decimal",
            "formatString": "0",
            "lineageTag": "64222b01-cead-46b2-ba52-affa3f44d520",
            "sourceColumn": "Margin Goal",
            "summarizeBy": "sum"
          },
          {
            "name": "Load Count Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6c7fe682-eee1-4e10-84d6-a4dba7e20ffa",
            "sourceColumn": "Load Count Goal",
            "summarizeBy": "sum"
          },
          {
            "name": "Margin Per Order Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "dataType": "decimal",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "b53df584-aa91-4c96-abcb-f49790a111e8",
            "sourceColumn": "Margin Per Order Goal",
            "summarizeBy": "sum"
          },
          {
            "name": "Margin % Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "96ee1ac6-add9-4522-89c4-8c9778e3ceef",
            "sourceColumn": "Margin % Goal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "2df3ab1a-6f5c-4bca-a24d-86d23e0977ab",
        "partitions": [
          {
            "name": "margin_load_count_goals",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/SalesGoals/Shared%20Documents/Sales%20Goals.xlsx\"), null, true),",
                "    MarginLoadCountGoals_Sheet = Source{[Item=\"MarginLoadCountGoals\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(MarginLoadCountGoals_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Salesperson Name\", type text}, {\"Month\", type date}, {\"Margin Goal\", Int64.Type}, {\"Load Count Goal\", Int64.Type}}),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Changed Type\",{{\"Salesperson Name\", Text.Upper, type text}}),",
                "    #\"Uppercased Text1\" = Table.TransformColumns(#\"Uppercased Text\",{{\"Salesperson Name\", Text.Upper, type text}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Uppercased Text1\",{{\"Margin Goal\", Currency.Type}, {\"Margin Per Order Goal\", Currency.Type}, {\"Margin % Goal\", Percentage.Type}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "overdue_check_calls",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Movement ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b8455d28-5078-4fa6-96c2-dacc9e5d30a3",
            "sourceColumn": "Movement ID",
            "summarizeBy": "none"
          },
          {
            "name": "Check Call Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "e94c091b-48f3-4883-a2c2-d007f253b7e6",
            "sourceColumn": "Check Call Date",
            "summarizeBy": "none"
          },
          {
            "name": "Check Call time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "a78f8014-9b74-4060-9f45-7ad5188f290d",
            "sourceColumn": "Check Call time",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "303d590b-af9c-4218-8bfc-81f00a4f7b82",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "25edfc97-6e45-4857-9dce-35637529f18b",
        "partitions": [
          {
            "name": "overdue_check_calls",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = SharePoint.Files(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam\", [ApiVersion = 15]),",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Folder Path] = \"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared Documents/bridge_iq/Data Sets/Overdue Check Call/\")),",
                "    #\"Filtered Hidden Files1\" = Table.SelectRows(#\"Filtered Rows\", each [Attributes]?[Hidden]? <> true),",
                "    #\"Invoke Custom Function1\" = Table.AddColumn(#\"Filtered Hidden Files1\", \"Transform File (6)\", each #\"Transform File (6)\"([Content])),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Invoke Custom Function1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Renamed Columns1\", {\"Source.Name\", \"Transform File (6)\"}),",
                "    #\"Expanded Table Column1\" = Table.ExpandTableColumn(#\"Removed Other Columns1\", \"Transform File (6)\", Table.ColumnNames(#\"Transform File (6)\"(#\"Sample File (6)\"))),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Table Column1\",{{\"Source.Name\", type text}, {\"Movement ID\", Int64.Type}, {\"Check Call Time\", type datetime}}),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Changed Type\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Removed Blank Rows\",{\"Source.Name\"}),",
                "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Removed Columns\", {\"Check Call Time\"}),",
                "    #\"Split Column by Delimiter\" = Table.SplitColumn(Table.TransformColumnTypes(#\"Removed Errors\", {{\"Check Call Time\", type text}}, \"en-US\"), \"Check Call Time\", Splitter.SplitTextByEachDelimiter({\" \"}, QuoteStyle.Csv, false), {\"Check Call Time.1\", \"Check Call Time.2\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Split Column by Delimiter\",{{\"Check Call Time.1\", \"Check Call Date\"}, {\"Check Call Time.2\", \"Check Call time\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Check Call Date\", type date}, {\"Check Call time\", type time}}),",
                "    #\"Calculated Start of Hour\" = Table.TransformColumns(#\"Changed Type1\",{{\"Check Call time\", Time.StartOfHour, type time}})",
                "in",
                "    #\"Calculated Start of Hour\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "behavior_goals",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Salesperson",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7387133a-b8bc-43fe-bf66-c62a29b0c190",
            "sourceColumn": "Salesperson",
            "summarizeBy": "none"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "a3020ed2-330b-431a-990b-6dedbb6b93f2",
            "sourceColumn": "Month",
            "summarizeBy": "none"
          },
          {
            "name": "BehaviorID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3ebaf21b-bab9-43d2-a367-b9cfe3155486",
            "sourceColumn": "BehaviorID",
            "summarizeBy": "none"
          },
          {
            "name": "Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "171ed716-db12-481a-a349-fce2a17eff39",
            "sourceColumn": "Goal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "e532f925-88db-4174-ae40-ae07e600369d",
        "partitions": [
          {
            "name": "behavior_goals",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/SalesGoals/Shared%20Documents/Sales%20Goals.xlsx\"), null, true),",
                "    BehaviorGoals_Sheet = Source{[Item=\"BehaviorGoals\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(BehaviorGoals_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Salesperson\", type text}, {\"Month\", type date}, {\"Behavior\", type text}, {\"Goal\", Int64.Type}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"Behavior\", \"BehaviorID\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each true)",
                "in",
                "    #\"Filtered Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "carrier_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Carrier ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3fef20e0-c612-499e-899c-95d5d3e7eba7",
            "sourceColumn": "Carrier ID",
            "summarizeBy": "none"
          },
          {
            "name": "Carrier Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "eba82b52-1a1d-4964-9507-530f5cf5646f",
            "sourceColumn": "Carrier Name",
            "summarizeBy": "none"
          },
          {
            "name": "Carrier Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6aca6411-fae6-4ae3-b402-83967312f7dd",
            "sourceColumn": "Carrier Status",
            "summarizeBy": "none"
          },
          {
            "name": "MCN",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5f9f678f-7e95-41c6-89c8-3170596d4710",
            "sourceColumn": "MCN",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "16945d3f-edc6-48f1-9bb6-1b874fa6b30a",
        "partitions": [
          {
            "name": "carrier_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = AnalysisServices.Databases(\"bl-mcbiserver\", [TypedMeasureColumns=true, Implementation=\"2.0\"]),",
                "    McLeodIQ_2019_Powerbroker = Source{[Name=\"McLeodIQ_2019_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker1 = McLeodIQ_2019_Powerbroker{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker2 = McLeodIQ_Powerbroker1{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(McLeodIQ_Powerbroker2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[Carrier]\", {\"[Carrier].[Carrier ID].[Carrier ID]\", \"[Carrier].[Carrier Name].[Carrier Name]\", \"[Carrier].[Carrier Status].[Carrier Status]\", \"[Carrier].[MC Number].[MC Number]\"}, {\"Carrier.Carrier ID\", \"Carrier.Carrier Name\", \"Carrier.Carrier Status\", \"Carrier.MC Number\"}}",
                "        }),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Items\",{{\"Carrier.Carrier ID\", \"Carrier ID\"}, {\"Carrier.Carrier Name\", \"Carrier Name\"}, {\"Carrier.Carrier Status\", \"Carrier Status\"}, {\"Carrier.MC Number\", \"MCN\"}}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Renamed Columns\", {\"MCN\"}),",
                "    #\"Removed Duplicates1\" = Table.Distinct(#\"Removed Duplicates\", {\"Carrier ID\"})",
                "in",
                "    #\"Removed Duplicates1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "crm_stages",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "7e571519-d057-4ba1-8769-877c23f8a44e",
            "sourceColumn": "Order",
            "summarizeBy": "sum"
          },
          {
            "name": "Stage Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "SortByColumn"
              }
            ],
            "dataType": "string",
            "lineageTag": "e5401c74-86b2-4818-99eb-9a347bdd0d04",
            "sortByColumn": "Order",
            "sourceColumn": "Stage Name",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "de058a77-3f0c-45f1-92c0-e117edf37ae3",
        "partitions": [
          {
            "name": "crm_stages",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/CRM/CRM%20Stages.xlsx\"), null, true),",
                "    CRMStages_Table = Source{[Item=\"CRMStages\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(CRMStages_Table,{{\"Order\", Int64.Type}, {\"Stage Name\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "observed_holidays",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Observed Holidays",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "8512acbc-ab99-4aca-9e43-d031935ed971",
            "sourceColumn": "Observed Holidays",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "4b63d1e0-dbc6-416e-89ef-d904987cac41",
        "partitions": [
          {
            "name": "observed_holidays",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Observed%20Holidays.xlsx\"), null, true),",
                "    observed_holidays_Table = Source{[Item=\"observed_holidays\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(observed_holidays_Table,{{\"Observed Holidays\", type date}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "parent_customer_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Customer ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f36c836b-d25d-4982-8503-1759aee66e19",
            "sourceColumn": "Customer ID",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a3f141f3-560c-48c4-8ea3-cb99ec02d328",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6649ee56-b496-4597-b4e1-99be28a15a9d",
            "sourceColumn": "Customer Name",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Bridge ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9ce25424-c07a-4154-bc2a-36febc9665ce",
            "sourceColumn": "Customer Bridge ID",
            "summarizeBy": "none"
          },
          {
            "name": "City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "32de0e85-b3d3-49d6-9436-8f9ab7a9f317",
            "sourceColumn": "City",
            "summarizeBy": "none"
          },
          {
            "name": "State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0498bf73-0a88-4bc7-9bf4-c1003fac6f5a",
            "sourceColumn": "State",
            "summarizeBy": "none"
          },
          {
            "name": "Zip Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f25eb9fc-76c2-4d87-9179-b43904d9918f",
            "sourceColumn": "Zip Code",
            "summarizeBy": "none"
          },
          {
            "name": "Date Added",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "efde3fb5-7a93-47d1-9bac-a74c8e63d0c4",
            "sourceColumn": "Date Added",
            "summarizeBy": "none"
          },
          {
            "name": "Change Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "a9f9f5fb-50fe-4b05-8995-2e0d8793d629",
            "sourceColumn": "Change Date",
            "summarizeBy": "none"
          },
          {
            "name": "Pay Terms",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4bab3007-eb6c-4917-8eb2-baf737939283",
            "sourceColumn": "Pay Terms",
            "summarizeBy": "none"
          },
          {
            "name": "Customer.Credit Limit",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c16abf49-0ae0-4dd6-b475-8e942b7bf6e6",
            "sourceColumn": "Customer.Credit Limit",
            "summarizeBy": "none"
          },
          {
            "name": "Billed Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c27ace02-3141-4594-b9fe-64c1ae273c19",
            "sourceColumn": "Billed Orders",
            "summarizeBy": "none"
          },
          {
            "name": "Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9c52cbad-f4fb-47c4-bde1-c9ea975b259c",
            "sourceColumn": "Orders",
            "summarizeBy": "none"
          },
          {
            "name": "Average Days To Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0f785fa0-8349-45f7-89fe-405c6f00877b",
            "sourceColumn": "Average Days To Pay",
            "summarizeBy": "none"
          },
          {
            "name": "Customer.Obsolete Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "69031c0e-2f90-4f71-aed3-5a653e7680dc",
            "sourceColumn": "Customer.Obsolete Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "46790bd8-e836-4238-bf03-245d0144a254",
        "partitions": [
          {
            "name": "parent_customer_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = crm_customer_key",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "lead_ops",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Lead Ops",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1606f45f-aa6e-41c7-bd8b-f22cf6d65d78",
            "sourceColumn": "Lead Ops",
            "summarizeBy": "none"
          },
          {
            "name": "Wolf Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "98a720a1-ab10-4879-9b9f-26dbeb2066e3",
            "sourceColumn": "Wolf Pack",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "808721e3-1653-4c99-8ae1-6379a85ab9ca",
        "partitions": [
          {
            "name": "lead_ops",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = rev_codes,",
                "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Rev Code\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null})))",
                "in",
                "    #\"Removed Blank Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "rev_codes",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Rev Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0ca505a8-9ec2-498b-8660-2de8ce70b611",
            "sourceColumn": "Rev Code",
            "summarizeBy": "none"
          },
          {
            "name": "Lead Ops",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "aa434e81-7861-41f1-bfdc-28bfd7865a9a",
            "sourceColumn": "Lead Ops",
            "summarizeBy": "none"
          },
          {
            "name": "Wolf Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "96169d05-bbf3-4553-956a-345d326516ba",
            "sourceColumn": "Wolf Pack",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "bb2c870f-aba8-48d7-9252-c3a68792661e",
        "partitions": [
          {
            "name": "rev_codes",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Teams.xlsx\"), null, true),",
                "    rev_codes_Table = Source{[Item=\"rev_codes\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(rev_codes_Table,{{\"Rev Code\", Int64.Type}, {\"Lead Ops\", type text}, {\"Wolf Pack\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "wolf_pack",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Wolf Pack",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9524e622-54d2-4d3f-b13b-ddcdf42a2317",
            "sourceColumn": "Wolf Pack",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "33b5ca59-467d-45b5-8197-e82c7441d0b0",
        "partitions": [
          {
            "name": "wolf_pack",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = rev_codes,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Wolf Pack\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null})))",
                "in",
                "    #\"Removed Blank Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "sdr_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8192d320-ad64-4274-9103-948ce50352ae",
            "sourceColumn": "id",
            "summarizeBy": "sum"
          },
          {
            "name": "name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1e4faf6f-ccf1-4d17-a4b1-0f4d69e6a272",
            "sourceColumn": "name",
            "summarizeBy": "none"
          },
          {
            "name": "job_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "49de693d-6cd0-43d2-a4ba-7bf0f5e59a12",
            "sourceColumn": "job_id",
            "summarizeBy": "none"
          },
          {
            "name": "stage_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "699a5589-87e7-4e95-9e37-a51c63776422",
            "sourceColumn": "stage_id",
            "summarizeBy": "none"
          },
          {
            "name": "user_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2c6f7ed5-fe0f-4361-9337-bd44131e3944",
            "sourceColumn": "user_id",
            "summarizeBy": "none"
          },
          {
            "name": "create_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "bab90627-f9a8-421e-b1ee-3169d940016e",
            "sourceColumn": "create_date",
            "summarizeBy": "none"
          },
          {
            "name": "source_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6a99393c-4727-4d2b-9025-1d2d2c184159",
            "sourceColumn": "source_id",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "d7d3ae30-598c-4ca4-ad14-03546191012c",
            "sourceColumn": "x_studio_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_team",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "494311a3-5e06-4eb8-992c-c10350b22b38",
            "sourceColumn": "x_studio_team",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_sdr_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "d6866a4a-8e8a-4abc-abf5-70a04a403947",
            "sourceColumn": "x_studio_sdr_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_d_team_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "ac55a9e5-2a14-4adf-a882-abf3db22d9a8",
            "sourceColumn": "x_studio_d_team_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_henry_start_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "727ed2d3-aa64-4391-b573-5c4ea7ffb83b",
            "sourceColumn": "x_studio_henry_start_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_mcleod_user_code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "417269b4-ef7c-40a8-b5ac-fac0b22ad4f3",
            "sourceColumn": "x_studio_mcleod_user_code",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_mcleod_salesperson_code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3165476a-683e-4bd6-be04-08027e103012",
            "sourceColumn": "x_studio_mcleod_salesperson_code",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_termination_date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "5f205ec6-b802-4d9d-9a38-e83d0315ab2a",
            "sourceColumn": "x_studio_termination_date",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_bamboo_employee_number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "14174d94-d983-436c-8019-5178430e8c88",
            "sourceColumn": "x_studio_bamboo_employee_number",
            "summarizeBy": "sum"
          },
          {
            "name": "Active",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "90467ed9-7859-45d1-9b58-d5c77a941610",
            "sourceColumn": "Active",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "5c52ff80-d193-4595-af1f-c4d8b90b9941",
        "partitions": [
          {
            "name": "sdr_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = recruitment,",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each [x_studio_sdr_start_date] <> null and [x_studio_sdr_start_date] <> \"\"),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"x_studio_dat_license\", \"x_studio_bi_license\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",\"SDR 4-6\",\"SDR\",Replacer.ReplaceText,{\"stage_id\"}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Replaced Value\", \"Active\", each if [active] = false then false else if [stage_id] <> \"SDR\" then false else true),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Conditional Column\",{\"active\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns1\",{{\"Active\", type logical}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "daily_numbers",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Recruiter Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "965a2ca0-44c6-4853-979f-2d8937b2459a",
            "sourceColumn": "Recruiter Name",
            "summarizeBy": "none"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "55ac7acb-cf4e-4a06-a8ca-c610b6347d27",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Behavior Id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "13eda8d1-383c-46c1-ad5b-1e04ee658923",
            "sourceColumn": "Behavior Id",
            "summarizeBy": "none"
          },
          {
            "name": "Count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9e6f5d88-30b0-41e7-86bd-d29ed0c7224f",
            "sourceColumn": "Count",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "7fc3ff80-2630-474c-b7da-a1fcbb9906d0",
        "partitions": [
          {
            "name": "daily_numbers",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "     Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BridgeRecruiting/Shared%20Documents/Tracking%20Sheets/Daily%20Numbers.xlsx\"), null, true),",
                "    DailyNumbers_Table = Source{[Item=\"DailyNumbers\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(DailyNumbers_Table,{{\"ID\", Int64.Type}, {\"Start time\", type datetime}, {\"Completion time\", type datetime}, {\"Email\", type text}, {\"Name\", type text}, {\"Date\", type date}, {\"Indeed\", Int64.Type}, {\"Zip Recruiter\", Int64.Type}, {\"LinkedIn\", Int64.Type}, {\"Handshake\", Int64.Type}, {\"Other\", Int64.Type}, {\"Events\", Int64.Type}, {\"University Convos\", Int64.Type}, {\"Meetings\", Int64.Type}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"ID\", \"Start time\", \"Completion time\", \"Email\"}),",
                "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(#\"Removed Columns\", {\"Name\", \"Date\"}, \"Attribute\", \"Value\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Columns\",{{\"Attribute\", \"Behavior\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each ([Value] <> 0)),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Filtered Rows\",{{\"Behavior\", \"BehaviorId\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns1\",\"Jessica McGill\",\"Jess Mcgill\",Replacer.ReplaceText,{\"Name\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Replaced Value\",{{\"Name\", \"Recruiter Name\"}, {\"Value\", \"Count\"}, {\"BehaviorId\", \"Behavior Id\"}}),",
                "    #\"Calculated Start of Month\" = Table.TransformColumns(#\"Renamed Columns2\",{{\"Date\", Date.StartOfMonth, type date}}),",
                "    #\"Grouped Rows\" = Table.Group(#\"Calculated Start of Month\", {\"Recruiter Name\", \"Date\", \"Behavior Id\"}, {{\"Count\", each List.Sum([Count]), type number}})",
                "in",
                "    #\"Grouped Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "behavior_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Behavior ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a46d81b0-479b-474d-aa63-5c7cae4baad2",
            "sourceColumn": "Behavior ID",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "4af54489-e6ba-4025-8d0b-56dbaf86b9c4",
        "partitions": [
          {
            "name": "behavior_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = behaviors_crm,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"mail_activity_type_id\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Duplicates\",{{\"mail_activity_type_id\", \"Behavior ID\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "contacts_module",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "bbbbdeb7-60dc-4bdc-9d3c-14ba9925ab52",
            "sourceColumn": "id",
            "summarizeBy": "sum"
          },
          {
            "name": "name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "53a76c79-a719-48c3-a6c6-d27026936950",
            "sourceColumn": "name",
            "summarizeBy": "none"
          },
          {
            "name": "is_company",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ed3bd495-cc03-4cc7-bb90-82bd72f62794",
            "sourceColumn": "is_company",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_zoominfo_contact_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "007961ab-4edf-46bf-8c56-b9f8e8043f61",
            "sourceColumn": "x_studio_zoominfo_contact_id",
            "summarizeBy": "sum"
          },
          {
            "name": "x_studio_zoominfo_company_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cb4bf698-2aea-4a63-ba5c-5cceb55f06c0",
            "sourceColumn": "x_studio_zoominfo_company_id",
            "summarizeBy": "none"
          },
          {
            "name": "Parent ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ba8797fc-37ce-4552-9978-18a769bab06b",
            "sourceColumn": "Parent ID",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "e1c34827-308e-45ee-80d7-c0da7ae34cc0",
        "partitions": [
          {
            "name": "contacts_module",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\CRM\\Contacts_api.xlsx\"), null, true),",
                "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"x_studio_zoominfo_contact_id\", Int64.Type}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Changed Type\",{{\"id\", Int64.Type}}),",
                "    #\"Extracted Text After Delimiter\" = Table.TransformColumns(#\"Changed Type1\", {{\"parent_id\", each Text.AfterDelimiter(Text.From(_, \"en-US\"), \"[\"), type text}}),",
                "    #\"Extracted Text Before Delimiter\" = Table.TransformColumns(#\"Extracted Text After Delimiter\", {{\"parent_id\", each Text.BeforeDelimiter(_, \",\"), type text}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Extracted Text Before Delimiter\",{{\"parent_id\", Int64.Type}}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Changed Type2\", \"Parent ID\", each if [is_company] = false then [parent_id] else [id]),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Conditional Column\",{\"parent_id\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "contacts_parent",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5cd7a662-c1e7-4aa4-9b6a-fcd91b2a4fc3",
            "sourceColumn": "id",
            "summarizeBy": "none"
          },
          {
            "name": "is_company",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6660ebd6-2a7d-4e4f-9686-659b9ff97818",
            "sourceColumn": "is_company",
            "summarizeBy": "none"
          },
          {
            "name": "name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "897f09d2-13a7-4fc3-ad8a-0b82d877eb4b",
            "sourceColumn": "name",
            "summarizeBy": "none"
          },
          {
            "name": "x_studio_zoominfo_contact_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5c5a32d7-80e8-43d4-8c7c-e38cfbd65f0d",
            "sourceColumn": "x_studio_zoominfo_contact_id",
            "summarizeBy": "sum"
          },
          {
            "name": "x_studio_zoominfo_company_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "41df6b94-8b20-4683-9e9e-ab5544301ec0",
            "sourceColumn": "x_studio_zoominfo_company_id",
            "summarizeBy": "none"
          },
          {
            "name": "Parent ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "69049c38-88ae-49a0-a601-9ea86838b970",
            "sourceColumn": "Parent ID",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "93dc4e66-df7c-420c-af11-05f4c6e9563d",
        "partitions": [
          {
            "name": "contacts_parent",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = contacts_module",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "bws_behaviors",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "aae2fd04-41f4-4c9c-917b-ada1032b58aa",
            "sourceColumn": "id",
            "summarizeBy": "sum"
          },
          {
            "name": "Behavior Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "7baeafca-7c3d-4b76-91ae-9ca9b5b2876c",
            "sourceColumn": "Behavior Date",
            "summarizeBy": "none"
          },
          {
            "name": "author_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "49e20062-16be-415b-960f-32aa8beb2ac1",
            "sourceColumn": "author_id",
            "summarizeBy": "none"
          },
          {
            "name": "mail_activity_type_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5cac5fa3-1113-4f3b-b9e5-dfc3c78ac534",
            "sourceColumn": "mail_activity_type_id",
            "summarizeBy": "none"
          },
          {
            "name": "model",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5674ac47-9163-435a-a4d3-bdc8daa37cda",
            "sourceColumn": "model",
            "summarizeBy": "none"
          },
          {
            "name": "res_id",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e4926f0c-7c64-4d15-acdb-c6b708faf5b1",
            "sourceColumn": "res_id",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "71e5160e-8d9f-4a46-ad18-d16cc7c0147b",
        "partitions": [
          {
            "name": "bws_behaviors",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = behaviors_crm,",
                "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Behavior Time\"}),",
                "    #\"Calculated Start of Month\" = Table.TransformColumns(#\"Removed Columns\",{{\"Behavior Date\", Date.StartOfMonth, type date}})",
                "in",
                "    #\"Calculated Start of Month\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "HealthyPipelineGoals",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Saleperson Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c4d67f57-6c8b-4fdb-b03a-a408fb1c01f2",
            "sourceColumn": "Saleperson Name",
            "summarizeBy": "none"
          },
          {
            "name": "Stage",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "61c59c93-2fdb-406a-9628-66a5293826d6",
            "sourceColumn": "Stage",
            "summarizeBy": "none"
          },
          {
            "name": "Healthy #",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "fafa56ef-24d4-4b41-911f-78c0d2a4dea4",
            "sourceColumn": "Healthy #",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "139732e1-7a05-4d8e-9aa5-5bbda2259786",
        "partitions": [
          {
            "name": "HealthyPipelineGoals",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(File.Contents(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\Sales Goals - Documents\\Sales Goals.xlsx\"), null, true),",
                "    HealthyPipelineGoals_Table = Source{[Item=\"HealthyPipelineGoals\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(HealthyPipelineGoals_Table,{{\"Saleperson Name\", type text}, {\"Stage\", type text}, {\"Healthy #\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "customer_margin_goal",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Customer Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "10c23fb1-4ba3-4af1-9f92-4f4baa0805fd",
            "sourceColumn": "Customer Name",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6be97065-5a61-4943-8a9e-b4973908c250",
            "sourceColumn": "Customer Code",
            "summarizeBy": "none"
          },
          {
            "name": "Salesperson",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "981ba796-62cb-4b83-ba2c-f568ec9f8232",
            "sourceColumn": "Salesperson",
            "summarizeBy": "none"
          },
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "3c5bdea7-8817-4824-b211-e1e7b06aabb4",
            "sourceColumn": "Month",
            "summarizeBy": "none"
          },
          {
            "name": "Margin Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "79622e2e-171d-4dc1-9077-4efe88cd2bfd",
            "sourceColumn": "Margin Goal",
            "summarizeBy": "sum"
          },
          {
            "name": "Margin % Goal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e5ba74cf-a198-4c2f-9879-844e5013cf2a",
            "sourceColumn": "Margin % Goal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "d57599c3-dce4-4678-b8ca-90b35adbe878",
        "partitions": [
          {
            "name": "customer_margin_goal",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/SalesGoals/Shared%20Documents/Sales%20Goals.xlsx\"), null, true),",
                "    customer_margin_goal_Table = Source{[Item=\"customer_margin_goal\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(customer_margin_goal_Table,{{\"Customer\", type text}, {\"Salesperson\", type text}, {\"Month\", type date}, {\"Margin Goal\", Int64.Type}, {\"Margin % Goal\", type number}}),",
                "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Customer\", Splitter.SplitTextByEachDelimiter({\":\"}, QuoteStyle.Csv, false), {\"Customer.1\", \"Customer.2\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Customer.1\", type text}, {\"Customer.2\", type text}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type1\",{{\"Customer.1\", \"Customer Name\"}, {\"Customer.2\", \"Customer Code\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "customer_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Customer ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "24356058-7124-466f-bc33-2334dbd1ab8a",
            "sourceColumn": "Customer ID",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "57ddbf25-fd9a-4b99-b9cc-3405ffbf1f67",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e497f1d8-039e-45d1-8840-77a030eb904f",
            "sourceColumn": "Customer Name",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Bridge ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "903c4e7f-0d2c-4619-8cb8-629808d4d68e",
            "sourceColumn": "Customer Bridge ID",
            "summarizeBy": "none"
          },
          {
            "name": "City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ffd21de0-af9e-420c-be3d-9aabd34202ec",
            "sourceColumn": "City",
            "summarizeBy": "none"
          },
          {
            "name": "State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "db108339-c5d7-41d9-8ed1-1d0bd9800bc5",
            "sourceColumn": "State",
            "summarizeBy": "none"
          },
          {
            "name": "Zip Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7d8abece-aaa7-4f8a-b7dc-5b2c4ceac4e9",
            "sourceColumn": "Zip Code",
            "summarizeBy": "none"
          },
          {
            "name": "Date Added",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "768da9bd-ec6f-4a1a-8ebf-a05544257061",
            "sourceColumn": "Date Added",
            "summarizeBy": "none"
          },
          {
            "name": "Change Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "01f80d49-0494-4a61-b6f2-6d31bc095a94",
            "sourceColumn": "Change Date",
            "summarizeBy": "none"
          },
          {
            "name": "Pay Terms",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "48e98297-e289-4207-bf6c-13fe31109b4b",
            "sourceColumn": "Pay Terms",
            "summarizeBy": "sum"
          },
          {
            "name": "Customer.Credit Limit",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "69700d1e-0aa3-48e8-9ac4-6cf7435d3be0",
            "sourceColumn": "Customer.Credit Limit",
            "summarizeBy": "none"
          },
          {
            "name": "Billed Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "02f4988f-1f00-4e94-8a33-861d0e30b7c6",
            "sourceColumn": "Billed Orders",
            "summarizeBy": "sum"
          },
          {
            "name": "Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "56c408bb-6ed7-411b-a5d0-93d919563836",
            "sourceColumn": "Orders",
            "summarizeBy": "sum"
          },
          {
            "name": "Average Days To Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f19bf97c-a6c6-42cf-b4b0-1df725fe0bea",
            "sourceColumn": "Average Days To Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Customer.Obsolete Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "35b10467-d0ae-4eec-b810-4cefca3872f7",
            "sourceColumn": "Customer.Obsolete Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "0ed8f113-69c3-4120-a879-1986f585852a",
        "partitions": [
          {
            "name": "customer_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = crm_customer_key",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "lanes",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Lane",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "81126767-ce63-4693-9b92-0bb308c277ba",
            "sourceColumn": "Lane",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "23626554-de07-423a-b475-21a74378deb6",
        "partitions": [
          {
            "name": "lanes",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = pcs_loads,",
                "    #\"Appended Query\" = Table.Combine({Source, orders}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Appended Query\",{\"Lane\"}),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Removed Other Columns\",{{\"Lane\", Text.Upper, type text}}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Uppercased Text\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Removed Blank Rows\", {\"Lane\"})",
                "in",
                "    #\"Removed Errors\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "crm_parent_customer_key",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Customer ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9d9276e6-0848-4221-87c0-ef1eaddc7779",
            "sourceColumn": "Customer ID",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5aaa1f0c-ca65-4bad-a427-6475f734b0fc",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4cc1bff6-8289-4e7b-9967-26ce62da7d34",
            "sourceColumn": "Customer Name",
            "summarizeBy": "none"
          },
          {
            "name": "Customer Bridge ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6efa45b2-c301-4355-b8a9-f8444ab3de0a",
            "sourceColumn": "Customer Bridge ID",
            "summarizeBy": "none"
          },
          {
            "name": "City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c3de4e50-2198-4ecd-a801-1a0794d00577",
            "sourceColumn": "City",
            "summarizeBy": "none"
          },
          {
            "name": "State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5d081d4d-fb15-4efb-963d-e27ef448fe81",
            "sourceColumn": "State",
            "summarizeBy": "none"
          },
          {
            "name": "Zip Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "277bba73-5c6a-4bf6-9ab5-f7e5ef4da653",
            "sourceColumn": "Zip Code",
            "summarizeBy": "none"
          },
          {
            "name": "Date Added",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "4a12d866-6de4-48b9-ad7d-486c04ccbab5",
            "sourceColumn": "Date Added",
            "summarizeBy": "none"
          },
          {
            "name": "Change Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "dcef8b2c-5087-4240-8cd5-dc1a226d8f8d",
            "sourceColumn": "Change Date",
            "summarizeBy": "none"
          },
          {
            "name": "Pay Terms",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "50d174c8-756e-4452-aa58-f2ddcfad1616",
            "sourceColumn": "Pay Terms",
            "summarizeBy": "none"
          },
          {
            "name": "Customer.Credit Limit",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f8ad2084-b847-4790-90a2-52ecd98c9d21",
            "sourceColumn": "Customer.Credit Limit",
            "summarizeBy": "none"
          },
          {
            "name": "Billed Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "859fb995-dbc2-47fd-9c5e-2ecb0284e154",
            "sourceColumn": "Billed Orders",
            "summarizeBy": "none"
          },
          {
            "name": "Orders",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1a484e1e-a233-4a93-ae57-c06d28fd8d92",
            "sourceColumn": "Orders",
            "summarizeBy": "none"
          },
          {
            "name": "Average Days To Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "44c99441-41e2-48cc-9702-df5745f9bd3b",
            "sourceColumn": "Average Days To Pay",
            "summarizeBy": "none"
          },
          {
            "name": "Customer.Obsolete Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "3432c4d0-dd12-403c-a997-5affbebb3988",
            "sourceColumn": "Customer.Obsolete Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "2fbc90a7-9788-494e-8234-e098138d4707",
        "partitions": [
          {
            "name": "crm_parent_customer_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = parent_customer_key",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "daily_number_override",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "fdb0d3f0-e116-41c7-950b-c58fbee1eb64",
            "sourceColumn": "Month",
            "summarizeBy": "none"
          },
          {
            "name": "Margin Number",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ee92a63c-e7a4-4b91-841a-32dc1bfdfcea",
            "sourceColumn": "Margin Number",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "bb333896-6093-4734-9017-1842a5629564",
        "partitions": [
          {
            "name": "daily_number_override",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/SalesGoals/Shared%20Documents/Sales%20Goals.xlsx\"), null, true),",
                "    daily_number_override_Table = Source{[Item=\"daily_number_override\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(daily_number_override_Table,{{\"Month\", type date}, {\"Margin Number\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "callins",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Entered date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "96121565-2816-4fcc-aade-123906e57e24",
            "sourceColumn": "Entered date",
            "summarizeBy": "none"
          },
          {
            "name": "Entered by",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f4f53187-e5d1-4944-89b0-01713659e6c8",
            "sourceColumn": "Entered by",
            "summarizeBy": "none"
          },
          {
            "name": "Callin type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "edd6b4cd-cf4d-4d26-9700-77458a179413",
            "sourceColumn": "Callin type",
            "summarizeBy": "none"
          },
          {
            "name": "Movement",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5f02f9f6-5e04-4f79-91c3-377f80c96b12",
            "sourceColumn": "Movement",
            "summarizeBy": "none"
          },
          {
            "name": "Carrier",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d1d45b41-aad0-47b3-9e9a-4152d6590d6c",
            "sourceColumn": "Carrier",
            "summarizeBy": "none"
          },
          {
            "name": "Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "ecac440f-89e4-41fb-b616-607f6af6256d",
            "sourceColumn": "Time",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "486019b8-ab72-446f-988c-cbc6b8d3ac3e",
        "partitions": [
          {
            "name": "callins",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Folder.Files(\"C:\\Users\\NSmither\\Bridge Logistics Inc\\BL-Bi Team - Documents\\bridge_iq\\Data Sets\\Callins\"),",
                "    #\"Filtered Hidden Files1\" = Table.SelectRows(Source, each [Attributes]?[Hidden]? <> true),",
                "    #\"Invoke Custom Function1\" = Table.AddColumn(#\"Filtered Hidden Files1\", \"Transform File\", each #\"Transform File\"([Content])),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Invoke Custom Function1\", {\"Name\", \"Source.Name\"}),",
                "    #\"Removed Other Columns1\" = Table.SelectColumns(#\"Renamed Columns1\", {\"Source.Name\", \"Transform File\"}),",
                "    #\"Expanded Table Column1\" = Table.ExpandTableColumn(#\"Removed Other Columns1\", \"Transform File\", Table.ColumnNames(#\"Transform File\"(#\"Sample File\"))),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Table Column1\",{{\"Source.Name\", type text}, {\"call_date_time\", type datetimezone}, {\"entered_by\", type text}, {\"initiated_type\", type text}, {\"movement_id\", Int64.Type}, {\"payee_id\", type text}, {\"id\", type text}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Changed Type\",{\"Source.Name\", \"id\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"call_date_time\", type datetime}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type1\",{{\"payee_id\", \"Carrier\"}, {\"movement_id\", \"Movement\"}, {\"initiated_type\", \"Callin type\"}, {\"entered_by\", \"Entered by\"}, {\"call_date_time\", \"Entered date\"}}),",
                "    #\"Inserted Time\" = Table.AddColumn(#\"Renamed Columns\", \"Time\", each DateTime.Time([Entered date]), type time),",
                "    #\"Extracted Date\" = Table.TransformColumns(#\"Inserted Time\",{{\"Entered date\", DateTime.Date, type date}}),",
                "    #\"Appended Query\" = Table.Combine({#\"Extracted Date\", #\"Old Callins\"})",
                "in",
                "    #\"Appended Query\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "images",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2888791d-7619-45b7-bf6d-90daec244fd3",
            "sourceColumn": "name",
            "summarizeBy": "none"
          },
          {
            "name": "url",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "42a1cc20-b845-442d-aa06-65eae91966c4",
            "sourceColumn": "url",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "b03d02f5-0108-468e-b020-518999ac8f99",
        "partitions": [
          {
            "name": "images",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"TcyxCsIwFIXhV5HMTW6ooOKuVAQHQTqUDOE2tlfTJLSRS99ebBfHA//5mkaMhG9RiD7nNB0BmFlRDsxOYRyAk8QYsgsZPslH205Q6lKDPsCdUJ69pVHWMapX6oQpVm7T0fOPHFxLVnWU+nkxlw1eV4/9XF2uuxtuazxpWIvf15gv\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [name = _t, url = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"name\", type text}, {\"url\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "pcs_loads",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Carrier Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bafb9091-32a2-4dbb-bb4e-83973b579048",
            "sourceColumn": "Carrier Name",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0e5e1e1c-19c5-47e5-bdcb-e7c69feeaeaf",
            "sourceColumn": "Consignee City",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0ad9feb4-1ecb-4df7-b009-36239e3f4a4e",
            "sourceColumn": "Consignee Name",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a8c80e05-f927-4aa2-8b16-301c40168e1b",
            "sourceColumn": "Consignee State",
            "summarizeBy": "none"
          },
          {
            "name": "Customer ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e93c611b-0d1b-4382-8dfa-41cebfd5e376",
            "sourceColumn": "Customer ID",
            "summarizeBy": "none"
          },
          {
            "name": "Ship Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "9a88f39b-76b7-4fa1-9c76-b1135db9c741",
            "sourceColumn": "Ship Date",
            "summarizeBy": "none"
          },
          {
            "name": "Commodity",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f200c1e0-4d06-4d64-8bac-3c29660b5751",
            "sourceColumn": "Commodity",
            "summarizeBy": "none"
          },
          {
            "name": "Order ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3a64e14b-1084-4ada-af68-b04fb6815797",
            "sourceColumn": "Order ID",
            "summarizeBy": "none"
          },
          {
            "name": "Trailer Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "496379d6-1af5-489c-a869-189108c1d660",
            "sourceColumn": "Trailer Type",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper City",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "47118e52-f112-4f98-b237-37b453d2145d",
            "sourceColumn": "Shipper City",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5224341e-06c7-481e-96e2-9a94bb88ee79",
            "sourceColumn": "Shipper Name",
            "summarizeBy": "none"
          },
          {
            "name": "Shipper State",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e8af3d0d-fd7e-48d0-a9ee-799a8d029e85",
            "sourceColumn": "Shipper State",
            "summarizeBy": "none"
          },
          {
            "name": "Bill Distance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d38d5631-55c9-451f-97f7-e740f3c3f184",
            "sourceColumn": "Bill Distance",
            "summarizeBy": "sum"
          },
          {
            "name": "Carrier Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "dataType": "decimal",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "d55b1a42-0d00-4566-8ef5-36dc0bfc38f5",
            "sourceColumn": "Carrier Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Total Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "dataType": "decimal",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "ff2ce648-037f-4d92-b863-5df733e5420b",
            "sourceColumn": "Total Revenue",
            "summarizeBy": "sum"
          },
          {
            "name": "Dispatcher",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "31ad7a3a-8b79-4189-9706-3cc9db7f8ad1",
            "sourceColumn": "Dispatcher",
            "summarizeBy": "none"
          },
          {
            "name": "Delivery Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "018a075d-190b-4f43-8520-a8ae19ecdfeb",
            "sourceColumn": "Delivery Date",
            "summarizeBy": "none"
          },
          {
            "name": "Cases Pieces",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "edc0e389-4428-4c33-8563-a25120a209fe",
            "sourceColumn": "Cases Pieces",
            "summarizeBy": "sum"
          },
          {
            "name": "Lane",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "368ccdf7-c635-46f8-8ac3-04e3317d4695",
            "sourceColumn": "Lane",
            "summarizeBy": "none"
          },
          {
            "name": "Salesperson Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4cc86850-075b-490e-bbbc-884506f07679",
            "sourceColumn": "Salesperson Name",
            "summarizeBy": "none"
          }
        ],
        "excludeFromModelRefresh": true,
        "lineageTag": "d4e1c165-81d9-45ca-8a53-66f1a155ed20",
        "partitions": [
          {
            "name": "pcs_loads",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/PCS/PCS%20Loads.xlsx\"), null, true),",
                "    PCSLoads_Table = Source{[Item=\"PCSLoads\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(PCSLoads_Table,{{\"LoadID\", Int64.Type}, {\"PickupDate\", type datetime}, {\"DeliveryDate\", type datetime}, {\"MilesBilled\", Int64.Type}, {\"Commodity\", type any}, {\"TotalPieces\", Int64.Type}, {\"TotalRevenue\", type number}, {\"DispUser\", type text}, {\"ShipName\", type text}, {\"ShipCity\", type text}, {\"ShipSt\", type text}, {\"ShipZip\", Int64.Type}, {\"ConsName\", type text}, {\"ConsCity\", type text}, {\"ConsSt\", type text}, {\"ConsZip\", Int64.Type}, {\"DriverName\", type text}, {\"Driver Pay\", type number}, {\"Saleperson Name\", type any}, {\"McLeodVsPCSCode.Code\", type any}}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Changed Type\",{\"DriverName\", \"LoadID\", \"PickupDate\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"ConsName\", \"ConsCity\", \"ConsSt\", \"ConsZip\", \"Driver Pay\", \"Saleperson Name\", \"McLeodVsPCSCode.Code\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Reordered Columns\",{{\"DriverName\", \"Carrier Name\"}}),",
                "    #\"Reordered Columns1\" = Table.ReorderColumns(#\"Renamed Columns\",{\"Carrier Name\", \"ConsCity\", \"LoadID\", \"PickupDate\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"ConsName\", \"ConsSt\", \"ConsZip\", \"Driver Pay\", \"Saleperson Name\", \"McLeodVsPCSCode.Code\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Reordered Columns1\",{{\"ConsCity\", \"Consignee City\"}}),",
                "    #\"Reordered Columns2\" = Table.ReorderColumns(#\"Renamed Columns1\",{\"Carrier Name\", \"Consignee City\", \"ConsName\", \"LoadID\", \"PickupDate\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"ConsSt\", \"ConsZip\", \"Driver Pay\", \"Saleperson Name\", \"McLeodVsPCSCode.Code\"}),",
                "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Reordered Columns2\",{{\"ConsName\", \"Consignee Name\"}}),",
                "    #\"Reordered Columns3\" = Table.ReorderColumns(#\"Renamed Columns2\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"ConsSt\", \"LoadID\", \"PickupDate\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"ConsZip\", \"Driver Pay\", \"Saleperson Name\", \"McLeodVsPCSCode.Code\"}),",
                "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Reordered Columns3\",{{\"ConsSt\", \"Consignee State\"}}),",
                "    #\"Reordered Columns4\" = Table.ReorderColumns(#\"Renamed Columns3\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"ConsZip\", \"LoadID\", \"PickupDate\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"Driver Pay\", \"Saleperson Name\", \"McLeodVsPCSCode.Code\"}),",
                "    #\"Renamed Columns4\" = Table.RenameColumns(#\"Reordered Columns4\",{{\"ConsZip\", \"Consignee  Zip\"}}),",
                "    #\"Reordered Columns5\" = Table.ReorderColumns(#\"Renamed Columns4\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"McLeodVsPCSCode.Code\", \"LoadID\", \"PickupDate\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"Driver Pay\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns5\" = Table.RenameColumns(#\"Reordered Columns5\",{{\"McLeodVsPCSCode.Code\", \"Customer ID\"}}),",
                "    #\"Reordered Columns6\" = Table.ReorderColumns(#\"Renamed Columns5\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"PickupDate\", \"LoadID\", \"DeliveryDate\", \"MilesBilled\", \"Commodity\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"Driver Pay\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns6\" = Table.RenameColumns(#\"Reordered Columns6\",{{\"PickupDate\", \"Ship Date\"}}),",
                "    #\"Reordered Columns7\" = Table.ReorderColumns(#\"Renamed Columns6\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"LoadID\", \"DeliveryDate\", \"MilesBilled\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"Driver Pay\", \"Saleperson Name\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Reordered Columns7\", each true),",
                "    #\"Renamed Columns7\" = Table.RenameColumns(#\"Filtered Rows\",{{\"LoadID\", \"Order ID\"}}),",
                "    #\"Reordered Columns8\" = Table.ReorderColumns(#\"Renamed Columns7\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"LoadType\", \"DeliveryDate\", \"MilesBilled\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"ShipName\", \"ShipCity\", \"ShipSt\", \"ShipZip\", \"Driver Pay\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns8\" = Table.RenameColumns(#\"Reordered Columns8\",{{\"LoadType\", \"Trailer Type\"}}),",
                "    #\"Reordered Columns9\" = Table.ReorderColumns(#\"Renamed Columns8\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"Trailer Type\", \"ShipCity\", \"ShipName\", \"ShipSt\", \"ShipZip\", \"DeliveryDate\", \"MilesBilled\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"Driver Pay\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns9\" = Table.RenameColumns(#\"Reordered Columns9\",{{\"ShipCity\", \"Shipper City\"}, {\"ShipName\", \"Shipper Name\"}, {\"ShipSt\", \"Shipper State\"}, {\"ShipZip\", \"Shipper Zip\"}}),",
                "    #\"Reordered Columns10\" = Table.ReorderColumns(#\"Renamed Columns9\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"Trailer Type\", \"Shipper City\", \"Shipper Name\", \"Shipper State\", \"MilesBilled\", \"Shipper Zip\", \"DeliveryDate\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"Driver Pay\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns10\" = Table.RenameColumns(#\"Reordered Columns10\",{{\"MilesBilled\", \"Bill Distance\"}}),",
                "    #\"Reordered Columns11\" = Table.ReorderColumns(#\"Renamed Columns10\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"Trailer Type\", \"Shipper City\", \"Shipper Name\", \"Shipper State\", \"Bill Distance\", \"Shipper Zip\", \"Driver Pay\", \"DeliveryDate\", \"TotalPieces\", \"TotalRevenue\", \"DispUser\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns11\" = Table.RenameColumns(#\"Reordered Columns11\",{{\"Driver Pay\", \"Carrier Pay\"}}),",
                "    #\"Reordered Columns12\" = Table.ReorderColumns(#\"Renamed Columns11\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"Trailer Type\", \"Shipper City\", \"Shipper Name\", \"Shipper State\", \"Bill Distance\", \"Shipper Zip\", \"Carrier Pay\", \"TotalRevenue\", \"DeliveryDate\", \"TotalPieces\", \"DispUser\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns12\" = Table.RenameColumns(#\"Reordered Columns12\",{{\"TotalRevenue\", \"Total Revenue\"}}),",
                "    #\"Reordered Columns13\" = Table.ReorderColumns(#\"Renamed Columns12\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"Trailer Type\", \"Shipper City\", \"Shipper Name\", \"Shipper State\", \"Bill Distance\", \"Shipper Zip\", \"Carrier Pay\", \"Total Revenue\", \"DispUser\", \"DeliveryDate\", \"TotalPieces\", \"Saleperson Name\"}),",
                "    #\"Renamed Columns13\" = Table.RenameColumns(#\"Reordered Columns13\",{{\"DispUser\", \"Dispatcher\"}, {\"DeliveryDate\", \"Delivery Date\"}}),",
                "    #\"Reordered Columns14\" = Table.ReorderColumns(#\"Renamed Columns13\",{\"Carrier Name\", \"Consignee City\", \"Consignee Name\", \"Consignee State\", \"Consignee  Zip\", \"Customer ID\", \"Ship Date\", \"Commodity\", \"Order ID\", \"Trailer Type\", \"Shipper City\", \"Shipper Name\", \"Shipper State\", \"Bill Distance\", \"Shipper Zip\", \"Carrier Pay\", \"Total Revenue\", \"Dispatcher\", \"Delivery Date\", \"Saleperson Name\", \"TotalPieces\"}),",
                "    #\"Renamed Columns14\" = Table.RenameColumns(#\"Reordered Columns14\",{{\"TotalPieces\", \"Cases Pieces\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns14\",{{\"Delivery Date\", type date}, {\"Ship Date\", type date}, {\"Consignee  Zip\", type text}, {\"Shipper Zip\", type text}}),",
                "    #\"Removed Errors\" = Table.RemoveRowsWithErrors(#\"Changed Type1\", {\"Consignee  Zip\"}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Removed Errors\",{\"Consignee  Zip\", \"Shipper Zip\"}),",
                "    #\"Renamed Columns15\" = Table.RenameColumns(#\"Removed Columns\",{{\"Saleperson Name\", \"Salesperson Name\"}}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Renamed Columns15\",{{\"Customer ID\", type text}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type2\",null,\"UNS\",Replacer.ReplaceValue,{\"Customer ID\"}),",
                "    #\"Changed Type3\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"Commodity\", type text}, {\"Order ID\", type text}, {\"Trailer Type\", type text}, {\"Bill Distance\", type number}, {\"Carrier Pay\", Currency.Type}, {\"Total Revenue\", Currency.Type}, {\"Salesperson Name\", type text}}),",
                "    #\"Filtered Rows1\" = Table.SelectRows(#\"Changed Type3\", each true),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Filtered Rows1\",{{\"Dispatcher\", Text.Upper, type text}}),",
                "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Uppercased Text\",\"JOE\",\"JCAMPBELL\",Replacer.ReplaceValue,{\"Dispatcher\"}),",
                "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"JOECAMPBEL\",\"JCAMPBELL\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Filtered Rows2\" = Table.SelectRows(#\"Replaced Value2\", each true),",
                "    #\"Trimmed Text1\" = Table.TransformColumns(#\"Filtered Rows2\",{{\"Consignee City\", Text.Trim, type text}}),",
                "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Trimmed Text1\",\"TONY\",\"TCAMPBELL\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Trimmed Text\" = Table.TransformColumns(#\"Replaced Value3\",{{\"Dispatcher\", Text.Trim, type text}, {\"Consignee State\", Text.Trim, type text}, {\"Shipper City\", Text.Trim, type text}, {\"Shipper State\", Text.Trim, type text}}),",
                "    #\"Filtered Rows3\" = Table.SelectRows(#\"Trimmed Text\", each true),",
                "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Filtered Rows3\",\"MELROD\",\"MCHRISTIAN\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Replaced Value4\", \"Shipper City\", \"Shipper City - Copy\"),",
                "    #\"Duplicated Column1\" = Table.DuplicateColumn(#\"Duplicated Column\", \"Shipper State\", \"Shipper State - Copy\"),",
                "    #\"Duplicated Column2\" = Table.DuplicateColumn(#\"Duplicated Column1\", \"Consignee City\", \"Consignee City - Copy\"),",
                "    #\"Duplicated Column3\" = Table.DuplicateColumn(#\"Duplicated Column2\", \"Consignee State\", \"Consignee State - Copy\"),",
                "    #\"Merged Columns\" = Table.CombineColumns(#\"Duplicated Column3\",{\"Shipper City - Copy\", \"Shipper State - Copy\"},Combiner.CombineTextByDelimiter(\", \", QuoteStyle.None),\"Shipper City, State\"),",
                "    #\"Merged Columns1\" = Table.CombineColumns(#\"Merged Columns\",{\"Consignee City - Copy\", \"Consignee State - Copy\"},Combiner.CombineTextByDelimiter(\", \", QuoteStyle.None),\"Consignee City, State\"),",
                "    #\"Merged Columns2\" = Table.CombineColumns(#\"Merged Columns1\",{\"Shipper City, State\", \"Consignee City, State\"},Combiner.CombineTextByDelimiter(\" - \", QuoteStyle.None),\"Lane\"),",
                "    #\"Uppercased Text1\" = Table.TransformColumns(#\"Merged Columns2\",{{\"Lane\", Text.Upper, type text}}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Uppercased Text1\",{{\"Salesperson Name\", Order.Descending}}),",
                "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Sorted Rows\", \"Salesperson Name\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv), {\"Salesperson Name.1\", \"Salesperson Name.2\"}),",
                "    #\"Changed Type4\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Salesperson Name.1\", type text}, {\"Salesperson Name.2\", type text}}),",
                "    #\"Trimmed Text2\" = Table.TransformColumns(#\"Changed Type4\",{{\"Salesperson Name.2\", Text.Trim, type text}}),",
                "    #\"Extracted Text Before Delimiter\" = Table.TransformColumns(#\"Trimmed Text2\", {{\"Salesperson Name.2\", each Text.BeforeDelimiter(_, \" \"), type text}}),",
                "    #\"Merged Columns3\" = Table.CombineColumns(#\"Extracted Text Before Delimiter\",{\"Salesperson Name.2\", \"Salesperson Name.1\"},Combiner.CombineTextByDelimiter(\" \", QuoteStyle.None),\"Salesperson Name\")",
                "in",
                "    #\"Merged Columns3\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "shipper_zips",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Shipper Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d1bcca77-9b8c-46a1-9f1b-ff10f034268d",
            "sourceColumn": "Shipper Zip",
            "summarizeBy": "none"
          },
          {
            "name": "3 Digit Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "573e2434-e3ff-48ba-8024-82bec2c425bc",
            "sourceColumn": "3 Digit Zip",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "a1ccc5d0-5216-495c-8401-1c44ad12db42",
        "partitions": [
          {
            "name": "shipper_zips",
            "mode": "import",
            "queryGroup": "Zip Codes",
            "source": {
              "expression": [
                "let",
                "    Source = orders,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Shipper Zip\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Inserted First Characters\" = Table.AddColumn(#\"Removed Blank Rows\", \"First Characters\", each Text.Start([Shipper Zip], 3), type text),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Inserted First Characters\",{{\"First Characters\", \"3 Digit Zip\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "shipper_three_digit_zips",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "3 Digit Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "15dc0f9e-94a5-46b9-8e43-bb0158584719",
            "sourceColumn": "3 Digit Zip",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "29f48a75-0b12-4d0f-bdcf-f5920ce974f2",
        "partitions": [
          {
            "name": "shipper_three_digit_zips",
            "mode": "import",
            "queryGroup": "Zip Codes",
            "source": {
              "expression": [
                "let",
                "    Source = shipper_zips,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"3 Digit Zip\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\")",
                "in",
                "    #\"Removed Duplicates\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "consignee_zip_codes",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Consignee Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "986f85f3-5f5e-43c2-951a-dedaa23e4e0c",
            "sourceColumn": "Consignee Zip",
            "summarizeBy": "none"
          },
          {
            "name": "Consignee Three Digit Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d5c05e67-8415-4199-a116-73601f5b7eae",
            "sourceColumn": "Consignee Three Digit Zip",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "46c19c9d-3ed3-48e3-8b58-b4786c10fdf4",
        "partitions": [
          {
            "name": "consignee_zip_codes",
            "mode": "import",
            "queryGroup": "Zip Codes",
            "source": {
              "expression": [
                "let",
                "    Source = orders,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Consignee Zip\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),",
                "    #\"Removed Blank Rows\" = Table.SelectRows(#\"Removed Duplicates\", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {\"\", null}))),",
                "    #\"Inserted First Characters\" = Table.AddColumn(#\"Removed Blank Rows\", \"First Characters\", each Text.Start([Consignee Zip], 3), type text),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Inserted First Characters\",{{\"First Characters\", \"Consignee Three Digit Zip\"}})",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "consignee_three_digit_zip_codes",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Consignee Three Digit Zip",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e03da5b8-375e-454a-9d20-c823f37267f6",
            "sourceColumn": "Consignee Three Digit Zip",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "b3484401-356b-4e85-b121-56d03170fa26",
        "partitions": [
          {
            "name": "consignee_three_digit_zip_codes",
            "mode": "import",
            "queryGroup": "Zip Codes",
            "source": {
              "expression": [
                "let",
                "    Source = consignee_zip_codes,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"Consignee Three Digit Zip\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\")",
                "in",
                "    #\"Removed Duplicates\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "sop_issues",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Movement ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f06eb9b3-d7b5-45d3-8a58-83eb64c224e1",
            "sourceColumn": "Movement ID",
            "summarizeBy": "none"
          },
          {
            "name": "SOP Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a758fd32-8abc-4c7b-bf5c-9088f9456c32",
            "sourceColumn": "SOP Type",
            "summarizeBy": "none"
          },
          {
            "name": "Date_time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "24808ac8-9754-461d-b501-094c405ce40d",
            "sourceColumn": "Date_time",
            "summarizeBy": "none"
          },
          {
            "name": "Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "a77a694f-77ba-407a-8136-02d0c8131b45",
            "sourceColumn": "Time",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "e78cb277-9a3a-41af-b956-2f397ca138e9",
        "partitions": [
          {
            "name": "sop_issues",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/SOP%20Has%20Been%20Marked/SOP%20Has%20Been%20Marked.xlsx\"), null, true),",
                "    Sheet1_Sheet = Source{[Item=\"Sheet1\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"Movement ID\", Int64.Type}, {\"SOP Type\", type text}, {\"Date_time\", type datetime}}),",
                "    #\"Inserted Time\" = Table.AddColumn(#\"Changed Type\", \"Time\", each DateTime.Time([Date_time]), type time),",
                "    #\"Extracted Date\" = Table.TransformColumns(#\"Inserted Time\",{{\"Date_time\", DateTime.Date, type date}})",
                "in",
                "    #\"Extracted Date\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "payments_received",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Order.Move Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "731cf421-5582-40f4-93e6-e002f2cf3b35",
            "sourceColumn": "Order.Move Status",
            "summarizeBy": "none"
          },
          {
            "name": "Order.Order ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bcade7e8-b8e5-4ea6-85fe-0095132a35e2",
            "sourceColumn": "Order.Order ID",
            "summarizeBy": "none"
          },
          {
            "name": "Payment Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "c7c475c5-9047-461f-aec6-5fd20511e47d",
            "sourceColumn": "Payment Date",
            "summarizeBy": "none"
          },
          {
            "name": "Total Charges",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "bf3f4d50-fd56-48f7-b58f-8b87b17056f9",
            "sourceColumn": "Total Charges",
            "summarizeBy": "sum"
          },
          {
            "name": "Bill Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "89de9286-9ece-43d9-968a-c39c9ec0dd83",
            "sourceColumn": "Bill Date",
            "summarizeBy": "none"
          },
          {
            "name": "Order Payment Balance",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "9c6a8699-8dae-4977-a4fe-1fa4bd5b2d0e",
            "sourceColumn": "Order Payment Balance",
            "summarizeBy": "sum"
          },
          {
            "name": "Order Invoice And Debit Amount",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c7ea95b2-dc07-4351-a5be-e844f8b9231a",
            "sourceColumn": "Order Invoice And Debit Amount",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "c6fd4ef6-4883-4787-92cf-a1d3817e718c",
        "partitions": [
          {
            "name": "payments_received",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = AnalysisServices.Databases(\"bl-mcbiserver\", [TypedMeasureColumns=true, Implementation=\"2.0\"]),",
                "    McLeodIQ_2019_Powerbroker = Source{[Name=\"McLeodIQ_2019_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker1 = McLeodIQ_2019_Powerbroker{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    McLeodIQ_Powerbroker2 = McLeodIQ_Powerbroker1{[Id=\"McLeodIQ_Powerbroker\"]}[Data],",
                "    #\"Added Items\" = Cube.Transform(McLeodIQ_Powerbroker2,",
                "        {",
                "            {Cube.AddAndExpandDimensionColumn, \"[Order]\", {\"[Order].[Move Status].[Move Status]\", \"[Order].[Order ID].[Order ID]\"}, {\"Order.Move Status\", \"Order.Order ID\"}},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Date Payment Recvd]\", {\"[Date Payment Recvd].[Date Payment Recvd.Date].[Date Payment Recvd.Date]\"}, {\"Date Payment Recvd.Date Payment Recvd.Date\"}},",
                "            {Cube.AddMeasureColumn, \"Total Charges\", \"[Measures].[Total Charges]\"},",
                "            {Cube.AddAndExpandDimensionColumn, \"[Date Billed]\", {\"[Date Billed].[Date Billed.Date].[Date Billed.Date]\"}, {\"Date Billed.Date Billed.Date\"}},",
                "            {Cube.AddMeasureColumn, \"Order Payment Balance\", \"[Measures].[Order Payment Balance]\"},",
                "            {Cube.AddMeasureColumn, \"Order Invoice And Debit Amount\", \"[Measures].[Order Invoice And Debit Amount]\"}",
                "        }),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Items\",{{\"Date Billed.Date Billed.Date\", \"Bill Date\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each (Cube.AttributeMemberId([Order.Move Status]) = \"[Order].[Move Status].&[Covered]\" meta [DisplayName = \"Covered\"] or Cube.AttributeMemberId([Order.Move Status]) = \"[Order].[Move Status].&[Delivered]\" meta [DisplayName = \"Delivered\"] or Cube.AttributeMemberId([Order.Move Status]) = \"[Order].[Move Status].&[In Progress]\" meta [DisplayName = \"In Progress\"])),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"Date Payment Recvd.Date Payment Recvd.Date\", type date}, {\"Bill Date\", type date}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Date Payment Recvd.Date Payment Recvd.Date\", \"Payment Date\"}}),",
                "    #\"Filtered Rows1\" = Table.SelectRows(#\"Renamed Columns1\", each [Bill Date] > #date(1969, 12, 31))",
                "in",
                "    #\"Filtered Rows1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "carrier_dispatch_movement_data",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Order ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "09789d9a-a31f-4bda-bf85-66c53b3274e8",
            "sourceColumn": "Order ID",
            "summarizeBy": "count"
          },
          {
            "name": "Movement ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b41653ff-57dc-44b1-a51e-9477faa1d594",
            "sourceColumn": "Movement ID",
            "summarizeBy": "none"
          },
          {
            "name": "Available Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy-mm-dd hh:nn:ss",
            "lineageTag": "d9d1fe19-9a21-48fc-9424-8f155c9357a9",
            "sourceColumn": "Available Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Covered Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "80575f38-ab77-4fc0-afcf-033afa27c34e",
            "sourceColumn": "Covered Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Give Back Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "2c17b94a-0284-49f7-9a88-0318fa3dc9c3",
            "sourceColumn": "Give Back Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Load Board Date Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "dataType": "dateTime",
            "formatString": "yyyy-mm-dd hh:nn:ss",
            "lineageTag": "fb9ae9cc-b264-4b4a-b950-8f65eb6fb86a",
            "sourceColumn": "Load Board Date Time",
            "summarizeBy": "none"
          },
          {
            "name": "Start Max Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "dataType": "decimal",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "1dfe6b40-ae8c-4603-b120-71c99632ca14",
            "sourceColumn": "Start Max Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "End Max Pay",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"currencyCulture\":\"en-US\"}"
              }
            ],
            "dataType": "decimal",
            "formatString": "\\$#,0.###############;(\\$#,0.###############);\\$#,0.###############",
            "lineageTag": "69f143d1-e80f-44b1-81e4-cac54cb72beb",
            "sourceColumn": "End Max Pay",
            "summarizeBy": "sum"
          },
          {
            "name": "Count of CarrierOffers",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2de6ed47-a6ee-4657-8e46-a7974b2e9bf5",
            "sourceColumn": "Count of CarrierOffers",
            "summarizeBy": "none"
          },
          {
            "name": "Number of Pass Backs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b2bf2cfe-ede7-41e6-82a6-e91f3c6669ad",
            "sourceColumn": "Number of Pass Backs",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "a38a15e7-6fb6-48f7-8307-30596cfd6e34",
        "partitions": [
          {
            "name": "carrier_dispatch_movement_data",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Carrier%20Dispatch%20Movement%20Data/Carrier%20Dispatch%20Movement%20Data.xlsx\"), null, true),",
                "    movement_data_Table = Source{[Item=\"movement_data\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(movement_data_Table,{{\"Order ID\", Int64.Type}, {\"Movement ID\", Int64.Type}, {\"Available Date Time\", type datetime}, {\"Covered Date Time\", type datetime}, {\"Give Back Date Time\", type datetime}, {\"Load Board Date Time\", type datetime}, {\"Start Max Pay\", Int64.Type}, {\"End Max Pay\", Int64.Type}, {\"Count of CarrierOffers\", type any}, {\"Number of Pass Backs\", Int64.Type}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Changed Type\",{{\"Start Max Pay\", Currency.Type}, {\"End Max Pay\", Currency.Type}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "check_call_roller",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Movement ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f03fc93f-5bd5-4bec-a77a-3852d694eb05",
            "sourceColumn": "Movement ID",
            "summarizeBy": "none"
          },
          {
            "name": "Scheduled Check Call Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "92b354bc-a43a-444e-9d43-ecc8c7a4fa5b",
            "sourceColumn": "Scheduled Check Call Date",
            "summarizeBy": "none"
          },
          {
            "name": "Pass / Fail",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ccffc4d4-d1b9-490f-b324-a8b12cfe2f75",
            "sourceColumn": "Pass / Fail",
            "summarizeBy": "none"
          },
          {
            "name": "Reason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "46c62862-2002-4362-8a5d-9282c7b2fb40",
            "sourceColumn": "Reason",
            "summarizeBy": "none"
          },
          {
            "name": "Scheduled Check Call Time",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Time"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Time",
            "lineageTag": "cc7abdcc-29ce-43d7-a8e4-ce4e819b1c72",
            "sourceColumn": "Scheduled Check Call Time",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "975bb29b-68cf-40b5-bf41-d087f30804db",
        "partitions": [
          {
            "name": "check_call_roller",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Moved%20Check%20Calls/Check%20Call%20Pass%20or%20fail.xlsx\"), null, true),",
                "    Check_Call_Table_Table = Source{[Item=\"Check_Call_Table\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Check_Call_Table_Table,{{\"Movement ID\", Int64.Type}, {\"Date Time\", type datetime}, {\"Pass / Fail\", type text}, {\"Reason\", type text}}),",
                "    #\"Inserted Time\" = Table.AddColumn(#\"Changed Type\", \"Time\", each DateTime.Time([Date Time]), type time),",
                "    #\"Extracted Date\" = Table.TransformColumns(#\"Inserted Time\",{{\"Date Time\", DateTime.Date, type date}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Extracted Date\",{{\"Date Time\", \"Scheduled Check Call Date\"}, {\"Time\", \"Scheduled Check Call Time\"}}),",
                "    #\"Calculated Start of Hour\" = Table.TransformColumns(#\"Renamed Columns\",{{\"Scheduled Check Call Time\", Time.StartOfHour, type time}})",
                "in",
                "    #\"Calculated Start of Hour\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "highway_onboarded",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "completed_at",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "c1df0a21-fbb6-40e1-b78d-59d1ebb7b39b",
            "sourceColumn": "completed_at",
            "summarizeBy": "none"
          },
          {
            "name": "Dispatcher",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d8cf10d6-7d39-4bfc-8040-5122792e064a",
            "sourceColumn": "Dispatcher",
            "summarizeBy": "none"
          },
          {
            "name": "email",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c49b4bb2-6aab-41fc-a9e0-c20c749bedb5",
            "sourceColumn": "email",
            "summarizeBy": "none"
          },
          {
            "name": "count",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "44d79304-e3b8-4f27-ae77-39378447397c",
            "sourceColumn": "count",
            "summarizeBy": "sum"
          },
          {
            "name": "dispatcher_key.Team",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "62f7936c-bc90-4943-8700-594ccd363690",
            "sourceColumn": "dispatcher_key.Team",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "c96b9197-30a3-4f50-967c-56bd0bcb42ea",
        "partitions": [
          {
            "name": "highway_onboarded",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Highway%20Onbaorded.xlsx\"), null, true),",
                "    #\"Connection Count per User-2023-_Sheet\" = Source{[Item=\"Connection Count per User-2024-\",Kind=\"Sheet\"]}[Data],",
                "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Connection Count per User-2023-_Sheet\", [PromoteAllScalars=true]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Promoted Headers\",{{\"completed_at\", type date}, {\"id\", Int64.Type}, {\"first_name\", type text}, {\"last_name\", type text}, {\"email\", type text}, {\"count\", Int64.Type}}),",
                "    #\"Merged Columns\" = Table.CombineColumns(#\"Changed Type\",{\"first_name\", \"last_name\"},Combiner.CombineTextByDelimiter(\" \", QuoteStyle.None),\"Merged\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Merged Columns\",{{\"Merged\", \"Dispatcher\"}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Renamed Columns\",{\"id\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"completed_at\", type date}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type1\",\"Robert M. Briede Jr.\",\"ROBERT BRIEDE\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Replaced Value1\" = Table.ReplaceValue(#\"Replaced Value\",\"Ty Grimes\",\"Tyler Grimes\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Replaced Value2\" = Table.ReplaceValue(#\"Replaced Value1\",\"Stanislaw Kasmer\",\"Stan Kasmer\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Replaced Value3\" = Table.ReplaceValue(#\"Replaced Value2\",\"Katie Palmer\",\"Katherine Palmer\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Replaced Value4\" = Table.ReplaceValue(#\"Replaced Value3\",\"Matt Singler\",\"Matthew Singler\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Replaced Value5\" = Table.ReplaceValue(#\"Replaced Value4\",\"Kathryn E Kaczmarek\",\"Katie Kaczmarek\",Replacer.ReplaceText,{\"Dispatcher\"}),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Replaced Value5\",{{\"Dispatcher\", Text.Upper, type text}}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Uppercased Text\", {\"Dispatcher\"}, dispatcher_key, {\"Dispatcher Name\"}, \"dispatcher_key\", JoinKind.LeftOuter),",
                "    #\"Expanded dispatcher_key\" = Table.ExpandTableColumn(#\"Merged Queries\", \"dispatcher_key\", {\"Team\"}, {\"dispatcher_key.Team\"}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Expanded dispatcher_key\",{{\"completed_at\", Order.Descending}})",
                "in",
                "    #\"Sorted Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "pay_schedule",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Pay Period",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4d4b917a-b61f-4104-80cc-76cee4564507",
            "sourceColumn": "Pay Period",
            "summarizeBy": "sum"
          },
          {
            "name": "Commission Month",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "ea57e895-48e3-441b-8004-066557ca78f5",
            "sourceColumn": "Commission Month",
            "summarizeBy": "none"
          },
          {
            "name": "Pay Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "2c235e1c-6c3f-41e6-ba5a-68e06f9beb21",
            "sourceColumn": "Pay Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "06a78adf-c706-4c53-aeac-e6eb9c0e2b81",
        "partitions": [
          {
            "name": "pay_schedule",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Commission%20Payroll%20Schedule.xlsx\"), null, true),",
                "    BasePlusCommissionNewStructure_Table = Source{[Item=\"BasePlusCommissionNewStructure\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(BasePlusCommissionNewStructure_Table,{{\"Pay Period\", Int64.Type}, {\"Commission Month\", type text}, {\"Pay Date\", type date}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Changed Type\",{{\"Commission Month\", type date}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "job_history",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Row ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "904aa817-4cca-4b75-8d4e-36c8f11291fb",
            "sourceColumn": "Row ID",
            "summarizeBy": "none"
          },
          {
            "name": "Job Start Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "accb1b2a-c512-4df7-b61d-1e7b48321792",
            "sourceColumn": "Job Start Date",
            "summarizeBy": "none"
          },
          {
            "name": "ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cbca5fcd-782e-4d6b-b5fc-c283645f28e9",
            "sourceColumn": "ID",
            "summarizeBy": "none"
          },
          {
            "name": "Division",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "75ed8b8f-162f-4707-93aa-6d4f13f257da",
            "sourceColumn": "Division",
            "summarizeBy": "none"
          },
          {
            "name": "Department",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7c944ecb-9e78-4304-bfd7-5c4a8b8e6102",
            "sourceColumn": "Department",
            "summarizeBy": "none"
          },
          {
            "name": "Job Title",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f722c561-dd42-4c64-8b66-999c34f412ad",
            "sourceColumn": "Job Title",
            "summarizeBy": "none"
          },
          {
            "name": "Reports To",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e81aca67-60e4-4df1-a142-25ba3a509341",
            "sourceColumn": "Reports To",
            "summarizeBy": "none"
          },
          {
            "name": "Mcleod Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ff3b6d9e-afa8-4354-816a-c95ef9673c4d",
            "sourceColumn": "Mcleod Code",
            "summarizeBy": "none"
          },
          {
            "name": "Work Email",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3bdb4262-9a10-4fcd-9cff-525ec1950523",
            "sourceColumn": "Work Email",
            "summarizeBy": "none"
          },
          {
            "name": "McLeod Salesperson Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b85b596b-06d1-4f80-b1a2-01d8f990c28f",
            "sourceColumn": "McLeod Salesperson Code",
            "summarizeBy": "none"
          },
          {
            "name": "Job End Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "bedfec56-b565-4955-851c-b03ef9656fe8",
            "sourceColumn": "Job End Date",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "abd8ef60-9f2c-470f-a2e3-31fc24599578",
        "partitions": [
          {
            "name": "job_history",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Bamboo/Job%20History.xlsx\"), null, true),",
                "    job_history_Table = Source{[Item=\"job_history\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(job_history_Table,{{\"Row ID\", type text}, {\"Name\", type text}, {\"Prefered Name\", type text}, {\"Job Start Date\", type date}, {\"ID\", Int64.Type}, {\"Division\", type text}, {\"Department\", type text}, {\"Job Title\", type text}, {\"Reports To\", type text}, {\"Mcleod Code\", type text}, {\"Work Email\", type text}, {\"McLeod Salesperson Code\", type text}, {\"End Date\", type date}, {\"TerminationDate\", type any}}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Changed Type\", \"Job End Date\", each if [End Date] = null then [TerminationDate] else [End Date]),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Conditional Column\",{\"End Date\", \"TerminationDate\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",\"0000-00-00\",\"\",Replacer.ReplaceValue,{\"Job End Date\"}),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Replaced Value\",{\"Name\", \"Prefered Name\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Removed Columns1\",{{\"Job End Date\", type date}})",
                "in",
                "    #\"Changed Type1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "employees",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cd7ce602-defc-43ac-a7a7-4f1e88239c9a",
            "sourceColumn": "ID",
            "summarizeBy": "none"
          },
          {
            "name": "Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9523bdd8-901c-4e02-ad77-381d2bcded17",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Hire Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "ec84285b-a52e-40cf-9c74-c3e9a6cfcf8e",
            "sourceColumn": "Hire Date",
            "summarizeBy": "none"
          },
          {
            "name": "Termination Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "ff726827-95e7-4ada-af03-207be03f89dc",
            "sourceColumn": "Termination Date",
            "summarizeBy": "none"
          },
          {
            "name": "Reporting to",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d6a37ef5-564f-4720-85ce-2cb9b9022449",
            "sourceColumn": "Reporting to",
            "summarizeBy": "none"
          },
          {
            "name": "Termination Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "56af5af3-194a-4d8b-a532-d45de2f301ec",
            "sourceColumn": "Termination Type",
            "summarizeBy": "none"
          },
          {
            "name": "Termination Reason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "78e229bf-5e71-48e2-b873-c679a348835f",
            "sourceColumn": "Termination Reason",
            "summarizeBy": "none"
          },
          {
            "name": "Regrettable or non- regrettable",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c13221f6-4b05-4d12-8d81-afbafa7718be",
            "sourceColumn": "Regrettable or non- regrettable",
            "summarizeBy": "none"
          },
          {
            "name": "Job Title",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "60d74148-2866-40a7-a700-f8d4927e2f19",
            "sourceColumn": "Job Title",
            "summarizeBy": "none"
          },
          {
            "name": "McLeod User Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c81540e9-c6be-4aa3-836a-fba1ccf42ec2",
            "sourceColumn": "McLeod User Code",
            "summarizeBy": "none"
          },
          {
            "name": "McLeod Salesperson Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "0e735583-4262-499c-b19a-84672c840f75",
            "sourceColumn": "McLeod Salesperson Code",
            "summarizeBy": "none"
          },
          {
            "name": "Work Email",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e5dbb213-47b3-4353-8266-edb40184b7c8",
            "sourceColumn": "Work Email",
            "summarizeBy": "none"
          },
          {
            "name": "Devision",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4d6c4c6b-6d1f-44d7-98a5-5ec5de9d914a",
            "sourceColumn": "Devision",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "5f921b3f-e0bd-4c57-84dd-41df4142eb25",
        "partitions": [
          {
            "name": "employees",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Excel.Workbook(Web.Contents(\"https://bridgelogisticsinc.sharepoint.com/sites/BL-BiTeam/Shared%20Documents/bridge_iq/Data%20Sets/Bamboo/Employees.xlsx\"), null, true),",
                "    employees_Table = Source{[Item=\"employees\",Kind=\"Table\"]}[Data],",
                "    #\"Changed Type\" = Table.TransformColumnTypes(employees_Table,{{\"ID\", Int64.Type}, {\"Name\", type text}, {\"Prefered Name\", type text}, {\"Hire Date\", type date}, {\"Termination Date\", type any}, {\"Reporting to\", type text}, {\"Termination Type\", type text}, {\"Termination Reason\", type text}, {\"Regrettable or non- regrettable\", type text}, {\"Job Title\", type text}, {\"McLeod User Code\", type text}, {\"McLeod Salesperson Code\", type text}, {\"Work Email\", type text}}),",
                "    #\"Split Column by Delimiter\" = Table.SplitColumn(#\"Changed Type\", \"Name\", Splitter.SplitTextByDelimiter(\",\", QuoteStyle.Csv), {\"Name.1\", \"Name.2\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Split Column by Delimiter\",{{\"Name.1\", type text}, {\"Name.2\", type text}}),",
                "    #\"Trimmed Text\" = Table.TransformColumns(#\"Changed Type1\",{{\"Name.2\", Text.Trim, type text}}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Trimmed Text\", \"First Name\", each if [Prefered Name] = null then [Name.2] else [Prefered Name]),",
                "    #\"Merged Columns\" = Table.CombineColumns(#\"Added Conditional Column\",{\"First Name\", \"Name.1\"},Combiner.CombineTextByDelimiter(\" \", QuoteStyle.None),\"Name\"),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Merged Columns\",{\"Name.2\", \"Prefered Name\"}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Removed Columns\",\"0000-00-00\",\"\",Replacer.ReplaceValue,{\"Termination Date\"}),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"Termination Date\", type date}})",
                "in",
                "    #\"Changed Type2\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "salesperson_key",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "ID",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "3cd80c87-6c63-46b1-95c8-c9e3a659b69e",
            "sourceColumn": "ID",
            "summarizeBy": "none"
          },
          {
            "name": "Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e4704ffb-b723-43e9-9673-ff4cfe3dc2bf",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Hire Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "49aa5e0a-6522-4ddb-ad65-131436c6561d",
            "sourceColumn": "Hire Date",
            "summarizeBy": "none"
          },
          {
            "name": "Termination Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "ae39ea18-535c-4e51-860a-3a57b5d37fe5",
            "sourceColumn": "Termination Date",
            "summarizeBy": "none"
          },
          {
            "name": "Reporting to",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9f42f50a-1cf8-4ef9-9bfb-017feea0cb08",
            "sourceColumn": "Reporting to",
            "summarizeBy": "none"
          },
          {
            "name": "Termination Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1629ec25-3408-440d-80d4-d88a7055720c",
            "sourceColumn": "Termination Type",
            "summarizeBy": "none"
          },
          {
            "name": "Termination Reason",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "18d45931-0c3f-485c-9a05-eb1aa917ed22",
            "sourceColumn": "Termination Reason",
            "summarizeBy": "none"
          },
          {
            "name": "Regrettable or non- regrettable",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f9503f62-1907-419a-bb8e-8d8e04e6ba8a",
            "sourceColumn": "Regrettable or non- regrettable",
            "summarizeBy": "none"
          },
          {
            "name": "Job Title",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "fb41b9bc-a8df-4774-9077-43865b0680a7",
            "sourceColumn": "Job Title",
            "summarizeBy": "none"
          },
          {
            "name": "McLeod User Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a467783f-9ddf-4296-ba04-9ceeb0fb4f97",
            "sourceColumn": "McLeod User Code",
            "summarizeBy": "none"
          },
          {
            "name": "McLeod Salesperson Code",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "01465035-2dce-4684-be04-8b09422e3de7",
            "sourceColumn": "McLeod Salesperson Code",
            "summarizeBy": "none"
          },
          {
            "name": "Work Email",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "56ec310b-83b3-4799-8701-cbf92a5ba571",
            "sourceColumn": "Work Email",
            "summarizeBy": "none"
          },
          {
            "name": "Devision",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "49fb8c54-e90e-457a-a887-7dcec44c33e7",
            "sourceColumn": "Devision",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "dc38fb35-7721-42f3-9170-246236066562",
        "partitions": [
          {
            "name": "salesperson_key",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = employees,",
                "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([McLeod Salesperson Code] <> null))",
                "in",
                "    #\"Filtered Rows\""
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}